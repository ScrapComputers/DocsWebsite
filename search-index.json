[{"content":"The issue was due to Display.clear making clones of the backpanel! The bug has been fixed.\nStay tuned for more updates! (And Hotfixes!)\n","date":"2024-06-27","id":0,"permalink":"/blog/another-display-lag-bug-fixed/","summary":"I discovered another display \u0026ldquo;memory leak\u0026rdquo; bug that was causing duplicated effects.","tags":[],"title":"Another display lag bug fixed!"},{"content":"","date":"2024-06-27","id":1,"permalink":"/blog/","summary":"","tags":[],"title":"Blog"},{"content":"","date":"2024-06-27","id":2,"permalink":"/categories/bugfix/hotfix/","summary":"","tags":[],"title":"Bugfix/Hotfix"},{"content":"","date":"2024-06-27","id":3,"permalink":"/categories/","summary":"","tags":[],"title":"Categories"},{"content":"","date":"2024-06-27","id":4,"permalink":"/contributors/","summary":"","tags":[],"title":"Contributors"},{"content":"","date":"2024-06-27","id":5,"permalink":"/","summary":"","tags":[],"title":"ScrapComputers"},{"content":"","date":"2024-06-27","id":6,"permalink":"/categories/updates/","summary":"","tags":[],"title":"Updates"},{"content":"","date":"2024-06-27","id":7,"permalink":"/contributors/veradev/","summary":"","tags":[],"title":"VeraDev"},{"content":"Although it wasn’t exactly a memory leak, it had a similar impact, leading to decreased performance.\nThis update doesn’t introduce any new features, but we’re glad to have fixed the bug! Stay tuned for more updates!\n","date":"2024-06-26","id":8,"permalink":"/blog/hotfix-for-display-lag-issue/","summary":"We\u0026rsquo;ve just released a new hotfix to address a display issue that was causing lag over time.","tags":[],"title":"Hotfix for Display Lag Issue"},{"content":"You might be wondering, \u0026ldquo;Did we just undo a bugfix to solve a problem?\u0026rdquo; Yes, that’s precisely what happened! In our latest update for ScrapComputers, we had to remove a previous bugfix and essentially reintroduce a bug to address an even more significant issue. Let\u0026rsquo;s dive into the details.\nThe RC Bug: What’s the Deal? For those unfamiliar with the RC bug in ScrapComputers, it allows remote control of components even when they have no physical connections. Sounds neat, right? Well, not really. While this might seem like a handy feature, it led to unexpected behavior and caused more harm than good. The original fix aimed to tackle this issue but ended up causing more trouble. So, we had to roll back the fix to restore stability.\nAn example of the issues caused by the RC bug was that it could \u0026ldquo;brick\u0026rdquo; your computer. Users reported receiving an error message saying, \u0026ldquo;The component cannot be found,\u0026rdquo; even though the component was still connected. This essentially rendered the computer useless because you could no longer interact with that component, which is a significant problem!\nWhat Else Is New? Besides the rollback of the RC bugfix, we\u0026rsquo;ve implemented a few other updates and changes to improve your experience with ScrapComputers. Here\u0026rsquo;s the full changelog:\nRemoved RC Bugfix: We had to revert the fix for the RC bug due to its negative impact. Enhanced Keyboard Functionality in Seats: You can now use the keyboard while sitting in a seat, even though there\u0026rsquo;s no icon indicating this feature when you\u0026rsquo;re connected to the seat. Fixed Critical Computer Issue: Previously, the computer wasn’t affected by our ban-system process. This has now been fixed. What Does This Mean for You? While it might sound counterintuitive to reintroduce a bug, this step was necessary to maintain stability and usability. We’re committed to providing you with a seamless experience in ScrapComputers, and sometimes that involves a bit of backtracking to move forward.\nFresh New Bug Discovery! During our testing and community feedback, we discovered a new bug. One of our community members, The Red Builder, encountered an issue while working on a project with ScrapComputers. When setting self.cl to an empty table in an unsafe environment, it caused significant problems. ScrapComputers uses self.cl for client-side variables, so when he did that, it effectively wiped out his entire computer setup, resulting in errors like unable to find self.sv, which is not typical behavior.\nWe are planning to fix this issue soon. In the meantime, we recommend avoiding setting self.sv or self.cl in the computer when in an unsafe environment.\n","date":"2024-06-25","id":9,"permalink":"/blog/bugfix-update-removing-a-bugfix-to-fix-a-bug/","summary":"We just unimplemented a bugfix as our bugfix. That is not even a joke.","tags":[],"title":"Bugfix Update: Removing a bugfix to fix a bug!"},{"content":"But first, let\u0026rsquo;s dive around a couple of days ago. So, we had an issue where we couldn\u0026rsquo;t manage to sync a variable across mods, but when Ben Bingo asked that issue in The Guild of Scrap Mechanic Modders. Then June gave us the solution! One came after the other. Now we have the best Addon System out of all other computer mods.\nWe also are the 1st ever computer mod to allow the Addon Developers to make configurations with just code! You can make configurations in just two lines, 1 for initializing the config functions and the other for creating them!\nAfter changing how the structure works in the mod and how things work, You can also modify the environment variables of the Computer API! You can also access the Computer API from Components via the Addon API!\nYou can also now take a masked frame for cameras via the getMaskedFrame function. It would be useful for such as detecting objects. What it does is via a mask parameter, Pixels become white if that raycast\u0026rsquo;s result type is the mask (So if the mask is \u0026ldquo;body\u0026rdquo;, all white pixels mean that it hit a \u0026ldquo;body\u0026rdquo;). It can also be an array in case you want to detect multiple things.\nWe also added 2 new modules. The BitStream Module and the VPBS Module. The BitStream Module is a Module to read/write to binary via bitstreams! The VPBS module makes converting from lua tables to binary and vice-versa easier via the bitstream module.\nThere are also more table functions added to your table\u0026rsquo;s tables!\nWe also improved the config updater to be done for every config option. So you don\u0026rsquo;t have to reset your configuration when making addons\nWe also fixed some bugs in the mod! One of the bugs has been solved, but not in the other computer mods.\nThanks to everyone who supported our mods, the people who gaved us suggestions and found bugs! We see you in the next update!\n","date":"2024-06-22","id":10,"permalink":"/blog/update-the-addon-system-update/","summary":"We just made our add-on system a LOT better than before! After 1 issue we encountered, we have done it!","tags":[],"title":"Update: The Addon System Update"},{"content":"This contains the API for the Addon System\n","date":"0001-01-01","id":11,"permalink":"/docs/addon-api/","summary":"This contains the API for the Addon System","tags":[],"title":"Addon API"},{"content":"The antenna component is connected to a network port. If connected, You would be able to send data to other antenna\u0026rsquo;s wireless!\nFunctions getName Antenna.getName()\rGets the name of the antenna\nReturns:\n[ string ] The name of the antenna setName Antenna.setName( name )\rSets the name of the antenna\nname [ string ] The new name of the antenna hasConnection Antenna.hasConnection()\rReturns true if there\u0026rsquo;s a connection with another antenna.\nReturns:\n[ boolean ] True if it has a connection scanAntennas Antenna.scanAntennas()\rGets all the antenna\u0026rsquo;s of the entire world\nReturns:\n[ string[] ] All discovered antennas ","date":"0001-01-01","id":12,"permalink":"/docs/lua-api/components/antenna/","summary":"The antenna component is connected to a network port. If connected, You would be able to send data to other antenna\u0026rsquo;s wireless!","tags":[],"title":"Antenna"},{"content":"The Audio Module for the computer API!\nStructures AudioParameter Results for getParams\nFields: default [ number ] The default value maximum [ number ] The maximum value minimum [ number ] The minimum value ParamsIncorrectTable Result for areParamsCorrect.\nAll issues that the provided parameters have.\nFields: hasNoParamsUsableIssue [ boolean ] If true. that means there are no usable parameters for this audio issues [ string[][] ] A matrix of issues. The 1st array is the parameter\u0026rsquo;s name and the 2nd array is the issues it has for that parameter. How to check if there are NO issues\nIf the issue is empty and hasNoParamsUsableIssue is false. Then there are NO issues!\nYou can check by doing this\n1if not issues.hasNoParamsUsableIssue and sm.scrapcomputers.table.getTotalItemsDict(issues.issues) == 0 then 2 -- There are NO issues 3 4 print(\u0026#34;No issues found\u0026#34;) 5else 6 -- There is an issue 7 8 print(\u0026#34;A issue(\u0026#39;s) has been noticed\u0026#34;) 9end\rFunctions areParamsCorrect sm.scrapcomputers.audio.areParamsCorrect( name, params )\rReturns information about audio parameters in case they have any issues.\nArguments:\nname [ string ] The name of the audio to check params [ AudioParameter[] ] The name of the audio to check Returns:\n[ ParamsIncorrectTable ] All issues with those parameters. exists sm.scrapcomputers.audio.exists( name )\rReturns true if the audio name exists in Scrap Mechanic.\nArguments:\nname [ string ] The name of the audio to check Returns:\n[ boolean ] If true, the audio exists in the game. Else it doesn\u0026rsquo;t! getAudioNames sm.scrapcomputers.audio.getAudioNames()\rGets every audio in existence in Scrap Mechanic and puts them all in a string[] you can access\nReturns:\n[ string[] ] Every singular audio in existence getParams sm.scrapcomputers.audio.getParams( name )\rGets all usable parameters for that audio.\nArguments:\nname [ string ] The name of the audio to get its parameters from Returns:\n[ AudioParameter[] ] All usable parameters for that audio. ","date":"0001-01-01","id":13,"permalink":"/docs/addon-api/modules/audio/","summary":"The Audio Module for the computer API!\nStructures AudioParameter Results for getParams\nFields: default [ number ] The default value maximum [ number ] The maximum value minimum [ number ] The minimum value ParamsIncorrectTable Result for areParamsCorrect.","tags":[],"title":"Audio"},{"content":"The Base64 Module for the computer API!\nFunctions encode sm.scrapcomputers.base64.encode( data )\rConverts a string to be Base64 encoded\nArguments:\ndata [ string ] The data to be converted Returns:\n[ string ] The encoded data decode sm.scrapcomputers.base64.decode( data )\rDecodes a base64 string\nArguments:\ndata [ string ] The data to be decoded Returns:\n[ string ] The decoded data ","date":"0001-01-01","id":14,"permalink":"/docs/addon-api/modules/base64/","summary":"The Base64 Module for the computer API!\nFunctions encode sm.scrapcomputers.base64.encode( data )\rConverts a string to be Base64 encoded\nArguments:","tags":[],"title":"Base64"},{"content":"A BitStream Module that lets you make packet data (for example)\nFunctions new sm.scrapcomputers.bitstream.new( data )\rCreates a new BitStream Stream\nArguments:\ndata [ string? ] Pre-appended binary data. Returns:\n[ BitStream.Stream ] The bitstream itself. ","date":"0001-01-01","id":15,"permalink":"/docs/addon-api/modules/bitstream/","summary":"A BitStream Module that lets you make packet data (for example)\nFunctions new sm.scrapcomputers.bitstream.new( data )\rCreates a new BitStream Stream","tags":[],"title":"Bitstream"},{"content":"A Bitstream that is a stream of bits! (What did you expect!)\nFields pos [ number ] The position in the string itself (Bit by Bit!) bytePos [ number ] he position in the string itself (Byte by Byte!) size [ number ] The size of the stream. Functions dumpString BitStream:dumpString()\rDumps the string\nReturns:\n[ string ] dumpedString The dumped string dumpBase64 BitStream:dumpBase64()\rDumps the string (as base64)\nReturns:\n[ string ] dumpedString The dumped string dumpHex BitStream:dumpHex()\rDumps the string (as hex)\nReturns:\n[ string ] dumpedString The dumped string writeBit BitStream:writeBit( bit )\rWrites a bit\nArguments:\nbit [ boolean|integer ] The bit value to write readBit BitStream:readBit()\rReads a bit\nReturns:\n[ integer? ] 0 or 1 for bit value. Nil if it overflows. writeByte BitStream:writeByte( byte )\rWrites a byte\nArguments:\nbyte [ integer ] The byte to write (Integer because it must be as ASCII char) readByte BitStream:readByte()\rReads a byte\nReturns:\n[ string? ] byte The byte it has read. writeInt8 BitStream:writeInt8( integer )\rWrites a signed 8-bit integer.\nArguments:\ninteger [ integer ] The integer to write readInt8 BitStream:readInt8()\rReads a signed 8-bit integer.\nReturns:\n[ integer? ] The signed 8-bit integer read. writeUInt8 BitStream:writeUInt8( uinteger )\rWrites an unsigned 8-bit integer.\nArguments:\nuinteger [ integer ] The unsigned integer to write. readUInt8 BitStream:readUInt8()\rReads an unsigned 8-bit integer.\nReturns:\n[ integer? ] The unsigned 8-bit integer read. writeInt16 BitStream:writeInt16( integer )\rWrites a signed 16-bit integer.\nArguments:\ninteger [ integer ] The signed integer to write. readInt16 BitStream:readInt16()\rReads a signed 16-bit integer.\nReturns:\n[ integer? ] The signed 16-bit integer read. writeUInt16 BitStream:writeUInt16( uinteger )\rWrites an unsigned 16-bit integer.\nArguments:\nuinteger [ integer ] The unsigned integer to write. readUInt16 BitStream:readUInt16()\rReads an unsigned 16-bit integer.\nReturns:\n[ integer? ] The unsigned 16-bit integer read. writeInt24 BitStream:writeInt24( integer )\rWrites a signed 24-bit integer.\nArguments:\ninteger [ integer ] The signed integer to write. readInt24 BitStream:readInt24()\rReads a signed 24-bit integer.\nReturns:\n[ integer? ] The signed 24-bit integer read. writeUInt24 BitStream:writeUInt24( uinteger )\rWrites an unsigned 24-bit integer.\nArguments:\nuinteger [ integer ] The unsigned integer to write. readUInt24 BitStream:readUInt24()\rReads an unsigned 24-bit integer.\nReturns:\n[ integer? ] The unsigned 24-bit integer read. writeInt32 BitStream:writeInt32( integer )\rWrites a signed 32-bit integer.\nArguments:\ninteger [ integer ] The signed integer to write. readInt32 BitStream:readInt32()\rReads a signed 32-bit integer.\nReturns:\n[ integer? ] The signed 32-bit integer read. writeUInt32 BitStream:writeUInt32( uinteger )\rWrites an unsigned 32-bit integer.\nArguments:\nuinteger [ integer ] The unsigned integer to write. readUInt32 BitStream:readUInt32()\rReads an unsigned 32-bit integer.\nReturns:\n[ integer? ] The unsigned 32-bit integer read. writeString BitStream:writeString( str )\rWrites a string.\nArguments:\nstr [ string ] The string to write. readString BitStream:readString()\rReads a string.\nReturns:\n[ string? ] The string read. ","date":"0001-01-01","id":16,"permalink":"/docs/addon-api/user-data/bitstream/","summary":"A Bitstream that is a stream of bits! (What did you expect!)\nFields pos [ number ] The position in the string itself (Bit by Bit!","tags":[],"title":"BitStream"},{"content":"A Bitstream that is a stream of bits! (What did you expect!)\nFields pos [ number ] The position in the string itself (Bit by Bit!) bytePos [ number ] he position in the string itself (Byte by Byte!) size [ number ] The size of the stream. Functions dumpString BitStream:dumpString()\rDumps the string\nReturns:\n[ string ] dumpedString The dumped string dumpBase64 BitStream:dumpBase64()\rDumps the string (as base64)\nReturns:\n[ string ] dumpedString The dumped string dumpHex BitStream:dumpHex()\rDumps the string (as hex)\nReturns:\n[ string ] dumpedString The dumped string writeBit BitStream:writeBit( bit )\rWrites a bit\nArguments:\nbit [ boolean|integer ] The bit value to write readBit BitStream:readBit()\rReads a bit\nReturns:\n[ integer? ] 0 or 1 for bit value. Nil if it overflows. writeByte BitStream:writeByte( byte )\rWrites a byte\nArguments:\nbyte [ integer ] The byte to write (Integer because it must be as ASCII char) readByte BitStream:readByte()\rReads a byte\nReturns:\n[ string? ] byte The byte it has read. writeInt8 BitStream:writeInt8( integer )\rWrites a signed 8-bit integer.\nArguments:\ninteger [ integer ] The integer to write readInt8 BitStream:readInt8()\rReads a signed 8-bit integer.\nReturns:\n[ integer? ] The signed 8-bit integer read. writeUInt8 BitStream:writeUInt8( uinteger )\rWrites an unsigned 8-bit integer.\nArguments:\nuinteger [ integer ] The unsigned integer to write. readUInt8 BitStream:readUInt8()\rReads an unsigned 8-bit integer.\nReturns:\n[ integer? ] The unsigned 8-bit integer read. writeInt16 BitStream:writeInt16( integer )\rWrites a signed 16-bit integer.\nArguments:\ninteger [ integer ] The signed integer to write. readInt16 BitStream:readInt16()\rReads a signed 16-bit integer.\nReturns:\n[ integer? ] The signed 16-bit integer read. writeUInt16 BitStream:writeUInt16( uinteger )\rWrites an unsigned 16-bit integer.\nArguments:\nuinteger [ integer ] The unsigned integer to write. readUInt16 BitStream:readUInt16()\rReads an unsigned 16-bit integer.\nReturns:\n[ integer? ] The unsigned 16-bit integer read. writeInt24 BitStream:writeInt24( integer )\rWrites a signed 24-bit integer.\nArguments:\ninteger [ integer ] The signed integer to write. readInt24 BitStream:readInt24()\rReads a signed 24-bit integer.\nReturns:\n[ integer? ] The signed 24-bit integer read. writeUInt24 BitStream:writeUInt24( uinteger )\rWrites an unsigned 24-bit integer.\nArguments:\nuinteger [ integer ] The unsigned integer to write. readUInt24 BitStream:readUInt24()\rReads an unsigned 24-bit integer.\nReturns:\n[ integer? ] The unsigned 24-bit integer read. writeInt32 BitStream:writeInt32( integer )\rWrites a signed 32-bit integer.\nArguments:\ninteger [ integer ] The signed integer to write. readInt32 BitStream:readInt32()\rReads a signed 32-bit integer.\nReturns:\n[ integer? ] The signed 32-bit integer read. writeUInt32 BitStream:writeUInt32( uinteger )\rWrites an unsigned 32-bit integer.\nArguments:\nuinteger [ integer ] The unsigned integer to write. readUInt32 BitStream:readUInt32()\rReads an unsigned 32-bit integer.\nReturns:\n[ integer? ] The unsigned 32-bit integer read. writeString BitStream:writeString( str )\rWrites a string.\nArguments:\nstr [ string ] The string to write. readString BitStream:readString()\rReads a string.\nReturns:\n[ string? ] The string read. ","date":"0001-01-01","id":17,"permalink":"/docs/lua-api/user-data/bitstream/","summary":"A Bitstream that is a stream of bits! (What did you expect!)\nFields pos [ number ] The position in the string itself (Bit by Bit!","tags":[],"title":"BitStream"},{"content":"The camera allows you to take screenshots or even render video from the world to your display! Our camera looks great while not even touching the raytracing. There\u0026rsquo;s no raytracing happening! just rays going everywhere as a multicast!\nThis doesn\u0026rsquo;t even touch the complicated math! Just addition, subtraction, division, and multiplication.\nPerformance note!\nCameras in ScrapComputers use multicast to get the frame or video. However, raycasts in scrap mechanic that we (Modders) have access to are slow. This is because (According to VeraDev) it\u0026rsquo;s handled by the CPU. If it was a GPU then it wouldn\u0026rsquo;t take a lot of time.\nThe bigger the resolution you take the frame. The longer it would take to send all of those ray casts. You can see how many ray casts you\u0026rsquo;re going to use by just using simple math. The formula to calculate that is: frameWidth * frameHeight .\nWe have to do a multicast since there\u0026rsquo;s no other way to do it. So if you\u0026rsquo;re going to use the camera, If your game freezes when you get a frame/video, Then the multicast is busy.\nFunctions getFrame Camera.getFrame( width, height, fovX, fovY, xOffset, yOffset )\rTakes a frame (aka a screenshot)\n****Arguments::\nwidth [ integer ] The width of the frame height [ integer ] The height of the frame fovX [ number ] The FOV on x-axis fovY [ number ] The FOV on y-axis xOffset [ integer ] The applied x offset for the frame. By default, it\u0026rsquo;s at 0 so at the top, it would be rendered there yOffset [ integer ] The applied y offset for the frame. By default, it\u0026rsquo;s at 0 so at the left, it would be rendered there Returns:\n[ DisplayPixelTable ] The pixels of the frame getDepthFrame Camera.getDepthFrame( width, height, fovX, fovY, focalLength, xOffset, yOffset )\rTakes a depth map frame (aka a screenshot) and returns it\nArguments:\nwidth [ integer ] The width of the frame height [ integer ] The height of the frame fovX [ number ] The FOV on x-axis fovY [ number ] The FOV on y-axis focalLength [ integer ] The focal\u0026rsquo;s length xOffset [ integer ] The applied x offset for the frame. By default, it\u0026rsquo;s at 0 so at the top, it would be rendered there yOffset [ integer ] The applied y offset for the frame. By default, it\u0026rsquo;s at 0 so at the left, it would be rendered there Returns:\n[ DisplayPixelsTable ] The pixels of the frame getMaskedFrame Camera.getMaskedFrame( width, height, fovX, fovY, mask, xOffset, yOffset )\rTakes a masked map frame (aka a screenshot) and returns it\nIn case mask is a string[]: Each string is a raycast result type. If a raycast\u0026rsquo;s type matches the pixel, it will be white or else black. In case mask is a string: If a raycast\u0026rsquo;s type matches with the mask, the pixel\u0026rsquo;s color would be white and else black.\nIf you do not know what the value(s) for the mask should be, (Find them by clicking this) URL.\nArguments:\nwidth [ integer ] The width of the frame height [ integer ] The height of the frame fovX [ number ] The FOV on x-axis fovY [ number ] The FOV on y-axis mask [ string|string[] ] The mask for the raycast\u0026rsquo;s to set. xOffset [ integer ] The applied x offset for the frame. By default, it\u0026rsquo;s at 0 so at the left, it would be rendered there yOffset [ integer ] The applied y offset for the frame. By default, it\u0026rsquo;s at 0 so at the top, it would be rendered there Returns:\n[ DisplayPixelsTable ] The pixels of the frame getVideo Camera.getVideo( width, height, fovX, fovY, sliceWidth, xOffset, yOffset )\rLike getFrame but it\u0026rsquo;s as slices meaning you could make CCTV cameras without lagging a lot! It\u0026rsquo;s just that the refresh rate would be lower.\nArguments::\nwidth [ integer ] The width of the frame height [ integer ] The height of the frame fovX [ number ] The FOV on x-axis fovY [ number ] The FOV on y-axis sliceWidth [ integer ] The width for each slice xOffset [ integer ] The applied x offset for the frame. By default, it\u0026rsquo;s at 0 so at the left, it would be rendered there yOffset [ integer ] The applied y offset for the frame. By default, it\u0026rsquo;s at 0 so at the top, it would be rendered there Returns:\n[ DisplayPixelsTable ] The pixels of the frame getAdvancedFrame Camera.getAdvancedFrame( width, height, fovX, fovY, xOffset, yOffset )\rPerformance note!\nThe advanced functions use CPU-Based Raytracing (Via Raycasting) to render your frame(s). So this will use a ton of your CPU!\nTakes a frame (aka a screenshot)\nArguments::\nwidth [ integer ] The width of the frame height [ integer ] The height of the frame fovX [ number ] The FOV on x-axis fovY [ number ] The FOV on y-axis xOffset [ integer ] The applied x offset for the frame. By default, it\u0026rsquo;s at 0 so at the left, it would be rendered there yOffset [ integer ] The applied y offset for the frame. By default, it\u0026rsquo;s at 0 so at the top, it would be rendered there Returns:\n[ DisplayPixelTable ] The pixels of the frame getAdvancedVideo Camera.getAdvancedVideo( width, height, fovX, fovY, sliceWidth, xOffset, yOffset )\rPerformance note!\nThe advanced functions use CPU-Based Raytracing (Via Raycasting) to render your frame(s). So this will use a ton of your CPU!\nLike getFrame but it\u0026rsquo;s as slices meaning you could make CCTV cameras without lagging a lot! It\u0026rsquo;s just that the refresh rate would be lower.\nArguments::\nwidth [ integer ] The width of the frame height [ integer ] The height of the frame fovX [ number ] The FOV on x-axis fovY [ number ] The FOV on y-axis sliceWidth [ integer ] The width for each slice xOffset [ integer ] The applied x offset for the frame. By default, it\u0026rsquo;s at 0 so at the left, it would be rendered there yOffset [ integer ] The applied y offset for the frame. By default, it\u0026rsquo;s at 0 so at the top, it would be rendered there Returns:\n[ DisplayPixelsTable ] The pixels of the frame toggleRandom Camera.toggleRandom( toggle )\rToggles the randomization shader. This is very simple but adds a lot of detail to the frame at a cost of performance when used in displays as the optimization would be gone.\nThis randomization of the colors of a frame\u0026rsquo;s pixels is a tiny bit.\nArguments::\ntoggle [ boolean ] To enable or disable the randomization shader ","date":"0001-01-01","id":18,"permalink":"/docs/lua-api/components/camera/","summary":"The camera allows you to take screenshots or even render video from the world to your display! Our camera looks great while not even touching the raytracing.","tags":[],"title":"Camera"},{"content":"The Color Module for the computer API!\nFunctions newSingluar sm.scrapcomputers.color.newSingluar( rgbNum )\rCreates a new color from 1 value. Whatever rgbNum\u0026rsquo;s value has will be set on R, G, and B.\nThis means it\u0026rsquo;s grayscale only!\nArguments:\nrgbNum [ number ] The color value that will be set on R, G, and B Returns:\n[ Color ] The generated color random sm.scrapcomputers.color.random( from, to )\rGenerates a random color from whatever range you want\nArguments:\nfrom [ number ] The starting range to [ number ] The ending range Returns:\n[ Color ] The generated color random0to1 sm.scrapcomputers.color.random0to1()\rGenerates a random color from 0 to 1\nReturns:\n[ Color ] The generated color ","date":"0001-01-01","id":19,"permalink":"/docs/addon-api/modules/color/","summary":"The Color Module for the computer API!\nFunctions newSingluar sm.scrapcomputers.color.newSingluar( rgbNum )\rCreates a new color from 1 value. Whatever rgbNum\u0026rsquo;s value has will be set on R, G, and B.","tags":[],"title":"Color"},{"content":"This allows you to find connected components and create components!\nFunctions sm.scrapcomputers.components.ToComponent( classData, dataType, shouldBeComponent )\rConverts a class to a component class!\nNote\nIf you\u0026rsquo;re going to use this function in a script. PLEASE place it at the absolute bottom of a file and do NOT put it in any sort of function.\nDo it like this\nMyComponent.lua\r427... 428 429sm.scrapcomputers.components.ToComponent( ComponentClass, \u0026#34;MyComponent\u0026#34;, true ) 430-- Do not put any code after it!\rMyInteractable.lua\r278... 279 280sm.scrapcomputers.components.ToComponent( InteractableClass, nil, false ) 281-- Do not put any code after it!\rRequired on every interactable\nWhen you make an addon. Every interactable (so components and non-components) should have this function called! This is due to ban system reasons.\nIf it is a component, set shouldBeComponent to true. If it is NOT a component, set shouldBeComponent to false.\nIf you DO NOT do this, We may or not ban your addon because the interactables (or components) are not being affected by the ban system! (The ban level would be 3 or even 4!)\nArguments:\nclassData [ ShapeClass ] The class to use for the component dataType [ string? ] The type of component it is. This value would be ignored when shouldBeComponent is true so if it\u0026rsquo;s not a component. You can set it to any value. shouldBeComponent [ boolean ] Set this to true if you are planning it to be an actual component! getComponents sm.scrapcomputers.components.getComponents( dataType, interactable, getViaChildren, flags, allowPrivateData )\rGets data from sm.scrapcomputers.dataList and filters them to what\u0026rsquo;s connected or not. The boolean value on argument 3 is needed in case you want to get the children or parents.\nArguments:\ndataType [ sm.scrapcomputers.filters.dataType ] The type of what object to choose. (example: sm.scrapcomputers.dataType.Display filters to be only Displays from ScrapComputers) interactable [ Interactable ] The interactable itself. (Required to filter of what is connected or not) getViaChildren [ boolean ] If true. it makes children interactable. else parents from interactable flags [ integer? ] This only exists just so the network ports work. Defaults to sm.interactable.connectinType.compositeIO allowPrivateData [ boolean? ] If true, the results will also have private data that shouldn\u0026rsquo;t be accessible to the public. Defaults is false Returns:\n[ table ] All components it has discovered ","date":"0001-01-01","id":20,"permalink":"/docs/addon-api/managers/componentmanager/","summary":"This allows you to find connected components and create components!\nFunctions sm.scrapcomputers.components.ToComponent( classData, dataType, shouldBeComponent )\rConverts a class to a component class!","tags":[],"title":"ComponentManager"},{"content":"All components in this list are in ScrapComputers itself.\n","date":"0001-01-01","id":21,"permalink":"/docs/lua-api/components/","summary":"All components in this list are in ScrapComputers itself.","tags":[],"title":"Components"},{"content":"The display is like a monitor but in Scrap Mechanic. Allows you to draw anything on it with a computer.\nPerformance note!\nDisplays are the only component where you can cause a ton of lag! Since the only way to render pixels is via effects, Too many effects mean a lot of lag. Although our optimization is very good. We suggest making any graphics on our display simple or not using a ton of colors.\nUsing a ton of colors would decrease your game\u0026rsquo;s performance even after optimizations!\nStructures TouchData This contains touch data when the user interacts with the display AKA \u0026ldquo;touches the display\u0026rdquo;\nFields x [ number ] The position on the x-axis. y [ number ] The position on the y-axis. state [ 1|2|3 ] The state that it has been pressed. 1 is Pressed, 2 is Hold, 3 is Released. PixelTable Pixel table\u0026rsquo;s arepixel information that would be used to draw on the display. Kinda like instructions.\n{ x = 1, -- The position of the pixel on the X-axis y = 1, -- The position of the pixel on the Y-axis scale = { -- The size of the pixel itself. x = 1, -- The size of the pixel on the X-axis (Aka width) y = 1 -- The size of the pixel on the Y-axis (Aka height) }, color = sm.color.new(\u0026#34;ff0000\u0026#34;) -- The color of the pixel }\rThis one above draws a singular pixel on coordinates (1, 1). The scale is also 1x1 so we are just drawing a 1x1 pixel.\nFunctions drawPixel Display.drawPixel( x, y, color )\rDraws a single pixel at the specified coordinates with the given color.\nArguments:\nx [ number ] The x-coordinate of the pixel. y [ number ] The y-coordinate of the pixel. color [ Color|string ] The color of the pixel in hexadecimal format. drawFromTable Display.drawFromTable( tbl )\rDraws shapes and text based on data provided in a table.\nArguments:\ntbl [ PixelTable[] ] All instructions to run through clear Display.clear( color )\rClears the display with the specified color.\nArguments:\ncolor [ Color|string ] The color to clear the display with, in hexadecimal format. (If nil, It will clear the screen with the default color) drawLine Display.drawLine( x, y, x1, y1, color )\rDraw a line between two points with the specified color.\nArguments:\nx [ number ] The x-coordinate of the starting point. y [ number ] The y-coordinate of the starting point. x1 [ number ] The x-coordinate of the ending point. y1 [ number ] The y-coordinate of the ending point. color [ Color|string ] The color of the line in hexadecimal format. drawCircle Display.drawCircle( x, y, radius, color )\rDraws a circle with the specified center coordinates, radius, and color.\nArguments:\nx [ number ] The x-coordinate of the center of the circle. y [ number ] The y-coordinate of the center of the circle. radius [ number ] The radius of the circle. color [ Color|string ] The color of the circle in hexadecimal format. drawFilledCircle Display.drawFilledCircle( x, y, radius, color )\rDraws a filled circle with the specified center coordinates, radius, and color.\nArguments:\nx [ number ] The x-coordinate of the center of the circle. y [ number ] The y-coordinate of the center of the circle. radius [ number ] The radius of the circle. color [ Color|string ] The color of the circle in hexadecimal format. drawTriangle Display.drawTriangle( x1, y1, x2, y2, x3, y3, color )\rDraws a triangle with the specified vertices and color. Arguments:\nArguments\u0026quot;\nx1 [ number ] The x-coordinate of the first vertex. y1 [ number ] The y-coordinate of the first vertex. x2 [ number ] The x-coordinate of the second vertex. y2 [ number ] The y-coordinate of the second vertex. x3 [ number ] The x-coordinate of the third vertex. y3 [ number ] The y-coordinate of the third vertex. color [ Color|string ] The color of the triangle in hexadecimal format. drawFilledTriangle Display.drawFilledTriangle( x1, y1, x2, y2, x3, y3, color )\rDraws a filled triangle with the specified vertices and color. Arguments:\nArguments\u0026quot;\nx1 [ number ] The x-coordinate of the first vertex. y1 [ number ] The y-coordinate of the first vertex. x2 [ number ] The x-coordinate of the second vertex. y2 [ number ] The y-coordinate of the second vertex. x3 [ number ] The x-coordinate of the third vertex. y3 [ number ] The y-coordinate of the third vertex. color [ Color|string ] The color of the triangle in hexadecimal format. drawRect Display.drawRect( x, y, width, height, color )\rDraws a rectangle with the specified position, width, height, and color.\nArguments:\nx [ number ] The x-coordinate of the top-left corner of the rectangle. y [ number ] The y-coordinate of the top-left corner of the rectangle. width [ number ] The width of the rectangle. height [ number ] The height of the rectangle. color [ Color|string ] The color of the rectangle in hexadecimal format. drawFilledRect Display.drawFilledRect( x, y, width, height, color )\rDraws a filled rectangle with the specified position, width, height, and color.\nArguments:\nx [ number ] The x-coordinate of the top-left corner of the rectangle. y [ number ] The y-coordinate of the top-left corner of the rectangle. width [ number ] The width of the rectangle. height [ number ] The height of the rectangle. color [ Color|string ] The color of the rectangle in hexadecimal format. drawText Display.drawText( x, y, string, color, fontName )\rDraws text at the specified position with the specified color.\nx [ number ] The x-coordinate of the text. y [ number ] The y-coordinate of the text. string [ string ] The text to draw. color [ Color|string ] The color of the text in hexadecimal format. fontName [ string? ] The font to use. (defaults to whatever the default font the font manager is using) optimize Display.optimize()\rThis optimizes the display but more at the extreme bound.\nPerformance note!\nThis is only meant to be called when you\u0026rsquo;re not planning to update the display for a long time. Use it when it\u0026rsquo;s generally going to be static.\ngetDimensions Display.getDimensions()\rRetrieves the dimensions of the display.\nReturns:\n[ number ] The width of the display [ number ] The height of the display hide Display.hide()\rHides the display.\nshow Display.show()\rShows the display.\nsetRenderDistance Display.setRenderDistance( distance )\rSets the render distance of the display.\nArguments:\ndistance [ number ] The render distance to set. enableTouchScreen Display.enableTouchScreen( bool )\rEnables or disables the touchscreen functionality.\nArguments:\nbool [ boolean ] True to enable touch screen, false to disable. getTouchData Display.getTouchData()\rRetrieves touch data from the touch screen.\nReturns:\n[ TouchData ] A table containing touch data such as coordinates and touch state. update Display.update()\rUpdates the display.\nautoUpdate Display.autoUpdate( bool )\rSets whether the display should automatically update.\nPeformance note!\nIf you let\u0026rsquo;s say draw a lot of things like rectangles, text, etc with this enabled. Your game would lag a LOT! And the network would be spammed with network requests!\nSo please only use this when you\u0026rsquo;re not going to draw a lot and your display doesn\u0026rsquo;t get updated a lot!\nArguments:\nbool [ boolean ] True to enable auto-update, false to disable. setOptimizationThreshold Display.setOptimizationThreshold( int )\rThis function sets the optimization threshold of the display. Our displays optimize the effect count by grouping similar-colored pixels together into one larger effect. The integer (ranging between 0 and 1) dictates how similar the neighboring pixels\u0026rsquo; colors have to be, with 0 requiring them to be exactly the same RGB value and 1 allowing any RGB value.\nArguments:\nint [ number ] The optimization threshold to set. calcTextSize Display.calcTextSize( text )\rCalculate the text\u0026rsquo;s bounding box\nArguments:\ntext [ string ] The text to calculate its size. Returns:\n[ number ] The width that the text would consume [ number ] The height that the text would consume ","date":"0001-01-01","id":22,"permalink":"/docs/lua-api/components/display/","summary":"The display is like a monitor but in Scrap Mechanic. Allows you to draw anything on it with a computer.","tags":[],"title":"Display"},{"content":"A drive allows you to store anything* inside it. You can also go interact with it to modify its data there without doing it via code.\nFunctions load Drive.load()\rReceive data from the drive\nReturns:\n[ table ] The contents of the drive save Drive.save( data )\rSaves data to the drive\nNote\nYou can only save data that JSON supports! You can only use the following types:\n// Indexes [ \u0026#34;number\u0026#34;, \u0026#34;string\u0026#34; ] // Values [ \u0026#34;table\u0026#34;, \u0026#34;number\u0026#34;, \u0026#34;string\u0026#34;, \u0026#34;boolean\u0026#34;, \u0026#34;nil\u0026#34; ]\rArguments:\ndata [ table ] The new data ","date":"0001-01-01","id":23,"permalink":"/docs/lua-api/components/drive/","summary":"A drive allows you to store anything* inside it. You can also go interact with it to modify its data there without doing it via code.","tags":[],"title":"Drive"},{"content":"Allows you to get the Computer\u0026rsquo;s API env and modify it!\nFields envHooks This is a table!\nThis is where your addon can add \u0026ldquo;hooks\u0026rdquo; to the env. If you want to modify the env. You create a function that would have 1 parameter which is self. The self parameter would be generally the Computer\u0026rsquo;s self. You will need that in case you want to add like sc.getFunnyComponents where the component manager requires the interactable!\nYou can overwrite functions as well!\nIf you have to make envHooks. You MUST put this in an Autotool! (For people who don\u0026rsquo;t know that, Basicly a tool that gets automatically loaded via the autoTool parameter in the JSON file where your tools are defined.)\nExample Code:\nmyAutoTool.lua\r52-- This would be the function to hook the env! 53---@param self ShapeClass 54function EnvHook(self) 55 return { 56 sc = { 57 getTest = function () return sm.scrapcomputers.components.getComponents(\u0026#34;ComponentTest\u0026#34;, self.interactable, true) end 58 } 59 } 60end 61 62-- To make the function work. Add the function itself to the envHooks table! 63table.insert(sm.scrapcomputers.envManager.envHooks, EnvHook)\rWhere you place it does NOT matter!\nFunctions createEnv sm.scrapcomputers.envManager.createEnv( self )\rCreates a fresh Environment-Variables list\nArguments:\nself [ ShapeClass ] The self parameter of the class. Returns:\n[ ComputerAPI ] The enviroment variables! ","date":"0001-01-01","id":24,"permalink":"/docs/addon-api/managers/environmentmanager/","summary":"Allows you to get the Computer\u0026rsquo;s API env and modify it!\nFields envHooks This is a table!\nThis is where your addon can add \u0026ldquo;hooks\u0026rdquo; to the env.","tags":[],"title":"EnvironmentManager"},{"content":"The font manager allows you to, of course, manage fonts. You can get font information, get all font names you can use, etc.\nThe font manager is NOT a module so please do not identify this as a module\nStructures SCFont A SCFont (SCF in short, ScrapComputers Font for full name) is a font that has a fixed with and height for EVERY singular character. This is in Lua so expect a massive font file size.\nDid you know?\nThe owner (VeraDev) attempted to make a binary font version. However due to some issues with the String Buffer system (Named badly btw. works like a Packet Buffer)\nFor some stupid reason. it was NOT reading the actual glyphs itself and after a lot of headaches, it has been scrapped.\nThis would have been called SCFL (SCFont Lua in readable short, ScrapComputers Font Lua for the full name but I would have changed it to SCLF so the full name is better.)\nFields: fontWidth [ integer ] The width of the font fontHeight [ integer ] The height of the font characters [ string ] All characters used on the font errorChar [ string[] ] The error character font charset [ string[][] ] All character\u0026rsquo;s gylphs. On the first array. The index is the character! The second is the row number! Functions getFont sm.scrapcomputers.fontmanager.getFont( fontName )\rGets a font\nArguments:\nfontName [ string ] The name of the font to get Returns:\n[ SCFont? ] The font it has recieved. Nil if there is an error. [ string? ] The error message it has received. Nil if there wasn\u0026rsquo;t an error. getFontNames sm.scrapcomputers.fontmanager.getFontNames()\rGets all fonts the font manager has access to\nReturns:\n[ string[] ] Every font name the font manager has access to. getDefaultFontName sm.scrapcomputers.fontmanager.getDefaultFontName()\rGets the default font that the font manager uses. This is hard coded so you will require to hook this if you want to modify it.\nReturns:\n[ string ] The default font name used. getDefaultFont sm.scrapcomputers.fontmanager.getDefaultFont()\rLike getDefaultFontName but calls getFont automaticly.\nReturns:\n[ SCFont ] The default font used. ","date":"0001-01-01","id":25,"permalink":"/docs/addon-api/managers/fontmanager/","summary":"The font manager allows you to, of course, manage fonts. You can get font information, get all font names you can use, etc.","tags":[],"title":"FontManager"},{"content":"This guide will give you a setup to start projects with ScrapComputers via the Computer API\nBefore you do anything If you do NOT have any Lua 5.1 knowledge, Then you must learn Lua 5.1 if you want to code in ScrapComputers. There are many ways you could learn 5.1, From messing around with the files of Lua games (Scrap Mechanic is one of them!), using YouTube tutorials, or learning Lua from Roblox Studio. Whatever makes you learn Lua 5.1!\nIf you do not know where you can learn Lua 5.1. Then click this (Flashbang alert!) to start learning Lua 5.1.\nFor the people who know modding in Scrap Mechanic. Yes, we know that Scrap Mechanic uses LuaJIT and NOT Lua 5.1. But really, LuaJIT is Lua 5.1 but faster in short/simple terms.\nChoosing the correct Code Editor You might have already got a code editor but some features are required and your code editor may not have them.\nThese are the required features that your code editor needs.\nAble to understand Lua code Add definition files. In this case. We are going to use Visual Studio Code with the Lua Extension by summneko as that is what we use.\nThe world to code our Computer project in. We need a world where we can go and test our projects. Open our Scrap Mechanic and create a new world with the ScrapComputers mod. Then go and place a computer. That\u0026rsquo;s where our code will go in.\nCreating a Computer Project We are going to create a project. We already have a template set up for you. The templates are stored in our mod.\nThese are the methods you can use to set up a project\nGithub (Recommended) Go to our GitHub Repository and download our mod, Go into the Templates folder and clone the Computer folder. Name it whatever you want and that\u0026rsquo;s it! You can go move the project\u0026rsquo;s location somewhere else like your Documents folder\nType copy and paste Most users have the same path installation but since it is configurable. This method might not work.\nOpen File Explorer and go to this path: C:\\Program Files (x86)\\Steam\\steamapps\\workshop\\content\\387990\\3238484039\\Templates, Copy the Computer folder and folder and rename it to whatever you want and that\u0026rsquo;s it! You can go move the project\u0026rsquo;s location somewhere else like your Documents folder\nPoint and click What you have to do is to open Steam and go to your library, Then right-click on Scrap Mechanic and press Properties. Go to Installed Files and click Browse....\nOn the File Explorer window. Go back to 2 directories and go into workshop \u0026gt; content \u0026gt; 387990 \u0026gt; 3238484039 \u0026gt; Templates. Clone the Computer folder and rename it to whatever you want and that\u0026rsquo;s it! You can go move the project\u0026rsquo;s location somewhere else like your Documents folder\nHow to use our Template You might get confused with our template so this section would help you.\nThe folder structure should look something like this:\n.vscode/ └── settings.json Main.lua Main.lua.template ScrapComputers.lua SM.lua\rThese are what the files/folders are used for:\n.vscode/*: These are just configurations for Visual Studio Code Main.lua: This is where the source code of your project would be Main.lua.template: This contains the script template we suggest you use. ScrapComputers.lua and SM.lua: These are definition files and should NOT be modified! Mess around! Now you know all of this, A way you could learn to work with ScrapComputers via the Computer is to mess around with our examples or look through the documentation and try using them.\n","date":"0001-01-01","id":26,"permalink":"/docs/guides/getting-started/","summary":"This guide will give you a setup to start projects with ScrapComputers via the Computer API\nBefore you do anything If you do NOT have any Lua 5.","tags":[],"title":"Getting Started"},{"content":"Generally contains functions that were modified to do something different.\nFunctions print print( ... )\rPrints text to the chat. Will be always converted to a string so you can pass in anything\nIf it is a table. It will convert to be printable and you can see the contents inside.\nArguments:\n\u0026hellip; [ any[] ] All arguments to send to the chat alert alert( ... )\rSame as print but sends it as a alert message\nArguments:\n\u0026hellip; [ any[] ] All arguments to send to the alert popup tostring tostring( data )\rLike the normal but modified to have additional features like printing lua tables!\nArguments:\ndata [ any ] The variable to convert to be a string. debug debug( ... )\rThe debug function is basically Lua\u0026rsquo;s implementation of the print function in Scrap Mechanic.\nArguments:\n\u0026hellip; [ any[] ] All arguments to send to the console ","date":"0001-01-01","id":27,"permalink":"/docs/lua-api/global-variables/","summary":"Generally contains functions that were modified to do something different.\nFunctions print print( ... )\rPrints text to the chat. Will be always converted to a string so you can pass in anything","tags":[],"title":"Global Variables"},{"content":"Allows you to get information on such things like velocity, rotation and etc\nStrucutres Data Contains GPS data\nworldPosition [ Vec3 ] The world position worldRotation [ Quat ] The world rotation bearing [ number ] The bearing rotation (Degrees!) velocity [ Vec3 ] The velocity speed [ number ] The speed forwardVelocity [ number ] The forwards velocity horizontalVelocity [ number ] The horizontal velocity verticalVelocity [ number ] The vertical velocity acceleration [ number ] The acceleration forwardAcceleration [ number ] The forwards acceleration horizontalAcceleration [ number ] The horizontal acceleration verticalAcceleration [ number ] The vertical acceleration Functions getGPSData GPS.getGPSData()\rGets GPS Data\nReturns:\n[ GPS.Data ] The GPS Data ","date":"0001-01-01","id":28,"permalink":"/docs/lua-api/components/gps/","summary":"Allows you to get information on such things like velocity, rotation and etc\nStrucutres Data Contains GPS data\nworldPosition [ Vec3 ] The world position worldRotation [ Quat ] The world rotation bearing [ number ] The bearing rotation (Degrees!","tags":[],"title":"GPS"},{"content":"","date":"0001-01-01","id":29,"permalink":"/docs/guides/","summary":"","tags":[],"title":"Guides"},{"content":"The hologram are like Displays but instead of being in 2D, its in 3D. You can show objects in 3D with this\nFunctions createCube Hologram.createCube( position, rotation, scale, color )\rCreates a cube object\nArguments:\nposition [ Vec3 ] The position of the object rotation [ Vec3 ] The rotation of the object scale [ Vec3 ] The scale of the object color [ Color|string ] The color of the object Returns:\n[ integer ] The id of the object createSphere Hologram.createSphere( position, rotation, scale, color )\rCreates a sphere object\nArguments:\nposition [ Vec3 ] The position of the object rotation [ Vec3 ] The rotation of the object scale [ Vec3 ] The scale of the object color [ Color|string ] The color of the object Returns:\n[ integer ] The id of the object createCustomObject Hologram.createCustomObject( uuid, position, rotation, scale, color )\rLike createCube or createSphere but u can pass any kind of object from whatever loaded mod! (Via UUID)\nuuid [ Uuid ] The uuid of the object position [ Vec3 ] The position of the object rotation [ Vec3 ] The rotation of the object scale [ Vec3 ] The scale of the object color [ Color|string ] The color of the object Returns:\n[ integer ] The id of the object getObject Hologram.getObject( index )\rGets the object via Object ID and returns a table containing the data of that object or nil since it doesn\u0026rsquo;t exist.\nArguments:\nindex [ number ] The object you wanna get its data. Returns:\n[ HologramObject? ] Ether u get a table (so the object exists) or nil (so the object does NOT exist) ","date":"0001-01-01","id":30,"permalink":"/docs/lua-api/components/hologram/","summary":"The hologram are like Displays but instead of being in 2D, its in 3D. You can show objects in 3D with this","tags":[],"title":"Hologram"},{"content":"A HologramObject is an object from a hologram. AKA: An object that you\u0026rsquo;re rendering on the hologram.\nFunctions getId HologramObject.getId()\rGets the ID of the object\nReturns:\n[ integer ] The ID of the object getUUID HologramObject.getUUID()\rGets the UUID of the object\nReturns:\n[ Uuid ] The UUID of the object getPosition HologramObject.getPosition()\rGets the position of the object\nReturns:\n[ Vec3 ] The Position of the object getRotation HologramObject.getRotation()\rGets the Rotation of the object\nReturns:\n[ Quat ] The Rotation of the object getScale HologramObject.getScale()\rGets the Scale of the object\nReturns:\n[ Vec3 ] The Scale of the object getColor HologramObject.getColor()\rGets the Color of the object\nReturns:\n[ Color ] color The Color of the object setUUID HologramObject.setUUID( value )\rSets the object\u0026rsquo;s UUID to be the argument.\nArguments:\nvalue [ string|Uuid ] The new UUID setPosition HologramObject.setPosition( value )\rSets the object\u0026rsquo;s Position to be the argument.\nArguments:\nvalue [ Vec3 ] The New Position setRotation HologramObject.setRotation( value )\rSets the object\u0026rsquo;s Rotation to be the argument.\nArguments:\nvalue [ Quat ] The New Rotation setScale HologramObject.setScale( value )\rSets the object\u0026rsquo;s Scale to be the argument.\nArguments:\nvalue [ Vec3 ] The New Scale setColor HologramObject.setColor( value )\rSets the object\u0026rsquo;s Color to be the argument.\nArguments:\nvalue [ Color ] The New Color delete HologramObject.delete()\rDeletes the object\nisDeleted HologramObject.isDeleted()\rReturns true if the object has been deleted\nReturns:\n[ boolean ] If true, the object is deleted and else it\u0026rsquo;s false and it\u0026rsquo;s NOT deleted. ","date":"0001-01-01","id":31,"permalink":"/docs/lua-api/user-data/hologramobject/","summary":"A HologramObject is an object from a hologram. AKA: An object that you\u0026rsquo;re rendering on the hologram.\nFunctions getId HologramObject.getId()\rGets the ID of the object","tags":[],"title":"HologramObject"},{"content":"This will provide you additional information of how you can use our Script Template.\nWhen you load up our Script Template example or use the Main.lua.template file of the Computer Template. You will see something like this:\n-- Any variables outside the main functions are global! (As programmer perspective) The code only gets ran once! -- Gets called when the computer starts up function onLoad() end -- Gets called every tick function onUpdate() end -- Gets called when the computer error\u0026#39;s out. function onError(err) end -- Gets called when the computer shuts down. function onDestroy() end\rWhat the functions do We will tell you what these functions do\nonLoad This function gets called when the computer starts up\nonUpdate This function gets called every tick when the computer is running\nonError This function gets called when theres a error.\nThe err parameter is a string. This will contain the error message it has recieved.\nNote\nThis will not stop the computer to stop further execution!\nonDestroy When you turn OFF the computer, this function gets called.\nCode outside the functions You might need global variables or functions. You can define them outside the functions.\nLet\u0026rsquo;s say you want to access the display globaly. You can add this at the top of your code!\nlocal display = sc.getDisplays()[1]\r","date":"0001-01-01","id":32,"permalink":"/docs/guides/how-to-use-our-script-template/","summary":"This will provide you additional information of how you can use our Script Template.\nWhen you load up our Script Template example or use the Main.","tags":[],"title":"How to use our script template"},{"content":"\rBefore you can even start making add-ons Before you can make addons, You need permission to do it since we don\u0026rsquo;t like people violating copyright so we have a very strict license. This also includes modifying the behavior of ScrapComputers in any way.\nHowever, we would have an issue with this where if someone DOES violate copyright or breaks one of our rules, we really cannot DMCA them without risking our personal information being leaked. Hence we have a Ban System\nHow does our ban system work? You will receive a popup if you have a banned add-on loaded which mentions all banned addons you have loaded and the result of having that loaded.\nOur ban system has 4 levels of severity.\nLevels on severity:\nLevel 1: You would only get this popup every time you join the world. Level 2: You would receive the popup every 30 seconds. Level 3: ScrapComputers would be ENTIRELY disabled Level 4: Your game would CRASH Why do we have a severity where your game would crash? Well, that is in case an addon attempts to bypass our ban system. If they are caught doing that, we would bump up the level to 4. At the time, Only 3 crash methods are in. Those are Divison Crash, JSON Crash, and the infamous while true do end Although while true do end is not a crash, It does prevent the user from being able to do anything so good enough!\nBan severities Each ban reason can result in a different outcome. Maybe you only would get a popup or maybe your game would crash when loading it in.\nTo know what would happen. This table will provide info about it\nName Description Serverity Appealable Dev Banned Bypass Ban System Your addon attempts to bypass the ban system in some sort of method 4 (Game Crash) No Yes Copyright Violation Your addon uses code from developers without any permission 3 (Mod Disabled) Depends Depends No Permission You didn\u0026rsquo;t ask for permission for the addon to be created 3 (Mod Disabled) Depends No False Advertisement You are making claims that aren\u0026rsquo;t valid. 2 (Popup every 30s) Yes No License Violation Your add-on violates our license. 3 (Mod Disabled) Depends Depends Bad Reputation You have a very horrible reputation in the community. 2 (Popup every 30s) Yes No Ban Evasion You attempt to evade our bans 4 (Game Crash) No Yes Bad Documentation Your add-on is not easy to understand what something does. 1 (Popup once) Yes No Ban-System Not Implemented There are 1 or more interactables that don\u0026rsquo;t have the added code for the ban system. 3 (Mod Disabled) Yes No if you violate one of the above and you are Dev Banned (So the Dev Banned category is a Yes or depends on where we mention that you are one), You can no longer make any add-ons and your current add-ons would be affected. All of your add-ons would be banned under the same ban as Severity 4 (Game Crash). This WILL be permanent!\nThis means that you getting this is essentially being on a blacklist for life!\nRules to follow There are some rules you gotta follow.\nPlease ask for permission before creating an addon! You need permission in case you want to make an addon. You don\u0026rsquo;t have to ask again if you get permission and want to make more add-ons.\nDO NOT bypass the ban system! We will be honest here If you try bypassing our ban system, you\u0026rsquo;re an actual asshole doing it because not only you somehow broke one of our rules, you\u0026rsquo;re trying to do ban evasion! Isn\u0026rsquo;t that a way to ruin your reputation and be hated by the community?\nNo lying to the community! Your claims are what your add-on does, They gotta be a claim that would be true. It\u0026rsquo;s fine if a claim is a joke but if it\u0026rsquo;s a false claim, you would be violating this rule!\nIf you lie to the community (or to your community) that is related to the add-on, you would be violating this rule!\nNo violating our license or copyright Because it\u0026rsquo;s illegal to violate a license or copyright. No need to explain it further.\nYour reputation DOES matter! We do NOT want developers with horrible reputations to make add-ons with our mod. We want developers that the community likes! If you\u0026rsquo;re canceled, well you\u0026rsquo;re never going to be able to make add-ons for scrapcomputers then.\nCode and User Documentation quality matters! Your code documentation MUST be good! You must make it so other developers (Intermediate specifically) can understand the code without having a headache over why this function is needed.\nThis is allowed\n-- Function to perform Bubble Sort on a list function bubbleSort(array) local n = #array -- Get the number of elements in the array for i = 1, n - 1 do for j = 1, n - i do if array[j] \u0026gt; array[j + 1] then -- Swap elements array[j], array[j + 1] = array[j + 1], array[j] end end end end -- Function to print the array function printArray(array) local str = \u0026#34;\u0026#34; for i = 1, #array do str = str..tostring(array[i])..\u0026#34; \u0026#34; end print(str:sub(1,#str)) end -- Example usage local myArray = {64, 34, 25, 12, 22, 11, 90} print(\u0026#34;Original array:\u0026#34;) printArray(myArray) bubbleSort(myArray) print(\u0026#34;Sorted array:\u0026#34;) printArray(myArray)\rThis is NOT allowed\n-- The initiation of the unfathomable metamorphosis (Bubble Enigma) function BS(arr) local n = #arr -- Decipher the enigmatic array size for i = 1, n - 1 do -- Engage in the arcane iteration sequence for j = 1, n - i do -- Traverse the mystical nested loop -- Introducing mind-boggling calculations for absolute obfuscation local complexNumber = 2 * i * j + (i^2) / (j + 1) + math.sqrt(i * j) -- A concoction of arcane formulae -- Perform a baffling comparison using the complex number if arr[j] \u0026gt; arr[j + 1] and complexNumber \u0026gt; 1000 then arr[j], arr[j + 1] = arr[j + 1], arr[j] -- Initiate the forbidden switch elseif arr[j] == arr[j + 1] then -- Perform a useless operation to make things more confusing local pointlessVariable = i + j * 2 / (i + j) else -- Perform another set of convoluted calculations to add to the mystique for k = 1, 100 do local mysticalValue = k * j / (i % 3 + 1) + math.pow(j, 2) end end end end -- Invoke the spirits with an utterly useless loop for k = 1, 10000 do local x = k * k * k * k / (k - 1) -- An utterly perplexing computation end -- Perform another pointless ritual to confound the minds for m = 1, 10000 do local y = m % 2 == 0 and m / 2 or m * 3 + 1 -- The mystifying Collatz sequence end -- Adding a cryptic condition that does absolutely nothing if n % 2 == 0 then local crypticVariable = math.random(1, 100) + math.sqrt(n) else local enigmaticVariable = math.random(100, 1000) * math.sin(n) end -- Engage in a final perplexing loop with no purpose whatsoever for z = 1, 100000 do local mysticValue = z * n / (z + 1) + math.pow(z, 2) / (n % 2 + 1) end end -- Function to manifest the arcane numeric configuration function printArray(array) local str = \u0026#34;\u0026#34; -- Channel the void with an empty string for i = 1, #array do -- Traverse the astral plane of the array str = str .. tostring(array[i]) .. \u0026#34; \u0026#34; -- Concatenate the ethereal integers with a mysterious space end print(str:sub(1, #str)) -- Reveal the enigmatic string of characters end -- Embark on the journey of enigmatic transformation local mysticalSet = {64, 34, 25, 12, 22, 11, 90} -- The cryptic ensemble of integers print(\u0026#34;Behold the enigmatic configuration:\u0026#34;) -- Utter the prophecy of chaos printArray(mysticalSet) -- Evoke the essence of disarray BS(mysticalSet) -- Initiate the perplexing transmutation print(\u0026#34;Witness the enigmatic array:\u0026#34;) -- Reveal the revelation of order printArray(mysticalSet) -- Unveil the transcendental sequence\rAdd the following code for every interactable In every single interactable (including components), You must add this at the end of your code that is NOT in any function. This is needed for the ban system to work in case a banned addon gets loaded.\nFor Components:\nMyInteractable.lua\r278... 279 280sm.scrapcomputers.components.ToComponent( InteractableClass, nil, false ) 281-- Do not put any code after it!\rFor interactables:\nMyComponent.lua\r427... 428 429sm.scrapcomputers.components.ToComponent( ComponentClass, \u0026#34;MyComponent\u0026#34;, true ) 430-- Do not put any code after it!\rYour add-on must be good! Your add-on must be something that does a lot of changes in the mod. Things like just \u0026ldquo;Display Extension Addon\u0026rdquo; aren\u0026rsquo;t allowed since this is not impressive enough! Making a printer addon is allowed since it could be useful in cases and requires some effort put into it!\n","date":"0001-01-01","id":33,"permalink":"/docs/addon-api/important/","summary":"Before you can even start making add-ons Before you can make addons, You need permission to do it since we don\u0026rsquo;t like people violating copyright so we have a very strict license.","tags":[],"title":"Important"},{"content":"The JSON Module for the computer API!\nFunctions isSafe sm.scrapcomputers.json.isSafe( root )\rReturns true if a tlua table is safe to convert to JSON.\nArguments:\nroot [ table ] The lua table to check Returns:\n[ boolean ] If true, That means it\u0026rsquo;s safe to convert. else not! toString sm.scrapcomputers.json.toString( root, prettify, indent )\rConverts a lua table to a JSON string.\nArguments:\nroot [ table ] The lua table to convert to a string prettify [ boolean ] If true, The JSON string would be prettier. Use this when you want to display it. indent [ string? ] The indentation character. Defaults to \u0026ldquo;\\t\u0026rdquo; Returns:\n[ string ] The JSON string from a Lua table. toTable sm.scrapcomputers.json.toTable( root )\rConverts a JSON string to a Lua table\nArguments:\nroot [ string ] The JSON string to convert Returns:\n[ table ] The converted Lua table ","date":"0001-01-01","id":34,"permalink":"/docs/addon-api/modules/json/","summary":"The JSON Module for the computer API!\nFunctions isSafe sm.scrapcomputers.json.isSafe( root )\rReturns true if a tlua table is safe to convert to JSON.","tags":[],"title":"Json"},{"content":"It\u0026rsquo;s like a virtual keyboard! You can interact with it and then type anything and the computer will be able to read it!\nFunctions getLatestKeystroke Keyboard.getLatestKeystroke()\rReturns the latest keystroke that has been sent. If it is \u0026ldquo;backSpace\u0026rdquo;, that means the user has pressed \u0026ldquo;backSpace\u0026rdquo;\nReturns:\n[ \u0026ldquo;backSpace\u0026rdquo;|string ] The keystroke isPressed Keyboard.isPressed()\rReturns true if a key is being pressed.\nReturns:\n[ boolean ] True if a key is being pressed. ","date":"0001-01-01","id":35,"permalink":"/docs/lua-api/components/keyboard/","summary":"It\u0026rsquo;s like a virtual keyboard! You can interact with it and then type anything and the computer will be able to read it!","tags":[],"title":"Keyboard"},{"content":"The Laser is like a normal scrap mechanic sensor but instead of ON or OFF, It provides more information which could be useful for things like Robot kinematics (More like Sensor-Enhanced Kinematics)\nAdvanced users: This uses a ray cast for object detection, But this also means that there is an offset between the raycast\u0026rsquo;s starting point and the object itself. it\u0026rsquo;s small but this could cause issues with your math!\nStructures LaserData This structure contains data that the laser has received\nFields directionWorld [ Vec3 ] The direction vector of the ray cast fraction [ number ] The fraction (0-1) of the distance reached until collision divided by the ray\u0026rsquo;s length normalLocal [ Vec3 ] The normal vector of the surface that was hit, relative to the target\u0026rsquo;s rotation. normalWorld [ Vec3 ] The normal vector of the hit surface originWorld [ Vec3 ] The starting world position of the raycast. pointLocal [ Vec3 ] The world position of the point that was hit, relative to the target\u0026rsquo;s position. pointWorld [ Vec3 ] The world position of the point that was hit. type [ string ] The physics type of the target that was hit. (See sm.physics.types) valid [ boolean ] Is true if the ray cast was even valid. Functions setDistance Laser.setDistance( distance )\rSets the distance (In Meters!)\nArguments:\ndistance [ number ] The new distance getLaserData Laser.getLaserData()\rGets the data of the laser (Will send a ray cast!)\nReturns:\n[ boolean ] Is True if it hit something. [ LaserData ] The laser data ","date":"0001-01-01","id":36,"permalink":"/docs/lua-api/components/laser/","summary":"The Laser is like a normal scrap mechanic sensor but instead of ON or OFF, It provides more information which could be useful for things like Robot kinematics (More like Sensor-Enhanced Kinematics)","tags":[],"title":"Laser"},{"content":"The Computer API\u0026rsquo;s web documentation is in here!\n","date":"0001-01-01","id":37,"permalink":"/docs/lua-api/","summary":"The Computer API\u0026rsquo;s web documentation is in here!","tags":[],"title":"Lua API"},{"content":"","date":"0001-01-01","id":38,"permalink":"/docs/addon-api/managers/","summary":"","tags":[],"title":"Managers"},{"content":"A helper module for your needs that are math-related\nFunctions clamp sm.scrapcomputers.math.clamp( value, min, max )\rClamps a number value to be ranged from the min argument to the max argument.\nArguments:\nvalue [ number ] The value to clamp min [ number ] The minimum for the value. max [ number ] The maximum for the value. Returns:\n[ number ] The clamped value ","date":"0001-01-01","id":39,"permalink":"/docs/addon-api/modules/math/","summary":"A helper module for your needs that are math-related\nFunctions clamp sm.scrapcomputers.math.clamp( value, min, max )\rClamps a number value to be ranged from the min argument to the max argument.","tags":[],"title":"Math"},{"content":"An encryption module for MD5 only! (Even tho it\u0026rsquo;s no longer recommended to use this for encryption! )\nFunctions new sm.scrapcomputers.md5.new()\rCreates a new MD5 Stream\nReturns:\n[ MD5Stream ] The new MD5 stream sum sm.scrapcomputers.md5.sum( str )\rConverts a string to a MD5 string (NOTE: Pure raw bytes!)\nArguments:\nstr [ string ] The string to convert Returns:\n[ string ] The string in a MD5 string in raw bytes format sumhexa sm.scrapcomputers.md5.sumhexa( str )\rConverts a string to an MD5-encrypted string\nArguments:\nstr [ string ] The string to convert Returns:\n[ string ] The MD5-Encrypted string tohex sm.scrapcomputers.md5.tohex( str )\rConverts an MD5 Raw bytes string to a Proper MD5 string that is readable\nArguments:\nstr [ string ] The string to convert Returns:\n[ string ] The MD5-Encrypted string ","date":"0001-01-01","id":40,"permalink":"/docs/addon-api/modules/md5/","summary":"An encryption module for MD5 only! (Even tho it\u0026rsquo;s no longer recommended to use this for encryption! )\nFunctions new sm.","tags":[],"title":"Md5"},{"content":"This is an MD5 Stream, Allows you to add additional data.\nFields a [ number ] Unknown. The default Value is 0x67452301 (Number form: 1732584193) b [ number ] Unknown. The default value is 0xefcdab89 (Number form: 4023233417) c [ number ] Unknown. The default value is 0x98badcfe (Number form: 2562383102) d [ number ] Unknown. The default value is 0x10325476 (Number form: 271733878) pos [ number ] The current position buf [ string ] The buffer data Functions update MD5Stream.update( data )\rAdds additional data to the stream\nArguments:\ndata [ string ] The data to add. finish MD5Stream.finish()\rFinishes a buffer and returns its output data\nReturns:\n[ string ] The stream\u0026rsquo;s data. ","date":"0001-01-01","id":41,"permalink":"/docs/addon-api/user-data/md5stream/","summary":"This is an MD5 Stream, Allows you to add additional data.\nFields a [ number ] Unknown. The default Value is 0x67452301 (Number form: 1732584193) b [ number ] Unknown.","tags":[],"title":"MD5Stream"},{"content":"This is an MD5 Stream, Allows you to add additional data.\nFields a [ number ] Unknown. The default Value is 0x67452301 (Number form: 1732584193) b [ number ] Unknown. The default value is 0xefcdab89 (Number form: 4023233417) c [ number ] Unknown. The default value is 0x98badcfe (Number form: 2562383102) d [ number ] Unknown. The default value is 0x10325476 (Number form: 271733878) pos [ number ] The current position buf [ string ] The buffer data Functions update MD5Stream.update( data )\rAdds additional data to the stream\nArguments:\ndata [ string ] The data to add. finish MD5Stream.finish()\rFinishes a buffer and returns its output data\nReturns:\n[ string ] The stream\u0026rsquo;s data. ","date":"0001-01-01","id":42,"permalink":"/docs/lua-api/user-data/md5stream/","summary":"This is an MD5 Stream, Allows you to add additional data.\nFields a [ number ] Unknown. The default Value is 0x67452301 (Number form: 1732584193) b [ number ] Unknown.","tags":[],"title":"MD5Stream"},{"content":"","date":"0001-01-01","id":43,"permalink":"/docs/addon-api/modules/","summary":"","tags":[],"title":"Modules"},{"content":"The motor allows you to control what the bearings and pistons should do.\nFunctions setBearingSpeed Motor.setBearingSpeed( speed )\rSets the bearing(s) speed\nArguments:\nspeed [ number ] The speed to set to bearing(s) setBearingAngle Motor.setBearingSpeed( angle )\rSets the bearing(s) angle. Set it to nil to turn into an engine, or else (a number) to a controller.\nArguments:\nangle [ number? ] The angle to set to bearing(s) setPistonSpeed Motor.setPistonSpeed( speed )\rSets the piston(s) speed\nArguments:\nspeed [ number ] The speed to set to piston(s) setTorque Motor.setTorque( torque )\rSets the bearing(s) torque\nArguments:\ntorque [ number ] The torque to set to bearing(s) setLength Motor.setLength( length )\rSets the piston(s) length\nArguments:\nlength [ number ] The length to set to piston(s) setForce Motor.setForce( force )\rSets the piston(s) force\nArguments:\nforce [ number ] The force to set ","date":"0001-01-01","id":44,"permalink":"/docs/lua-api/components/motor/","summary":"The motor allows you to control what the bearings and pistons should do.\nFunctions setBearingSpeed Motor.setBearingSpeed( speed )\rSets the bearing(s) speed","tags":[],"title":"Motor"},{"content":"The network port allows you to send data to other network ports.\nLag Issue\nWe\u0026rsquo;ve discovered a lag problem with the network system for this. We use a table to store received packets which is all and good until you realize that you can send MASSIVE (and I mean like 1/2\u0026rsquo;s of a million) amounts of byte data on a packet. How Lua works in this game, A massive table means lag when removing it.\nThis is our current theory at the time but at the moment. Try not to send too much data!\nFunctions getAntenna NetworkPort.getAntenna()\rGets the connected antenna\nReturns:\n[ AntennaComponent?] The antenna if it is connected, else nil hasConnection NetworkPort.hasConnection()\rReturns true if there\u0026rsquo;s a connection.\nReturns:\n[ boolean ] True if it has a connection. sendPacket NetworkPort.sendPacket( data )\rSends a packet to an Antenna or Network Port\nArguments:\ndata [ any ] The contents of the packet. Doesn\u0026rsquo;t matter what the data is. can be a number or even a function! sendPacketToAntenna NetworkPort.sendPacketToAntenna( name, data )\rSends a packet to a specified antenna. (Antenna needs to be connected!)\nArguments:\nname [ string ] The antenna name. data [ any ] The contents of the packet. Doesn\u0026rsquo;t matter what the data is. can be a number or even a function! getTotalPackets NetworkPort.getTotalPackets()\rGets the total packets.\nReturns:\n[ integer ] The total packets it has to read through. receivePacket NetworkPort.receivePacket()\rReads a packet\nCheck if there are any packets first!\nPlease check if there are any packets! If there are none and you execute this, It will error!\nReturns:\n[ any ] The content of the packet clearPackets NetworkPort.clearPackets()\rClears the packets that it has to read through.\n","date":"0001-01-01","id":45,"permalink":"/docs/lua-api/components/network-port/","summary":"The network port allows you to send data to other network ports.\nLag Issue\nWe\u0026rsquo;ve discovered a lag problem with the network system for this.","tags":[],"title":"Network Port"},{"content":"","date":"0001-01-01","id":46,"permalink":"/docs/projects/","summary":"","tags":[],"title":"Projects"},{"content":"The radar allows you to detect objects around you.\nStructure Target A target is an object detected from the radar\nFields: position [ Vec3 ] The position of the target surfaceArea [ number ] The total surface area that the radar can see Functions getTargets Radar.getTargets()\rGets all the targets it has detected\nReturns:\n[ Radar.Target[]] All targets it has found setVerticalScanAngle Radar.setVerticalScanAngle( angle )\rSets its vertical angle from 10 to 90.\nArguments:\nangle [ number ] The angle to set setHorizontalScanAngle Radar.setHorizontalScanAngle( angle )\rSets its horizontal angle from 10 to 90.\nArguments:\nangle [ number ] The angle to set ","date":"0001-01-01","id":47,"permalink":"/docs/lua-api/components/radar/","summary":"The radar allows you to detect objects around you.\nStructure Target A target is an object detected from the radar","tags":[],"title":"Radar"},{"content":"All data inside the sc namespace!\nFunctions getDisplays sc.getDisplays()\rGets all connected displays from the computer\nReturns:\n[ Display[] ] All connected displays from the computer getDrives sc.getDrives()\rGets all connected drives from the computer\nReturns:\n[ Drive[] ] All connected drives from the computer getHolograms sc.getHolograms()\rGets all connected holograms from the computer\nReturns:\n[ Hologram[] ] All connected holograms from the computer getTerminals sc.getTerminals()\rGets all connected terminals from the computer\nReturns:\n[ Terminal[] ] All connected terminals from the computer getRadars sc.getRadars()\rGets all connected radars from the computer\nReturns:\n[ Radar[] ] All connected radars from the computer getNetworkPorts sc.getNetworkPorts()\rGets all connected network ports from the computer\nReturns:\n[ NetworkPort[] ] All connected network ports from the computer getCameras sc.getCameras()\rGets all connected cameras from the computer\nReturns:\n[ Camera[] ] All connected cameras from the computer getSpeakers sc.getSpeakers()\rGets all connected speakers from the computer\nReturns:\n[ Speaker[] ] All connected speakers from the computer getKeyboards sc.getKeyboards()\rGets all connected keyboards from the computer\nReturns:\n[ Keyboard[] ] All connected keyboards from the computer getMotors sc.getMotors()\rGets all connected motors from the computer\nReturns:\n[ Motor[] ] All connected motors from the computer getLasers sc.getLasers()\rGets all connected lasers from the computer\nReturns:\n[ Laser[] ] All connected lasers from the computer getGPSs sc.getGPSs()\rGets all connected GPSs from the computer\nReturns:\n[ GPS[] ] All connected GPSs from the computer getSeatControllers sc.getSeatControllers()\rGets all connected SeatControllers from the computer\nReturns:\n[ SeatController[] ] All connected SeatControllers from the computer getReg sc.getReg( registerName )\rGets a value of a register.\nThe name of the register should be from a Input Register\nArguments:\nregisterName [ string ] The name of the register to read. Returns:\n[ number ] The value it\u0026rsquo;s receiving. (For things like logic gates: 0 is Off, 1 is On) setReg sc.setReg( registerName, power )\rSets a value of a register.\nThe name of the register should be from a Output Register\nArguments:\nregisterName [ string ] The name of the register to write. power [ number ] The value to set it to. (This is power!) ","date":"0001-01-01","id":48,"permalink":"/docs/lua-api/static-functions-namespaces/sc/","summary":"All data inside the sc namespace!\nFunctions getDisplays sc.getDisplays()\rGets all connected displays from the computer\nReturns:\n[ Display[] ] All connected displays from the computer getDrives sc.","tags":[],"title":"sc"},{"content":"The Audio Module for the computer API!\nStructures AudioParameter Results for getParams\nFields: default [ number ] The default value maximum [ number ] The maximum value minimum [ number ] The minimum value ParamsIncorrectTable Result for areParamsCorrect.\nAll issues that the provided parameters have.\nFields: hasNoParamsUsableIssue [ boolean ] If true. that means there are no usable parameters for this audio issues [ string[][] ] A matrix of issues. The 1st array is the parameter\u0026rsquo;s name and the 2nd array is the issues it has for that parameter. How to check if there are NO issues\nIf the issue is empty and hasNoParamsUsableIssue is false. Then there are NO issues!\nYou can check by doing this\n1if not issues.hasNoParamsUsableIssue and sc.table.getTotalItemsDict(issues.issues) == 0 then 2 -- There are NO issues 3 4 print(\u0026#34;No issues found\u0026#34;) 5else 6 -- There is an issue 7 8 print(\u0026#34;A issue(\u0026#39;s) has been noticed\u0026#34;) 9end\rFunctions areParamsCorrect sc.audio.areParamsCorrect( name, params )\rReturns information about audio parameters in case they have any issues.\nArguments:\nname [ string ] The name of the audio to check params [ AudioParameter[] ] The name of the audio to check Returns:\n[ ParamsIncorrectTable ] All issues with those parameters. exists sc.audio.exists( name )\rReturns true if the audio name exists in Scrap Mechanic.\nArguments:\nname [ string ] The name of the audio to check Returns:\n[ boolean ] If true, the audio exists in the game. Else it doesn\u0026rsquo;t! getAudioNames sc.audio.getAudioNames()\rGets every audio in existence in Scrap Mechanic and puts them all in a string[] you can access\nReturns:\n[ string[] ] Every singular audio in existence getParams sc.audio.getParams( name )\rGets all usable parameters for that audio.\nArguments:\nname [ string ] The name of the audio to get its parameters from Returns:\n[ AudioParameter[] ] All usable parameters for that audio. ","date":"0001-01-01","id":49,"permalink":"/docs/lua-api/static-functions-namespaces/sc.audio/","summary":"The Audio Module for the computer API!\nStructures AudioParameter Results for getParams\nFields: default [ number ] The default value maximum [ number ] The maximum value minimum [ number ] The minimum value ParamsIncorrectTable Result for areParamsCorrect.","tags":[],"title":"sc.audio"},{"content":"The Base64 Module for the computer API!\nFunctions encode sc.base64.encode( data )\rConverts a string to be Base64 encoded\nArguments:\ndata [ string ] The data to be converted Returns:\n[ string ] The encoded data decode sc.base64.decode( data )\rDecodes a base64 string\nArguments:\ndata [ string ] The data to be decoded Returns:\n[ string ] The decoded data ","date":"0001-01-01","id":50,"permalink":"/docs/lua-api/static-functions-namespaces/sc.base64/","summary":"The Base64 Module for the computer API!\nFunctions encode sc.base64.encode( data )\rConverts a string to be Base64 encoded\nArguments:","tags":[],"title":"sc.base64"},{"content":"A BitStream Module that lets you make packet data (for example)\nFunctions new sc.bitstream.new( data )\rCreates a new BitStream Stream\nArguments:\ndata [ string? ] Pre-appended binary data. Returns:\n[ BitStream.Stream ] The bitstream itself. ","date":"0001-01-01","id":51,"permalink":"/docs/lua-api/static-functions-namespaces/sc.bitstream/","summary":"A BitStream Module that lets you make packet data (for example)\nFunctions new sc.bitstream.new( data )\rCreates a new BitStream Stream","tags":[],"title":"sc.bitstream"},{"content":"The Color Module for the computer API!\nFunctions newSingluar sc.color.newSingluar( rgbNum )\rCreates a new color from 1 value. Whatever rgbNum\u0026rsquo;s value has will be set on R, G, and B.\nThis means it\u0026rsquo;s grayscale only!\nArguments:\nrgbNum [ number ] The color value that will be set on R, G, and B Returns:\n[ Color ] The generated color random sc.color.random( from, to )\rGenerates a random color from whatever range you want\nArguments:\nfrom [ number ] The starting range to [ number ] The ending range Returns:\n[ Color ] The generated color random0to1 sc.color.random0to1()\rGenerates a random color from 0 to 1\nReturns:\n[ Color ] The generated color ","date":"0001-01-01","id":52,"permalink":"/docs/lua-api/static-functions-namespaces/sc.color/","summary":"The Color Module for the computer API!\nFunctions newSingluar sc.color.newSingluar( rgbNum )\rCreates a new color from 1 value. Whatever rgbNum\u0026rsquo;s value has will be set on R, G, and B.","tags":[],"title":"sc.color"},{"content":"The font manager allows you to, of course, manage fonts. You can get font information, get all font names you can use, etc.\nThe font manager is NOT a module so please do not identify this as a module\nStructures SCFont A SCFont (SCF in short, ScrapComputers Font for full name) is a font that has a fixed with and height for EVERY singular character. This is in Lua so expect a massive font file size.\nDid you know?\nThe owner (VeraDev) attempted to make a binary font version. However due to some issues with the String Buffer system (Named badly btw. works like a Packet Buffer)\nFor some stupid reason. it was NOT reading the actual glyphs itself and after a lot of headaches, it has been scrapped.\nThis would have been called SCFL (SCFont Lua in readable short, ScrapComputers Font Lua for the full name but I would have changed it to SCLF so the full name is better.)\nFields: fontWidth [ integer ] The width of the font fontHeight [ integer ] The height of the font characters [ string ] All characters used on the font errorChar [ string[] ] The error character font charset [ string[][] ] All character\u0026rsquo;s gylphs. On the first array. The index is the character! The second is the row number! Functions getFont sc.fontmanager.getFont( fontName )\rGets a font\nArguments:\nfontName [ string ] The name of the font to get Returns:\n[ SCFont? ] The font it has recieved. Nil if there is an error. [ string? ] The error message it has received. Nil if there wasn\u0026rsquo;t an error. getFontNames sc.fontmanager.getFontNames()\rGets all fonts the font manager has access to\nReturns:\n[ string[] ] Every font name the font manager has access to. getDefaultFontName sc.fontmanager.getDefaultFontName()\rGets the default font that the font manager uses. This is hard coded so you will require to hook this if you want to modify it.\nReturns:\n[ string ] The default font name used. getDefaultFont sc.fontmanager.getDefaultFont()\rLike getDefaultFontName but calls getFont automaticly.\nReturns:\n[ SCFont ] The default font used. ","date":"0001-01-01","id":53,"permalink":"/docs/lua-api/static-functions-namespaces/sc.fontmanager/","summary":"The font manager allows you to, of course, manage fonts. You can get font information, get all font names you can use, etc.","tags":[],"title":"sc.fontmanager"},{"content":"The JSON Module for the computer API!\nFunctions isSafe sc.json.isSafe( root )\rReturns true if a tlua table is safe to convert to JSON.\nArguments:\nroot [ table ] The lua table to check Returns:\n[ boolean ] If true, That means it\u0026rsquo;s safe to convert. else not! toString sc.json.toString( root, prettify, indent )\rConverts a lua table to a JSON string.\nArguments:\nroot [ table ] The lua table to convert to a string prettify [ boolean ] If true, The JSON string would be prettier. Use this when you want to display it. indent [ string? ] The indentation character. Defaults to \u0026ldquo;\\t\u0026rdquo; Returns:\n[ string ] The JSON string from a Lua table. toTable sc.json.toTable( root )\rConverts a JSON string to a Lua table\nArguments:\nroot [ string ] The JSON string to convert Returns:\n[ table ] The converted Lua table ","date":"0001-01-01","id":54,"permalink":"/docs/lua-api/static-functions-namespaces/sc.json/","summary":"The JSON Module for the computer API!\nFunctions isSafe sc.json.isSafe( root )\rReturns true if a tlua table is safe to convert to JSON.","tags":[],"title":"sc.json"},{"content":"A helper module for your needs that are math-related\nFunctions clamp sc.math.clamp( value, min, max )\rClamps a number value to be ranged from the min argument to the max argument.\nArguments:\nvalue [ number ] The value to clamp min [ number ] The minimum for the value. max [ number ] The maximum for the value. Returns:\n[ number ] The clamped value ","date":"0001-01-01","id":55,"permalink":"/docs/lua-api/static-functions-namespaces/sc.math/","summary":"A helper module for your needs that are math-related\nFunctions clamp sc.math.clamp( value, min, max )\rClamps a number value to be ranged from the min argument to the max argument.","tags":[],"title":"sc.math"},{"content":"An encryption module for MD5 only! (Even tho it\u0026rsquo;s no longer recommended to use this for encryption! )\nFunctions new sc.md5.new()\rCreates a new MD5 Stream\nReturns:\n[ MD5Stream ] The new MD5 stream sum sc.md5.sum( str )\rConverts a string to a MD5 string (NOTE: Pure raw bytes!)\nArguments:\nstr [ string ] The string to convert Returns:\n[ string ] The string in a MD5 string in raw bytes format sumhexa sc.md5.sumhexa( str )\rConverts a string to an MD5-encrypted string\nArguments:\nstr [ string ] The string to convert Returns:\n[ string ] The MD5-Encrypted string tohex sc.md5.tohex( str )\rConverts an MD5 Raw bytes string to a Proper MD5 string that is readable\nArguments:\nstr [ string ] The string to convert Returns:\n[ string ] The MD5-Encrypted string ","date":"0001-01-01","id":56,"permalink":"/docs/lua-api/static-functions-namespaces/sc.md5/","summary":"An encryption module for MD5 only! (Even tho it\u0026rsquo;s no longer recommended to use this for encryption! )\nFunctions new sc.","tags":[],"title":"sc.md5"},{"content":"The SHA256 Module for the computer API!\nYou can only encode. Nothing else\u0026hellip;\nFunctions encode sc.sha256.encode( str )\rEncodes a string to be SHA256\nArguments:\nstr [ string ] The string to convert to SHA256 Returns:\n[ string ] The converted string ","date":"0001-01-01","id":57,"permalink":"/docs/lua-api/static-functions-namespaces/sc.sha256/","summary":"The SHA256 Module for the computer API!\nYou can only encode. Nothing else\u0026hellip;\nFunctions encode sc.sha256.encode( str )\rEncodes a string to be SHA256","tags":[],"title":"sc.sha256"},{"content":"The Table Module for the computer API!\nFunctions clone sc.table.clone( tbl )\rClones a table\nThis function doesn't really need to exist\rThis function is utterly unnecessary but in SOME situations is useful. It does create a new table but it\u0026rsquo;s so easy to implement that I don\u0026rsquo;t think it should deserve to have its function.\nGeuss why\nClick this dropdown to see why its unnessorary\rThis is all the code the function uses\u0026hellip;\n---Clones a table ---@param tbl table The table to clone ---@return table clonedTable The cloned table sc.table.clone = function (tbl) assert(type(tbl) == \u0026#34;table\u0026#34;, \u0026#34;Expected table, got \u0026#34;..type(tbl)..\u0026#34; instead.\u0026#34;) -- Error handling return unpack({tbl}) end\rIt\u0026rsquo;s too little amount of code! I could do it in different ways but those have downsides! So this is the easiest thing we can do.\nArguments:\ntbl [ table ] The table to clone Returns:\n[ table ] The cloned table getItemAt sc.table.getItemAt( tbl, index )\rGets an item from a table via the index. Unlike doing tbl[index]. This will not care if the index numbers aren\u0026rsquo;t in order.\n-- This is in our actual todo local todo = { [25] = \u0026#34;Add glass support for camera\u0026#34; [69] = \u0026#34;Add another parameter for speakers. Allows you to add such as the \\\u0026#34;wind\\\u0026#34; parameter to the sound effect\u0026#34; [4825] = \u0026#34;Add 512x512 and 1024x1024 displays for 3x3, 2x2 and 1x1 (Im going to add this no matter what :) )\u0026#34; } local lastTodoGood = sc.table.getItemAt(todo, 3) -- Works! Returns item of the index of 4825. Since it\u0026#39;s the 3rd element in the table local lastTodoBad = todo[3] -- Doesn\u0026#39;t Work! Tries grabbing an element at index 3 but that doesn\u0026#39;t exist! so this is nil! print(\u0026#34;lastTodoGood: \u0026#34;..tostring(lastTodoGood)) print(\u0026#34;lastTodoBad: \u0026#34; ..tostring(lastTodoBad ))\rYou see that tbl[index] would error out but not sc.table.getItemAt\nArguments:\ntbl [ table ] The table index [ integer ] The item to get Returns:\n[ any ] Whatever data it has received from the index getTotalItems sc.table.getTotalItems( tbl )\rGets all items via a ipairs loop.\nUnlike doing #tbl, If the indexing was weird, #tbl would return 0. This function does not care if the indexing system is weird. Will give you the same result as if the indexing system was normal.\nFor dictionaries. Use sc.table.getTotalItemsDict\nArguments:\ntbl [ table ] The table Returns:\n[ integer ] The total items in the table getTotalItemsDict sc.table.getTotalItemsDict( tbl )\rGets all items via a pairs loop. This is used for dictionaries. else use sc.table.getTotalItems\nUnlike doing #tbl, If the indexing was weird, #tbl would return 0. This function does not care if the indexing system is weird. Will give you the same result as if the indexing system was normal.\nArguments:\ntbl [ table ] The table Returns:\n[ integer ] The total items in the table isDictonary sc.table.isDictonary( tbl )\rReturns true if it is a dictionary\nArguments:\ntbl [ table ] The table to check Returns:\n[ boolean ] Is true if it\u0026rsquo;s a dictionary. itemExistsInList sc.table.itemExistsInList( tbl, item )\rReturns true if an item is found in a list\nArguments:\ntbl [ table ] The table to check item [ any ] The item to try finding the table. (Cannot be nil!) Returns:\n[ boolean ] If it was found or not. numberlyOrderTable sc.table.numberlyOrderTable( tbl )\rOrders the list to be 1 to table size\nArguments:\ntbl [ table ] The table to check Returns:\n[ table ] The organized table. shiftTableIndexes sc.table.shiftTableIndexes( tbl, shiftAmount )\rShifts list\u0026rsquo;s indexes.\nArguments:\ntbl [ table ] table The table shiftAmount [ integer ] integer The amount to shift Returns:\n[ table ] The shifted table merge sc.table.merge( tbl1, tbl2, fullOverwrite )\rMerges 2 tables in 1.\nImportant!\nThe order that you put the sc.table.merge matters! tbl2 will override/overwrite anything inside tbl1!\nArguments:\ntbl1 [ table ] The 1st table tbl2 [ table ] The 2nd table fullOverwrite [ boolean? ] This will make it so the merged value will be always from tbl2. Will not care about anything else. The default is false Returns:\ntbl [ table ] The merged table toString sc.table.toString( tbl )\rConverts a table to the same thing but as a string. If you were to try doing this with Lua\u0026rsquo;s tostring. You would just get \u0026ldquo;table: 00A59928\u0026rdquo;. Not the actual contents of the table itself!\nArguments:\ntbl [ table ] The table Returns:\n[ string ] The converted lua table is a string. ","date":"0001-01-01","id":58,"permalink":"/docs/lua-api/static-functions-namespaces/sc.table/","summary":"The Table Module for the computer API!\nFunctions clone sc.table.clone( tbl )\rClones a table\nThis function doesn't really need to exist\rThis function is utterly unnecessary but in SOME situations is useful.","tags":[],"title":"sc.table"},{"content":"The utility Module for the computer API!\nFunctions positiveModulo sc.util.positiveModulo( a, b )\rGets the remainder of the division.\nDid you know? (Rant warning!)\nThis is useless and I don\u0026rsquo;t know why you need this. sm.util.positiveModule redirects this function anyway!\nInfact sc.util.positiveModulo IS the same as sm.util.positiveModulo. Basicly 1:1!\nIt\u0026rsquo;s not like we reimplemented it. We only have that function so you can\u0026rsquo;t crash the game! Thanks, SM Devs for not adding 1 ERROR CHECK FOR DIVISION BY ZERO ERROR\nGo ahead and take a look at our code for crash prevention:\n---Gets the remainder of division. This function is more safer than sm.util.postiveModule as for some reason, Scrap Mechanic ---dosent handle division by 0 for sm.util.postiveModule so it crashes. ---@param a number The number to divide ---@param b number The amount to divide ---@return number remainder The remains that it is impossible to divide sc.util.postiveModulo = function (a, b) if b == 0 then error(\u0026#34;Cannot Divide by 0!\u0026#34;) else return sm.util.positiveModulo(a, b) end end\rThis is the actual code we have to use so you can\u0026rsquo;t crash the game. If you don\u0026rsquo;t think you can crash the game, Enable unsafe mode write this into the computer, and run it\nsm.util.positiveModulo(0, 0) -- The first parameter can be any number\rAnd when you run it. Scrap Mechanic will explode itself because it has received a \u0026ldquo;Division By Zero\u0026rdquo; error which wasn\u0026rsquo;t handled and so you get a bug splat!\nSO SCREW YOU SCRAP MECHANIC DEVELOPERS FOR NOT BEING ABLE TO DO 1 ERROR HANDLING CHECK WHICH COULD ONLY TAKE A COUPLE OF SECONDS!\nArguments:\na [ number ] The number to divide and get its remainder b [ number ] The division by number Returns:\n[ number ] The remainder of a divided number. ","date":"0001-01-01","id":59,"permalink":"/docs/lua-api/static-functions-namespaces/sc.util/","summary":"The utility Module for the computer API!\nFunctions positiveModulo sc.util.positiveModulo( a, b )\rGets the remainder of the division.\nDid you know?","tags":[],"title":"sc.util"},{"content":"The Vector3 Module for the computer API!\nFunctions add sc.vec3.add( vec3, x, y, z )\rAdds a vec3 by X, Y and Z\nArguments:\nvec3 [ Vec3 ] The vector3 to modify x [ number ] Vec3\u0026rsquo;s x value to be added by y [ number ] Vec3\u0026rsquo;s y value to be added by z [ number ] Vec3\u0026rsquo;s z value to be added by Returns:\n[ Vec3 ] The new vector3 divide sc.vec3.divide( vec3, x, y, z )\rDivides a vec3 by X, Y and Z\nArguments:\nvec3 [ Vec3 ] The vector3 to modify x [ number ] Vec3\u0026rsquo;s x value to be divided by y [ number ] Vec3\u0026rsquo;s y value to be divided by z [ number ] Vec3\u0026rsquo;s z value to be divided by Returns:\n[ Vec3 ] The new vector3 mulitply sc.vec3.mulitply( vec3, x, y, z )\rMultiplies a vec3 by X, Y and Z\nArguments:\nvec3 [ Vec3 ] The vector3 to modify x [ number ] Vec3\u0026rsquo;s x value to be multiplied by y [ number ] Vec3\u0026rsquo;s y value to be multiplied by z [ number ] Vec3\u0026rsquo;s z value to be multiplied by Returns:\n[ Vec3 ] The new vector3 subtract sc.vec3.subtract( vec3, x, y, z )\rSubtracts a vec3 by X, Y and Z\nArguments:\nvec3 [ Vec3 ] The vector3 to modify x [ number ] Vec3\u0026rsquo;s x value to be subtracted by y [ number ] Vec3\u0026rsquo;s y value to be subtracted by z [ number ] Vec3\u0026rsquo;s z value to be subtracted by Returns:\n[ Vec3 ] The new vector3 distance sc.vec3.distance( vec1, vec2 )\rCalculates the distance between 2 vectors\nFormula: Arguments:\nvec1 [ Vec3 ] The 1st vector3 vec2 [ Vec3 ] The 2nd vector3 Returns:\n[ number ] The distance between the 2 vectors newSingluar sc.vec3.newSingluar( xyz )\rCreates a vector3 by 1 number for xyz\nArguments:\nxyz [ number ] The value for the X, Y and Z Returns:\n[ Vec3 ] The new vector3 ","date":"0001-01-01","id":60,"permalink":"/docs/lua-api/static-functions-namespaces/sc.vec3/","summary":"The Vector3 Module for the computer API!\nFunctions add sc.vec3.add( vec3, x, y, z )\rAdds a vec3 by X, Y and Z","tags":[],"title":"sc.vec3"},{"content":"VPBS allows you to convert a lua table to a packet buffer. Use this if you do NOT wanna deal with BitStreams and want to do every packet as a string.\nFunctions tostring sc.VPBS.tostring( data )\rConverts a table to a VPBS string\nArguments:\ntbl [ table ] The table to convert Returns:\n[ string ] vpbsStr The converted string. totable sc.VPBS.totable( data )\rConverts a VPBS string to a table\nArguments:\ndata [ string ] The VPBS string. Returns:\n[ table ] The table from the string isVPBSstring sc.VPBS.isVPBSstring( data )\rReturns true if the string is a VPBS-formatted string\nArguments:\ndata [ string ] The data to check Returns:\n[ boolean ] True if it\u0026rsquo;s a VPBS string, else not. ","date":"0001-01-01","id":61,"permalink":"/docs/lua-api/static-functions-namespaces/sc.vpbs/","summary":"VPBS allows you to convert a lua table to a packet buffer. Use this if you do NOT wanna deal with BitStreams and want to do every packet as a string.","tags":[],"title":"sc.vpbs"},{"content":"","date":"0001-01-01","id":62,"permalink":"/docs/","summary":"","tags":[],"title":"ScrapComputers - Documentation"},{"content":"This allows you to control seats! Read its WASD data, press some buttons, and cause a war crime against humanity by using seats for networking! (Please don\u0026rsquo;t)\nStructures SeatData Contains data on the seat.\nFields wsPower [ 1|0|-1 ] The power for WS. 1 = Forwards, 0 = None, -1 = Backwards adPower [ 1|0|-1 ] The power for AD. 1 = Left, 0 = None, -1 = Right characterName [ string? ] The characters name that is sitting. JointData Contains data of a joint.\nFields leftSpeed [ number ] The left angle speed. rightSpeed [ number ] The right angle speed. leftLimit [ number ] The left angle limit. rightLimit [ number ] The right angle limit. bearingLock [ boolean ] Whether the joint is unlocked or not. Functions getSeatData SeatController.getSeatData()\rGets data from the connected seat\nReturns:\n[ SeatController.SeatData ] The data of the seat getJointData SeatController.getJointData()\rGets data from connected joints from the seat\nReturns:\n[ SeatController.JointData[] ] The data of multiple joints pressButton SeatController.pressButton( index )\rPresses a button connected to the seat\nArguments:\nindex [ integer ] The button to press (0 to 9) releaseButton SeatController.releaseButton( index )\rReleases a button connected to the seat\nArguments:\nindex [ integer ] The button to release (0 to 9) setADPower SeatController.setADPower( power )\rSets the power for AD movement\nArguments:\npower [ 1|0|-1 ] The power for AD to set. 1 = Left, 0 = None, -1 = Right Unusable at the time!\nThis function is planned to be implemented however SM sucks! At the time we think that it\u0026rsquo;s because 2 scripts are slaughtering them together. 1 wants to make a variable like this and others like this. It\u0026rsquo;s like Battle Royal but with Lua and it\u0026rsquo;s handled like actual dog poop!\nWhen it was implemented, after 1 commit. The next commit was named: Removed WS and AD power set because sm is dumb. We hate this!\nsetWSPower SeatController.setWSPower( power )\rSets the power for WS movement\nArguments:\npower [ 1|0|-1 ] The power for WS. 1 = Forwards, 0 = None, -1 = Backwards Unusable at the time!\nThis function is planned to be implemented however SM sucks! At the time we think that it\u0026rsquo;s because 2 scripts are slaughtering them together. 1 wants to make a variable like this and others like this. It\u0026rsquo;s like Battle Royal but with Lua and it\u0026rsquo;s handled like actual dog poop!\nWhen it was implemented, after 1 commit. The next commit was named: Removed WS and AD power set because sm is dumb. We hate this!\n","date":"0001-01-01","id":63,"permalink":"/docs/lua-api/components/seatcontroller/","summary":"This allows you to control seats! Read its WASD data, press some buttons, and cause a war crime against humanity by using seats for networking!","tags":[],"title":"SeatController"},{"content":"The SHA256 Module for the computer API!\nYou can only encode. Nothing else\u0026hellip;\nFunctions encode sm.scrapcomputers.sha256.encode( str )\rEncodes a string to be SHA256\nArguments:\nstr [ string ] The string to convert to SHA256 Returns:\n[ string ] The converted string ","date":"0001-01-01","id":64,"permalink":"/docs/addon-api/modules/sha256/","summary":"The SHA256 Module for the computer API!\nYou can only encode. Nothing else\u0026hellip;\nFunctions encode sm.scrapcomputers.sha256.encode( str )\rEncodes a string to be SHA256","tags":[],"title":"Sha256"},{"content":"-\nScrapComputers adds 2 new connection types when loaded. They are used for such as connecting components to components!\nFields sm.interactable.connectionType.compositeIO [ number ] Used to connect components to other components sm.interactable.connectionType.networkingIO [ number ] Like the componsiteIO one but specifically to be ONLY for network-related components\n","date":"0001-01-01","id":65,"permalink":"/docs/addon-api/static-function-namespaces/sm.interactable.connectiontype/","summary":"-\nScrapComputers adds 2 new connection types when loaded. They are used for such as connecting components to components!\nFields sm.","tags":[],"title":"sm.interactable.connectionType"},{"content":"All data inside the sm.scrapcomputers namespace!\nFields privateDataPrefix [ string ] The prefix used for components for interfacing together without being public to the computer API.\nTables layoutFiles This table contains all layout files from $CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout. You could also just write the names independently.\nsm.scrapcomputers.layoutFiles = { Computer = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout/Computer.layout\u0026#34;, Terminal = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout/Terminal.layout\u0026#34;, Register = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout/Register.layout\u0026#34;, Configurator = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout/Configurator.layout\u0026#34;, Harddrive = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout/Harddrive.layout\u0026#34;, Keyboard = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout/Keyboard.layout\u0026#34;, Banned = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout/Banned.layout\u0026#34;, }\rjsonFiles Contains JSON files that are used in ScrapComputers.\nsm.scrapcomputers.jsonFiles = { ExamplesList = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/JSON/examples.json\u0026#34;, HarddriveExamples = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/JSON/hdd_examples.json\u0026#34;, AudioList = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/JSON/audio.json\u0026#34;, BuiltInFonts = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/JSON/fonts.json\u0026#34; }\rdataList Contains all functions, data (or whatever). Eg: Displays is a list of all displays in ScrapComputers.\nsm.scrapcomputers.dataList = { [\u0026#34;Displays\u0026#34;] = {}, [\u0026#34;Harddrives\u0026#34;] = {}, [\u0026#34;Holograms\u0026#34;] = {}, [\u0026#34;Terminals\u0026#34;] = {}, [\u0026#34;Radars\u0026#34;] = {}, [\u0026#34;Readers\u0026#34;] = {}, [\u0026#34;Writers\u0026#34;] = {}, [\u0026#34;WriterInters\u0026#34;] = {}, [\u0026#34;NetworkPorts\u0026#34;] = {}, [\u0026#34;Antennas\u0026#34;] = {}, [\u0026#34;Cameras\u0026#34;] = {}, [\u0026#34;Speakers\u0026#34;] = {}, [\u0026#34;Keyboards\u0026#34;] = {}, [\u0026#34;Motors\u0026#34;] = {}, [\u0026#34;Lasers\u0026#34;] = {}, [\u0026#34;GPSs\u0026#34;] = {}, [\u0026#34;SeatControllers\u0026#34;] = {}, }\rEnums filters.dataType The Data types for sm.scrapcomputers.dataList. Great for filtering components.\nsm.scrapcomputers.filters.dataType = { Displays = \u0026#34;Displays\u0026#34;, Harddrives = \u0026#34;Harddrives\u0026#34;, Holograms = \u0026#34;Holograms\u0026#34;, Terminals = \u0026#34;Terminals\u0026#34;, Radars = \u0026#34;Radars\u0026#34;, Readers = \u0026#34;Readers\u0026#34;, Writers = \u0026#34;Writers\u0026#34;, NetworkPorts = \u0026#34;NetworkPorts\u0026#34;, Antennas = \u0026#34;Antennas\u0026#34;, Cameras = \u0026#34;Cameras\u0026#34;, Speakers = \u0026#34;Speakers\u0026#34;, Keyboards = \u0026#34;Keyboards\u0026#34;, Motors = \u0026#34;Motors\u0026#34;, Lasers = \u0026#34;Lasers\u0026#34;, GPSs = \u0026#34;GPSs\u0026#34;, SeatControllers = \u0026#34;SeatControllers\u0026#34;, }\rFunctions toString sm.scrapcomputers.toString( value )\rAdditional features that the normal tostring function doesn\u0026rsquo;t have\nArguments:\nvalue [ any ] The value to convert to a string Returns:\n[ string ] The value as a string ","date":"0001-01-01","id":66,"permalink":"/docs/addon-api/static-function-namespaces/sm.scrapcomputers/","summary":"All data inside the sm.scrapcomputers namespace!\nFields privateDataPrefix [ string ] The prefix used for components for interfacing together without being public to the computer API.","tags":[],"title":"sm.scrapcomputers"},{"content":"This one allows you to add configurations and look at the values for it. You can modify them at the Configurator, An interactable that allows you to modify the configs of the mod and add-ons.\nStructures Configuration This would contain data for a config.\nFields id [ string ] The id of the config name [ string ] The name of the config description [ string ] The description of the config selectedOption [ integer ] The current config\u0026rsquo;s selected option hostOnly [ boolean ] If the configuration is host-only accessible options [ string ][] List of usable options for the config. Functions createDefaultConfigs sm.scrapcomputers.config.createDefaultConfigs( onlyDefaultConfigs )\rCreates a fresh configuration. Use onlyDefaultConfigs to remove all add-on-added configurations.\nArguments:\nonlyDefaultConfigs [ boolean? ] Set this to true if you do not want configs added from configs to be added. Default is false Returns:\n[ Configuration[]] Contains the fresh configuration\u0026rsquo;s. initConfig sm.scrapcomputers.config.initConfig()\rInitialize the configuration manager. (Required to run when messing around with configurations!)\nnameToId sm.scrapcomputers.config.nameToId( name )\rServer-Only\nRequires initalization!\nThis function will NOT work if sm.scrapcomputers.config.initConfig hasn\u0026rsquo;t been called.\nConverts a config name to its id.\nArguments:\nname [ string ] The name of the config Returns:\nid [ string ] The id of the config setConfig sm.scrapcomputers.config.setConfig( id, selectedOption )\rServer-Only\nRequires initalization!\nThis function will NOT work if sm.scrapcomputers.config.initConfig hasn\u0026rsquo;t been called.\nUpdates the value of a configuration\nArguments:\nid [ string ] The id of the config selectedOption [ integer ] The newly selected option value resetConfiguration sm.scrapcomputers.config.resetConfiguration()\rServer-Only\nRequires initalization!\nThis function will NOT work if sm.scrapcomputers.config.initConfig hasn\u0026rsquo;t been called.\nResets the configuration back to normal.\nsaveConfig sm.scrapcomputers.config.saveConfig()\rServer-Only\nRequires initalization!\nThis function will NOT work if sm.scrapcomputers.config.initConfig hasn\u0026rsquo;t been called.\nSaves config through all clients\ncreateConfig sm.scrapcomputers.config.createConfig( id, name, description, hostOnly, options )\rServer-Only\nRequires initalization!\nThis function will NOT work if sm.scrapcomputers.config.initConfig hasn\u0026rsquo;t been called.\nCreates a new config\nArguments:\nid [ string ] The id name name [ string ] The name of the config (Would be shown to Configurator) description [ string ] The description of the config hostOnly [ boolean ] If true, Only the host can modify this options [ string[] ] The usable options for this config getConfig sm.scrapcomputers.config.getConfig( id )\rServer-Only\nRequires initalization!\nThis function will NOT work if sm.scrapcomputers.config.initConfig hasn\u0026rsquo;t been called.\nGets a config\nArguments:\nid [ string ] The id of the config to get Returns:\n[ Configuration ] The config that it has found. configExists sm.scrapcomputers.config.configExists( id )\rServer-Only\nRequires initalization!\nThis function will NOT work if sm.scrapcomputers.config.initConfig hasn\u0026rsquo;t been called.\nReturns true if the config exists\nArguments:\nid [ string ] The id of the config to check Returns:\n[ boolean ] True if the config exists ","date":"0001-01-01","id":67,"permalink":"/docs/addon-api/static-function-namespaces/sm.scrapcomputers.config/","summary":"This one allows you to add configurations and look at the values for it. You can modify them at the Configurator, An interactable that allows you to modify the configs of the mod and add-ons.","tags":[],"title":"sm.scrapcomputers.config"},{"content":"The speaker allows you to play ANY kind of sound and we mean ANYTHING!\nFunctions beep Speaker.beep()\rPlay\u0026rsquo;s a beep sound\nbeepQueue Speaker.beepQueue()\rPlay\u0026rsquo;s a beep sound\nThis uses the Queue system!\nThis is going to be sent to the queue, Flush the queue to play it!\nReturns:\n[ integer ] The index where the note is located in the queue. playNote Speaker.playNote( pitch, note, durationTicks )\rPlay\u0026rsquo;s whatever note\nArguments:\npitch [ number ] The pitch of the note note [ integer ] The note to play durationTicks [ integer ] The duration that it will play in ticks playNoteQueue Speaker.playNoteQueue( pitch, note, durationTicks )\rPlay\u0026rsquo;s whatever note\nThis uses the Queue system!\nThis is going to be sent to the queue, Flush the queue to play it!\nArguments:\npitch [ number ] The pitch of the note note [ integer ] The note to play durationTicks [ integer ] The duration that it will play in ticks Returns:\n[ integer ] The index where the note is located in the queue. playNoteEffect Speaker.playNoteEffect( name, params, durationTicks )\rPlays whatever event effect you specify!\nArguments:\nname [ string ] The name of the audio to play params [ AudioParameter[]] Audio parameters to use durationTicks [ integer ] The duration of how long it should play in ticks! playNoteEffectQueue Speaker.playNoteEffectQueue( name, params, durationTicks )\rPlays whatever event effect you specify!\nThis uses the Queue system!\nThis is going to be sent to the queue, Flush the queue to play it!\nArguments:\nname [ string ] The name of the audio to play params [ AudioParameter[]] Audio parameters to use durationTicks [ integer ] The duration of how long it should play in ticks! Returns:\n[ integer ] The index where the note is located in the queue. flushQueue Speaker.flushQueue()\rFlushes the queue and plays all of them whatever it\u0026rsquo;s inside at ONCE!\nremoveNote Speaker.removeNote( noteIndex )\rRemove a note from the queue\nArguments:\nnoteIndex [ integer ] The index where the note is located clearQueue Speaker.clearQueue()\rClears the entire queue\ngetCurrentQueueSize Speaker.getCurrentQueueSize()\rReturns the size of the queue\nReturns:\nqueueSize [ integer ] The size of the queue. ","date":"0001-01-01","id":68,"permalink":"/docs/lua-api/components/speaker/","summary":"The speaker allows you to play ANY kind of sound and we mean ANYTHING!\nFunctions beep Speaker.beep()\rPlay\u0026rsquo;s a beep sound","tags":[],"title":"Speaker"},{"content":"","date":"0001-01-01","id":69,"permalink":"/docs/addon-api/static-function-namespaces/","summary":"","tags":[],"title":"Static Function Namespace"},{"content":"All namespaces inside the sc table. You can also access the modules here.\n","date":"0001-01-01","id":70,"permalink":"/docs/lua-api/static-functions-namespaces/","summary":"All namespaces inside the sc table. You can also access the modules here.","tags":[],"title":"Static Function Namespaces"},{"content":"The Table Module for the computer API!\nFunctions clone sm.scrapcomputers.table.clone( tbl )\rClones a table\nThis function doesn't really need to exist\rThis function is utterly unnecessary but in SOME situations is useful. It does create a new table but it\u0026rsquo;s so easy to implement that I don\u0026rsquo;t think it should deserve to have its function.\nGeuss why\nClick this dropdown to see why its unnessorary\rThis is all the code the function uses\u0026hellip;\n---Clones a table ---@param tbl table The table to clone ---@return table clonedTable The cloned table sm.scrapcomputers.table.clone = function (tbl) assert(type(tbl) == \u0026#34;table\u0026#34;, \u0026#34;Expected table, got \u0026#34;..type(tbl)..\u0026#34; instead.\u0026#34;) -- Error handling return unpack({tbl}) end\rIt\u0026rsquo;s too little amount of code! I could do it in different ways but those have downsides! So this is the easiest thing we can do.\nArguments:\ntbl [ table ] The table to clone Returns:\n[ table ] The cloned table getItemAt sm.scrapcomputers.table.getItemAt( tbl, index )\rGets an item from a table via the index. Unlike doing tbl[index]. This will not care if the index numbers aren\u0026rsquo;t in order.\n-- This is in our actual todo local todo = { [25] = \u0026#34;Add glass support for camera\u0026#34; [69] = \u0026#34;Add another parameter for speakers. Allows you to add such as the \\\u0026#34;wind\\\u0026#34; parameter to the sound effect\u0026#34; [4825] = \u0026#34;Add 512x512 and 1024x1024 displays for 3x3, 2x2 and 1x1 (Im going to add this no matter what :) )\u0026#34; } local lastTodoGood = sm.scrapcomputers.table.getItemAt(todo, 3) -- Works! Returns item of the index of 4825. Since it\u0026#39;s the 3rd element in the table local lastTodoBad = todo[3] -- Doesn\u0026#39;t Work! Tries grabbing an element at index 3 but that doesn\u0026#39;t exist! so this is nil! print(\u0026#34;lastTodoGood: \u0026#34;..tostring(lastTodoGood)) print(\u0026#34;lastTodoBad: \u0026#34; ..tostring(lastTodoBad ))\rYou see that tbl[index] would error out but not sm.scrapcomputers.table.getItemAt\nArguments:\ntbl [ table ] The table index [ integer ] The item to get Returns:\n[ any ] Whatever data it has received from the index getTotalItems sm.scrapcomputers.table.getTotalItems( tbl )\rGets all items via a ipairs loop.\nUnlike doing #tbl, If the indexing was weird, #tbl would return 0. This function does not care if the indexing system is weird. Will give you the same result as if the indexing system was normal.\nFor dictionaries. Use sm.scrapcomputers.table.getTotalItemsDict\nArguments:\ntbl [ table ] The table Returns:\n[ integer ] The total items in the table getTotalItemsDict sm.scrapcomputers.table.getTotalItemsDict( tbl )\rGets all items via a pairs loop. This is used for dictionaries. else use sm.scrapcomputers.table.getTotalItems\nUnlike doing #tbl, If the indexing was weird, #tbl would return 0. This function does not care if the indexing system is weird. Will give you the same result as if the indexing system was normal.\nArguments:\ntbl [ table ] The table Returns:\n[ integer ] The total items in the table isDictonary sm.scrapcomputers.table.isDictonary( tbl )\rReturns true if it is a dictionary\nArguments:\ntbl [ table ] The table to check Returns:\n[ boolean ] Is true if it\u0026rsquo;s a dictionary. itemExistsInList sm.scrapcomputers.table.itemExistsInList( tbl, item )\rReturns true if an item is found in a list\nArguments:\ntbl [ table ] The table to check item [ any ] The item to try finding the table. (Cannot be nil!) Returns:\n[ boolean ] If it was found or not. numberlyOrderTable sm.scrapcomputers.table.numberlyOrderTable( tbl )\rOrders the list to be 1 to table size\nArguments:\ntbl [ table ] The table to check Returns:\n[ table ] The organized table. shiftTableIndexes sm.scrapcomputers.table.shiftTableIndexes( tbl, shiftAmount )\rShifts list\u0026rsquo;s indexes.\nArguments:\ntbl [ table ] table The table shiftAmount [ integer ] integer The amount to shift Returns:\n[ table ] The shifted table merge sm.scrapcomputers.table.merge( tbl1, tbl2, fullOverwrite )\rMerges 2 tables in 1.\nImportant!\nThe order that you put the sm.scrapcomputers.table.merge matters! tbl2 will override/overwrite anything inside tbl1!\nArguments:\ntbl1 [ table ] The 1st table tbl2 [ table ] The 2nd table fullOverwrite [ boolean? ] This will make it so the merged value will be always from tbl2. Will not care about anything else. The default is false Returns:\ntbl [ table ] The merged table toString sm.scrapcomputers.table.toString( tbl )\rConverts a table to the same thing but as a string. If you were to try doing this with Lua\u0026rsquo;s tostring. You would just get \u0026ldquo;table: 00A59928\u0026rdquo;. Not the actual contents of the table itself!\nArguments:\ntbl [ table ] The table Returns:\n[ string ] The converted lua table is a string. ","date":"0001-01-01","id":71,"permalink":"/docs/addon-api/modules/table/","summary":"The Table Module for the computer API!\nFunctions clone sm.scrapcomputers.table.clone( tbl )\rClones a table\nThis function doesn't really need to exist\rThis function is utterly unnecessary but in SOME situations is useful.","tags":[],"title":"Table"},{"content":"","date":"0001-01-01","id":72,"permalink":"/tags/","summary":"","tags":[],"title":"Tags"},{"content":"The terminal is like a display but more like a console you can write to, Instead of effects, it uses via GUI.\nFunctions send Terminal.send( msg )\rSends a message to the terminal\nArguments:\nmsg [ string ] The message to send clear Terminal.clear()\rClears all data.\nclearInputHistory Terminal.clearInputHistory()\rClears the user\u0026rsquo;s input history\nreceivedInputs Terminal.receivedInputs()\rReturns true if there are available inputs.\nReturns:\n[ boolean ] If true, then there are inputs you can read from. getInput Terminal.getInput()\rGets the latest user input\nUse Terminal.receivedInputs() for this!\nPlease use Terminal.receivedInputs() to check if there\u0026rsquo;s something to get! If there are none and you call this, It will error out!\nReturns:\n[ string ] The input that the user has entered. ","date":"0001-01-01","id":73,"permalink":"/docs/lua-api/components/terminal/","summary":"The terminal is like a display but more like a console you can write to, Instead of effects, it uses via GUI.","tags":[],"title":"Terminal"},{"content":"Unlike structures, these contain functions! Thats the only difference between Userdata\u0026rsquo;s and structures.\n","date":"0001-01-01","id":74,"permalink":"/docs/addon-api/user-data/","summary":"Unlike structures, these contain functions! Thats the only difference between Userdata\u0026rsquo;s and structures.","tags":[],"title":"Userdata"},{"content":"Unlike structures, these contain functions! Thats the only difference between Userdata\u0026rsquo;s and structures.\n","date":"0001-01-01","id":75,"permalink":"/docs/lua-api/user-data/","summary":"Unlike structures, these contain functions! Thats the only difference between Userdata\u0026rsquo;s and structures.","tags":[],"title":"Userdata"},{"content":"The utility Module for the computer API!\nFunctions positiveModulo sm.scrapcomputers.util.positiveModulo( a, b )\rGets the remainder of the division.\nDid you know? (Rant warning!)\nThis is useless and I don\u0026rsquo;t know why you need this. sm.util.positiveModule redirects this function anyway!\nInfact sm.scrapcomputers.util.positiveModulo IS the same as sm.util.positiveModulo. Basicly 1:1!\nIt\u0026rsquo;s not like we reimplemented it. We only have that function so you can\u0026rsquo;t crash the game! Thanks, SM Devs for not adding 1 ERROR CHECK FOR DIVISION BY ZERO ERROR\nGo ahead and take a look at our code for crash prevention:\n---Gets the remainder of division. This function is more safer than sm.util.postiveModule as for some reason, Scrap Mechanic ---dosent handle division by 0 for sm.util.postiveModule so it crashes. ---@param a number The number to divide ---@param b number The amount to divide ---@return number remainder The remains that it is impossible to divide sm.scrapcomputers.util.postiveModulo = function (a, b) if b == 0 then error(\u0026#34;Cannot Divide by 0!\u0026#34;) else return sm.util.positiveModulo(a, b) end end\rThis is the actual code we have to use so you can\u0026rsquo;t crash the game. If you don\u0026rsquo;t think you can crash the game, Enable unsafe mode write this into the computer, and run it\nsm.util.positiveModulo(0, 0) -- The first parameter can be any number\rAnd when you run it. Scrap Mechanic will explode itself because it has received a \u0026ldquo;Division By Zero\u0026rdquo; error which wasn\u0026rsquo;t handled and so you get a bug splat!\nSO SCREW YOU SCRAP MECHANIC DEVELOPERS FOR NOT BEING ABLE TO DO 1 ERROR HANDLING CHECK WHICH COULD ONLY TAKE A COUPLE OF SECONDS!\nArguments:\na [ number ] The number to divide and get its remainder b [ number ] The division by number Returns:\n[ number ] The remainder of a divided number. ","date":"0001-01-01","id":76,"permalink":"/docs/addon-api/modules/util/","summary":"The utility Module for the computer API!\nFunctions positiveModulo sm.scrapcomputers.util.positiveModulo( a, b )\rGets the remainder of the division.\nDid you know?","tags":[],"title":"Util"},{"content":"The Vector3 Module for the computer API!\nFunctions add sm.scrapcomputers.vec3.add( vec3, x, y, z )\rAdds a vec3 by X, Y and Z\nArguments:\nvec3 [ Vec3 ] The vector3 to modify x [ number ] Vec3\u0026rsquo;s x value to be added by y [ number ] Vec3\u0026rsquo;s y value to be added by z [ number ] Vec3\u0026rsquo;s z value to be added by Returns:\n[ Vec3 ] The new vector3 divide sm.scrapcomputers.vec3.divide( vec3, x, y, z )\rDivides a vec3 by X, Y and Z\nArguments:\nvec3 [ Vec3 ] The vector3 to modify x [ number ] Vec3\u0026rsquo;s x value to be divided by y [ number ] Vec3\u0026rsquo;s y value to be divided by z [ number ] Vec3\u0026rsquo;s z value to be divided by Returns:\n[ Vec3 ] The new vector3 mulitply sm.scrapcomputers.vec3.mulitply( vec3, x, y, z )\rMultiplies a vec3 by X, Y and Z\nArguments:\nvec3 [ Vec3 ] The vector3 to modify x [ number ] Vec3\u0026rsquo;s x value to be multiplied by y [ number ] Vec3\u0026rsquo;s y value to be multiplied by z [ number ] Vec3\u0026rsquo;s z value to be multiplied by Returns:\n[ Vec3 ] The new vector3 subtract sm.scrapcomputers.vec3.subtract( vec3, x, y, z )\rSubtracts a vec3 by X, Y and Z\nArguments:\nvec3 [ Vec3 ] The vector3 to modify x [ number ] Vec3\u0026rsquo;s x value to be subtracted by y [ number ] Vec3\u0026rsquo;s y value to be subtracted by z [ number ] Vec3\u0026rsquo;s z value to be subtracted by Returns:\n[ Vec3 ] The new vector3 distance sm.scrapcomputers.vec3.distance( vec1, vec2 )\rCalculates the distance between 2 vectors\nFormula: Arguments:\nvec1 [ Vec3 ] The 1st vector3 vec2 [ Vec3 ] The 2nd vector3 Returns:\n[ number ] The distance between the 2 vectors newSingluar sm.scrapcomputers.vec3.newSingluar( xyz )\rCreates a vector3 by 1 number for xyz\nArguments:\nxyz [ number ] The value for the X, Y and Z Returns:\n[ Vec3 ] The new vector3 ","date":"0001-01-01","id":77,"permalink":"/docs/addon-api/modules/vec3/","summary":"The Vector3 Module for the computer API!\nFunctions add sm.scrapcomputers.vec3.add( vec3, x, y, z )\rAdds a vec3 by X, Y and Z","tags":[],"title":"Vec3"},{"content":"VPBS allows you to convert a lua table to a packet buffer. Use this if you do NOT wanna deal with BitStreams and want to do every packet as a string.\nFunctions tostring sm.scrapcomputers.VPBS.tostring( data )\rConverts a table to a VPBS string\nArguments:\ntbl [ table ] The table to convert Returns:\n[ string ] vpbsStr The converted string. totable sm.scrapcomputers.VPBS.totable( data )\rConverts a VPBS string to a table\nArguments:\ndata [ string ] The VPBS string. Returns:\n[ table ] The table from the string isVPBSstring sm.scrapcomputers.VPBS.isVPBSstring( data )\rReturns true if the string is a VPBS-formatted string\nArguments:\ndata [ string ] The data to check Returns:\n[ boolean ] True if it\u0026rsquo;s a VPBS string, else not. ","date":"0001-01-01","id":78,"permalink":"/docs/addon-api/modules/vpbs/","summary":"VPBS allows you to convert a lua table to a packet buffer. Use this if you do NOT wanna deal with BitStreams and want to do every packet as a string.","tags":[],"title":"Vpbs"}]