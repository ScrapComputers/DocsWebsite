[{"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum porttitor odio ac neque sagittis malesuada. Maecenas justo odio, sollicitudin a hendrerit et, viverra in elit. Nunc ut orci quis nisi vehicula pulvinar. Proin gravida, felis efficitur scelerisque mollis, enim est ultrices sem, ac bibendum leo neque porttitor ipsum. Ut laoreet, neque et lacinia maximus, tellus risus porttitor diam, a blandit enim felis sit amet lectus. Sed sed elementum justo, et euismod dolor. Donec nisl est, fringilla id pulvinar eget, consequat sit amet elit. Nullam quam odio, feugiat rhoncus lorem in, euismod pretium enim. Proin nec viverra mauris. Morbi nec erat ut mi convallis ultricies ac non leo. Curabitur sed placerat ipsum. Phasellus at rutrum nisl, at blandit libero. Donec semper nulla eget nisl bibendum, feugiat dignissim orci feugiat.\nEtiam sed scelerisque velit. Sed ipsum lorem, laoreet et euismod quis, luctus at mauris. Nulla in metus ac arcu consectetur aliquet. Morbi aliquam porttitor felis sit amet mollis. Ut ultrices magna justo, in rhoncus arcu mollis in. In efficitur libero dolor, in condimentum ipsum feugiat ut. Integer non mattis purus. Integer mauris mi, pharetra eget enim ut, rutrum varius mi. Nunc consectetur mi at porta rutrum. Suspendisse condimentum facilisis scelerisque. Ut elementum tellus sit amet tortor semper finibus. Aliquam erat volutpat. Ut id augue egestas, commodo elit ut, condimentum dolor. Praesent finibus sagittis fringilla. Sed malesuada nisl eu quam ornare mollis. Phasellus ullamcorper diam vel fermentum dignissim.\nSuspendisse eu convallis risus. Quisque dignissim blandit dui eu congue. Curabitur non nunc sit amet enim aliquam tincidunt. Maecenas commodo rutrum elit ut gravida. Proin vitae volutpat orci. Suspendisse iaculis, nisi sed pharetra feugiat, nibh erat auctor nunc, quis faucibus massa lectus quis sem. Duis rutrum ligula id lorem placerat accumsan. Nam interdum sollicitudin arcu, non facilisis mi pellentesque quis. Nullam in lacus est. Morbi risus felis, commodo vitae mollis vitae, vehicula a diam. Suspendisse fringilla arcu quis placerat tincidunt.\nMorbi ac enim quis nibh suscipit aliquam vel eu purus. Morbi metus felis, ultricies non ipsum at, porta ullamcorper sapien. Integer posuere nulla gravida pretium lacinia. Nam quis orci ipsum. Pellentesque sit amet egestas urna. Etiam laoreet volutpat tempor. Mauris ultricies ac leo id placerat. Nullam molestie eu lorem vitae efficitur. Etiam nibh quam, tempus maximus accumsan id, semper vitae leo. Donec scelerisque risus a lacus scelerisque, id posuere dui congue.\nVestibulum eleifend elit at risus lobortis rutrum. Duis eleifend ligula nulla, commodo posuere leo egestas at. Proin vestibulum pellentesque libero ac ornare. Morbi auctor pharetra arcu ut semper. Pellentesque urna augue, rhoncus luctus facilisis non, laoreet et nunc. Praesent scelerisque euismod nisi vel scelerisque. Quisque in malesuada justo. Nam nec tempor nibh.\n","date":"2023-09-07","id":0,"permalink":"/blog/test-post/","summary":"This blog is just a test","tags":[],"title":"Test Post"},{"content":"","date":"2023-09-07","id":1,"permalink":"/categories/bard/","summary":"","tags":[],"title":"Bard"},{"content":"","date":"2023-09-07","id":2,"permalink":"/blog/","summary":"","tags":[],"title":"Blog"},{"content":"","date":"2023-09-07","id":3,"permalink":"/categories/","summary":"","tags":[],"title":"Categories"},{"content":"","date":"2023-09-07","id":4,"permalink":"/contributors/","summary":"","tags":[],"title":"Contributors"},{"content":"","date":"2023-09-07","id":5,"permalink":"/","summary":"","tags":[],"title":"ScrapComputers"},{"content":"","date":"2023-09-07","id":6,"permalink":"/categories/test/","summary":"","tags":[],"title":"Test"},{"content":"","date":"2023-09-07","id":7,"permalink":"/contributors/veradev/","summary":"","tags":[],"title":"VeraDev"},{"content":"This contains the API for the Addon System\n","date":"0001-01-01","id":8,"permalink":"/docs/addon-api/","summary":"This contains the API for the Addon System","tags":[],"title":"Addon API"},{"content":"Description The antenna component is connected to a network port. If connected, You would be able to send data to other antenna\u0026rsquo;s wireless!\nFunctions getName Antenna.getName()\rGets the name of the antenna\nReturns:\n[ string ] The name of the antenna setName Antenna.setName( name )\rSets the name of the antenna\nname [ string ] The new name of the antenna hasConnection Antenna.hasConnection()\rReturns true if there\u0026rsquo;s a connection with another antenna.\nReturns:\n[ boolean ] True if it has a connection scanAntennas Antenna.scanAntennas()\rGets all the antenna\u0026rsquo;s of the entire world\nReturns:\n[ string[] ] All discovered antennas ","date":"0001-01-01","id":9,"permalink":"/docs/lua-api/components/antenna/","summary":"Description The antenna component is connected to a network port. If connected, You would be able to send data to other antenna\u0026rsquo;s wireless!","tags":[],"title":"Antenna"},{"content":"Description The camera allows you to take screenshots or even render video from the world to your display! Our camera looks great while not even touching the raytracing. There\u0026rsquo;s no raytracing happening! just rays going everywhere as a multicast!\nThis doesn\u0026rsquo;t even touch the complicated math! Just addition, subtraction, division, and multiplication.\nPerformance note!\nCameras in ScrapComputers use multicast to get the frame or video. However, raycasts in scrap mechanic that we (Modders) have access to are slow. This is because (According to VeraDev) it\u0026rsquo;s handled by the CPU. If it was a GPU then it wouldn\u0026rsquo;t take a lot of time.\nThe bigger the resolution you take the frame. The longer it would take to send all of those ray casts. You can see how many ray casts you\u0026rsquo;re going to use by just using simple math. The formula to calculate that is: frameWidth * frameHeight .\nWe have to do a multicast since there\u0026rsquo;s no other way to do it. So if you\u0026rsquo;re going to use the camera, If your game freezes when you get a frame/video, Then the multicast is busy.\nFunctions getFrame Camera.getFrame( width, height, fovX, fovY, xOffset, yOffset )\rTakes a frame (aka a screenshot)\nArguments:\nwidth [ integer ] The width of the frame height [ integer ] The height of the frame fovX [ number ] The FOV on x-axis fovY [ number ] The FOV on y-axis xOffset [ integer? ] The applied x offset for the frame. By default, it\u0026rsquo;s at 0 so at the top, it would be rendered there yOffset [ integer? ] The applied y offset for the frame. By default, it\u0026rsquo;s at 0 so at the left, it would be rendered there Returns:\n[ DisplayPixelTable ] The pixels of the frame getDepthMap Camera.getDepthMap( width, height, fovX, fovY, focalLength, xOffset, yOffset )\rTakes a depth map frame (aka a screenshot) and returns it\nArguments\nwidth [ integer ] The width of the frame height [ integer ] The height of the frame fovX [ number ] The FOV on x-axis fovY [ number ] The FOV on y-axis focalLength [ integer ] The focal\u0026rsquo;s length xOffset [ integer? ] The applied x offset for the frame. By default, it\u0026rsquo;s at 0 so at the top, it would be rendered there yOffset [ integer? ] The applied y offset for the frame. By default, it\u0026rsquo;s at 0 so at the left, it would be rendered there Returns:\n[ DisplayPixelsTable ] The pixels of the frame getVideo Camera.getVideo( width, height, fovX, fovY, sliceWidth, xOffset, yOffset )\rLike getFrame but it\u0026rsquo;s as slices meaning you could make CCTV cameras without lagging a lot! It\u0026rsquo;s just that the refresh rate would be lower.\nArguments:\nwidth [ integer ] The width of the frame height [ integer ] The height of the frame fovX [ number ] The FOV on x-axis fovY [ number ] The FOV on y-axis sliceWidth [ integer ] The width for each slice xOffset [ integer? ] The applied x offset for the frame. By default, it\u0026rsquo;s at 0 so at the top, it would be rendered there yOffset [ integer? ] The applied y offset for the frame. By default, it\u0026rsquo;s at 0 so at the left, it would be rendered there Returns:\n[ DisplayPixelsTable ] The pixels of the frame getAdvancedFrame Camera.getAdvancedFrame( width, height, fovX, fovY, xOffset, yOffset )\rPerformance note!\nThe advanced functions use CPU-Based Raytracing (Via Raycasting) to render your frame(s). So this will use a ton of your CPU!\nTakes a frame (aka a screenshot)\nArguments:\nwidth [ integer ] The width of the frame height [ integer ] The height of the frame fovX [ number ] The FOV on x-axis fovY [ number ] The FOV on y-axis xOffset [ integer? ] The applied x offset for the frame. By default, it\u0026rsquo;s at 0 so at the top, it would be rendered there yOffset [ integer? ] The applied y offset for the frame. By default, it\u0026rsquo;s at 0 so at the left, it would be rendered there Returns:\n[ DisplayPixelTable ] The pixels of the frame getAdvancedVideo Camera.getAdvancedVideo( width, height, fovX, fovY, sliceWidth, xOffset, yOffset )\rPerformance note!\nThe advanced functions use CPU-Based Raytracing (Via Raycasting) to render your frame(s). So this will use a ton of your CPU!\nLike getFrame but it\u0026rsquo;s as slices meaning you could make CCTV cameras without lagging a lot! It\u0026rsquo;s just that the refresh rate would be lower.\nArguments:\nwidth [ integer ] The width of the frame height [ integer ] The height of the frame fovX [ number ] The FOV on x-axis fovY [ number ] The FOV on y-axis sliceWidth [ integer ] The width for each slice xOffset [ integer? ] The applied x offset for the frame. By default, it\u0026rsquo;s at 0 so at the top, it would be rendered there yOffset [ integer? ] The applied y offset for the frame. By default, it\u0026rsquo;s at 0 so at the left, it would be rendered there Returns:\n[ DisplayPixelsTable ] The pixels of the frame toggleRandom Camera.toggleRandom( toggle )\rToggles the randomization shader. This is very simple but adds a lot of detail to the frame at a cost of performance when used in displays as the optimization would be gone.\nThis randomization of the colors of a frame\u0026rsquo;s pixels a tiny bit.\nArguments:\ntoggle [ boolean ] To enable or disable the randomization shader ","date":"0001-01-01","id":10,"permalink":"/docs/lua-api/components/camera/","summary":"Description The camera allows you to take screenshots or even render video from the world to your display! Our camera looks great while not even touching the raytracing.","tags":[],"title":"Camera"},{"content":"All components in this list are in ScrapComputers itself.\n","date":"0001-01-01","id":11,"permalink":"/docs/lua-api/components/","summary":"All components in this list are in ScrapComputers itself.","tags":[],"title":"Components"},{"content":"Description The display is like a monitor but in Scrap Mechanic. Allows you to draw anything on it with a computer.\nPerformance note!\nDisplays are the only component where you can cause a ton of lag! Since the only way to render pixels is via effects, Too many effects mean a lot of lag. Although our optimization is very good. We suggest making any graphics on our display simple or not using a ton of colors.\nUsing a ton of colors would decrease your game\u0026rsquo;s performance even after optimizations!\nStructures TouchData This contains touch data when the user interacts with the display AKA \u0026ldquo;touches the display\u0026rdquo;\nFields x [ number ] The position on the x-axis. y [ number ] The position on the y-axis. state [ 1|2|3 ] The state that it has been pressed. 1 is Pressed, 2 is Hold, 3 is Released. PixelTable A pixel table is an array of pixels. Each item inside it contains the data below. Each value inside has a use case\n{ x = 1, -- The position of the pixel on the X-axis y = 1, -- The position of the pixel on the Y-axis scale = { -- The size of the pixel itself. x = 1, -- The size of the pixel on the X-axis (Aka width) y = 1 -- The size of the pixel on the Y-axis (Aka height) }, color = sm.color.new(\u0026#34;ff0000\u0026#34;) -- The color of the pixel }\rThis one above draws a singular pixel on coordinates (1, 1). The scale is also 1x1 so we are just drawing a 1x1 pixel.\nFunctions drawPixel Display.drawPixel( x, y, color )\rDraws a single pixel at the specified coordinates with the given color.\nArguments:\nx [ number ] The x-coordinate of the pixel. y [ number ] The y-coordinate of the pixel. color [ Color|string? ] The color of the pixel in hexadecimal format. drawFromTable Display.drawFromTable( tbl )\rDraws shapes and text based on data provided in a table.\nArguments:\ntbl [ PixelTable ] A table containing drawing commands and parameters. clear Display.clear( color )\rClears the display with the specified color.\nArguments:\ncolor [ Color|string? ] The color to clear the display with, in hexadecimal format. (If nil, It will clear the screen with the default color) drawLine Display.drawLine( x, y, x1, y1, color )\rDraw a line between two points with the specified color.\nArguments:\nx [ number ] The x-coordinate of the starting point. y [ number ] The y-coordinate of the starting point. x1 [ number ] The x-coordinate of the ending point. y1 [ number ] The y-coordinate of the ending point. color [ Color|string? ] The color of the line in hexadecimal format. drawCircle Display.drawCircle( x, y, radius, color )\rDraws a circle with the specified center coordinates, radius, and color.\nArguments:\nx [ number ] The x-coordinate of the center of the circle. y [ number ] The y-coordinate of the center of the circle. radius [ number ] The radius of the circle. color [ Color|string? ] The color of the circle in hexadecimal format. drawFilledCircle Display.drawFilledCircle( x, y, radius, color )\rDraws a filled circle with the specified center coordinates, radius, and color.\nArguments:\nx [ number ] The x-coordinate of the center of the circle. y [ number ] The y-coordinate of the center of the circle. radius [ number ] The radius of the circle. color [ Color|string? ] The color of the circle in hexadecimal format. drawTriangle Display.drawTriangle( x1, y1, x2, y2, x3, y3, color )\rDraws a triangle with the specified vertices and color. Arguments:\nArguments\u0026quot;\nx1 [ number ] The x-coordinate of the first vertex. y1 [ number ] The y-coordinate of the first vertex. x2 [ number ] The x-coordinate of the second vertex. y2 [ number ] The y-coordinate of the second vertex. x3 [ number ] The x-coordinate of the third vertex. y3 [ number ] The y-coordinate of the third vertex. color [ Color|string? ] The color of the triangle in hexadecimal format. drawFilledTriangle Display.drawFilledTriangle( x1, y1, x2, y2, x3, y3, color )\rDraws a filled triangle with the specified vertices and color. Arguments:\nArguments\u0026quot;\nx1 [ number ] The x-coordinate of the first vertex. y1 [ number ] The y-coordinate of the first vertex. x2 [ number ] The x-coordinate of the second vertex. y2 [ number ] The y-coordinate of the second vertex. x3 [ number ] The x-coordinate of the third vertex. y3 [ number ] The y-coordinate of the third vertex. color [ Color|string? ] The color of the triangle in hexadecimal format. drawRect Display.drawRect( x, y, width, height, color )\rDraws a rectangle with the specified position, width, height, and color.\nArguments:\nx [ number ] The x-coordinate of the top-left corner of the rectangle. y [ number ] The y-coordinate of the top-left corner of the rectangle. width [ number ] The width of the rectangle. height [ number ] The height of the rectangle. color [ Color|string? ] The color of the rectangle in hexadecimal format. drawFilledRect Display.drawFilledRect( x, y, width, height, color )\rDraws a filled rectangle with the specified position, width, height, and color.\nArguments:\nx [ number ] The x-coordinate of the top-left corner of the rectangle. y [ number ] The y-coordinate of the top-left corner of the rectangle. width [ number ] The width of the rectangle. height [ number ] The height of the rectangle. color [ Color|string? ] The color of the rectangle in hexadecimal format. drawText Display.drawText( x, y, string, color, fontName )\rDraws text at the specified position with the specified color.\nx [ number ] The x-coordinate of the text. y [ number ] The y-coordinate of the text. string [ string ] The text to draw. color [ Color|string? ] The color of the text in hexadecimal format. fontName [ string? ] The font to use. (defaults to whatever the default font the font manager is using) optimize Display.optimize()\rThis optimizes the display but more at the extreme bound.\nPerformance note!\nThis is only meant to be called when you\u0026rsquo;re not planning to update the display for a long time. Use it when it\u0026rsquo;s generally going to be static.\ngetDimensions Display.getDimensions()\rRetrieves the dimensions of the display.\nReturns:\n[ number ] The width of the display [ number ] The height of the display hide Display.hide()\rHides the display.\nshow Display.show()\rShows the display.\nsetRenderDistance Display.setRenderDistance( distance )\rSets the render distance of the display.\nArguments:\ndistance [ number ] The render distance to set. enableTouchScreen Display.enableTouchScreen( bool )\rEnables or disables the touchscreen functionality.\nArguments:\nbool [ boolean ] True to enable touch screen, false to disable. getTouchData Display.getTouchData()\rRetrieves touch data from the touch screen.\nReturns:\n[ TouchData ] A table containing touch data such as coordinates and touch state. update Display.update()\rUpdates the display.\nautoUpdate Display.autoUpdate( bool )\rSets whether the display should automatically update.\nPeformance note!\nIf you let\u0026rsquo;s say draw a lot of things like rectangles, text, etc with this enabled. Your game would lag a LOT! And the network would be spammed with network requests!\nSo please only use this when you\u0026rsquo;re not going to draw a lot and your display doesn\u0026rsquo;t get updated a lot!\nArguments:\nbool [ boolean ] True to enable auto-update, false to disable. setOptimizationThreshold Display.setOptimizationThreshold( int )\rThis function sets the optimization threshold of the display. Our displays optimize the effect count by grouping similar-colored pixels together into one larger effect. The integer (ranging between 0 and 1) dictates how similar the neighboring pixels\u0026rsquo; colors have to be, with 0 requiring them to be exactly the same RGB value and 1 allowing any RGB value.\nArguments:\nint [ number ] The optimization threshold to set. calcTextSize Display.calcTextSize( text )\rCalculate the text\u0026rsquo;s bounding box\nArguments:\ntext [ string ] The text to calculate its size. Returns:\n[ number ] The width that the text would consume [ number ] The height that the text would consume ","date":"0001-01-01","id":12,"permalink":"/docs/lua-api/components/display/","summary":"Description The display is like a monitor but in Scrap Mechanic. Allows you to draw anything on it with a computer.","tags":[],"title":"Display"},{"content":"Description A drive allows you to store anything* inside it. You can also go interact with it to modify its data there without doing it via code.\nFunctions load Drive.load()\rReceive data from the drive\nReturns:\n[ table ] The contents of the drive save Drive.save( data )\rSaves data to the drive\nNote\nYou can only save data that JSON supports! You can only use the following types:\n// Indexes [ \u0026#34;number\u0026#34;, \u0026#34;string\u0026#34; ] // Values [ \u0026#34;table\u0026#34;, \u0026#34;number\u0026#34;, \u0026#34;string\u0026#34;, \u0026#34;boolean\u0026#34;, \u0026#34;nil\u0026#34; ]\rArguments:\ndata [ table ] The new data ","date":"0001-01-01","id":13,"permalink":"/docs/lua-api/components/drive/","summary":"Description A drive allows you to store anything* inside it. You can also go interact with it to modify its data there without doing it via code.","tags":[],"title":"Drive"},{"content":"This guide will give you a setup to start projects with ScrapComputers via the Computer API\nBefore you do anything If you do NOT have any Lua 5.1 knowledge, Then you must learn Lua 5.1 if you want to code in ScrapComputers. There are many ways you could learn 5.1, From messing around with the files of Lua games (Scrap Mechanic is one of them!), using YouTube tutorials, or learning Lua from Roblox Studio. Whatever makes you learn Lua 5.1!\nIf you do not know where you can learn Lua 5.1. Then click this (Flashbang alert!) to start learning Lua 5.1.\nFor the people who know modding in Scrap Mechanic. Yes, we know that Scrap Mechanic uses LuaJIT and NOT Lua 5.1. But really, LuaJIT is Lua 5.1 but faster in short/simple terms.\nChoosing the correct Code Editor You might have already got a code editor but some features are required and your code editor may not have them.\nThese are the required features that your code editor needs.\nAble to understand Lua code Add definition files. In this case. We are going to use Visual Studio Code with the Lua Extension by summneko as that is what we use.\nThe world to code our Computer project in. We need a world where we can go and test our projects. Open our Scrap Mechanic and create a new world with the ScrapComputers mod. Then go and place a computer. That\u0026rsquo;s where our code will go in.\nCreating a Computer Project We are going to create a project. We already have a template set up for you. The templates are stored in our mod.\nThese are the methods you can use to set up a project\nGithub (Recommended) Go to our GitHub Repository and download our mod, Go into the Templates folder and clone the Computer folder. Name it whatever you want and that\u0026rsquo;s it! You can go move the project\u0026rsquo;s location somewhere else like your Documents folder\nType copy and paste Most users have the same path installation but since it is configurable. This method might not work.\nOpen File Explorer and go to this path: C:\\Program Files (x86)\\Steam\\steamapps\\workshop\\content\\387990\\3238484039\\Templates, Copy the Computer folder and folder and rename it to whatever you want and that\u0026rsquo;s it! You can go move the project\u0026rsquo;s location somewhere else like your Documents folder\nPoint and click What you have to do is to open Steam and go to your library, Then right-click on Scrap Mechanic and press Properties. Go to Installed Files and click Browse....\nOn the File Explorer window. Go back to 2 directories and go into workshop \u0026gt; content \u0026gt; 387990 \u0026gt; 3238484039 \u0026gt; Templates. Clone the Computer folder and rename it to whatever you want and that\u0026rsquo;s it! You can go move the project\u0026rsquo;s location somewhere else like your Documents folder\nHow to use our Template You might get confused with our template so this section would help you.\nThe folder structure should look something like this:\n.vscode/ └── settings.json Main.lua Main.lua.template ScrapComputers.lua SM.lua\rThese are what the files/folders are used for:\n.vscode/*: These are just configurations for Visual Studio Code Main.lua: This is where the source code of your project would be Main.lua.template: This contains the script template we suggest you use. ScrapComputers.lua and SM.lua: These are definition files and should NOT be modified! Mess around! Now you know all of this, A way you could learn to work with ScrapComputers via the Computer is to mess around with our examples or look through the documentation and try using them.\n","date":"0001-01-01","id":14,"permalink":"/docs/guides/getting-started/","summary":"This guide will give you a setup to start projects with ScrapComputers via the Computer API\nBefore you do anything If you do NOT have any Lua 5.","tags":[],"title":"Getting Started"},{"content":"Description Generally contains functions that were modified to do something different.\nFunctions print print( ... )\rPrints text to the chat. Will be always converted to a string so you can pass in anything\nIf it is a table. It will convert to be printable and you can see the contents inside.\nArguments:\n\u0026hellip; [ any[] ] All arguments to send to the chat alert alert( ... )\rSame as print but sends it as a alert message\nArguments:\n\u0026hellip; [ any[] ] All arguments to send to the alert popup tostring tostring( data )\rLike the normal but modified to have additional features like printing lua tables!\nArguments:\ndata [ any ] The variable to convert to be a string. debug debug( ... )\rThe debug function is basically Lua\u0026rsquo;s implementation of the print function in Scrap Mechanic.\nArguments:\n\u0026hellip; [ any[] ] All arguments to send to the console ","date":"0001-01-01","id":15,"permalink":"/docs/lua-api/global-variables/","summary":"Description Generally contains functions that were modified to do something different.\nFunctions print print( ... )\rPrints text to the chat.","tags":[],"title":"Global Variables"},{"content":"","date":"0001-01-01","id":16,"permalink":"/docs/guides/","summary":"","tags":[],"title":"Guides"},{"content":"Description The hologram are like Display\u0026rsquo;s but instead of being in 2D, Its in 3D. You can r\nFunctions createCube Hologram.createCube( position, rotation, scale, color )\rCreates a cube object\nArguments:\nposition [ Vec3 ] The position of the object rotation [ Vec3 ] The rotation of the object scale [ Vec3 ] The scale of the object color [ Color|string ] The color of the object Returns:\n[ integer ] The id of the object createSphere Hologram.createSphere( position, rotation, scale, color )\rCreates a sphere object\nArguments:\nposition [ Vec3 ] The position of the object rotation [ Vec3 ] The rotation of the object scale [ Vec3 ] The scale of the object color [ Color|string ] The color of the object Returns:\n[ integer ] The id of the object createCustomObject Hologram.createCustomObject( uuid, position, rotation, scale, color )\rLike createCube or createSphere but u can pass any kind of object from whatever loaded mod! (Via UUID)\nuuid [ Uuid ] The uuid of the object position [ Vec3 ] The position of the object rotation [ Vec3 ] The rotation of the object scale [ Vec3 ] The scale of the object color [ Color|string ] The color of the object Returns:\n[ integer ] The id of the object getObject Hologram.getObject( index )\rGets the object via Object ID and returns a table containing the data of that object or nil since it doesn\u0026rsquo;t exist.\nArguments:\nindex [ number ] The object you wanna get its data. Returns:\n[ HologramObject? ] Ether u get a table (so the object exists) or nil (so the object does NOT exist) ","date":"0001-01-01","id":17,"permalink":"/docs/lua-api/components/hologram/","summary":"Description The hologram are like Display\u0026rsquo;s but instead of being in 2D, Its in 3D. You can r\nFunctions createCube Hologram.","tags":[],"title":"Hologram"},{"content":"Description A HologramObject is an object from a hologram. AKA: An object that you\u0026rsquo;re rendering on the hologram.\nFunctions getId HologramObject.getId()\rGets the ID of the object\nReturns:\n[ number ] The ID of the object getUUID HologramObject.getUUID()\rGets the UUID of the object\nReturns:\n[ Uuid ] The UUID of the object getPosition HologramObject.getPosition()\rGets the position of the object\nReturns:\n[ Vec3 ] The Position of the object getRotation HologramObject.getRotation()\rGets the Rotation of the object\nReturns:\n[ Quat ] The Rotation of the object getScale HologramObject.getScale()\rGets the Scale of the object\nReturns:\n[ Vec3 ] The Scale of the object getColor HologramObject.getColor()\rGets the Color of the object\nReturns:\n[ Color ] color The Color of the object setUUID HologramObject.setUUID( value )\rSets the object\u0026rsquo;s UUID to be the argument.\nArguments:\nvalue [ string|Uuid ] The new UUID setPosition HologramObject.setPosition( value )\rSets the object\u0026rsquo;s Position to be the argument.\nArguments:\nvalue [ Vec3 ] The New Position setRotation HologramObject.setRotation( value )\rSets the object\u0026rsquo;s Rotation to be the argument.\nArguments:\nvalue [ Quat ] The New Rotation setPosition HologramObject.setScale( value )\rSets the object\u0026rsquo;s Scale to be the argument.\nArguments:\nvalue [ Vec3 ] The New Scale setColor HologramObject.setColor( value )\rSets the object\u0026rsquo;s Color to be the argument.\nArguments:\nvalue [ Color ] The New Color delete HologramObject.delete()\rDeletes the object\nisDeleted HologramObject.isDeleted()\rReturns true if the object has been deleted\nReturns:\n[ boolean ] If true, the object is deleted. else it\u0026rsquo;s false and it\u0026rsquo;s NOT deleted. ","date":"0001-01-01","id":18,"permalink":"/docs/lua-api/user-data/hologramobject/","summary":"Description A HologramObject is an object from a hologram. AKA: An object that you\u0026rsquo;re rendering on the hologram.\nFunctions getId HologramObject.","tags":[],"title":"HologramObject"},{"content":"This will provide you additional information of how you can use our Script Template.\nWhen you load up our Script Template example or use the Main.lua.template file of the Computer Template. You will see something like this:\n-- Any variables outside the main functions are global! (As programmer perspective) The code only gets ran once! -- Gets called when the computer starts up function onLoad() end -- Gets called every tick function onUpdate() end -- Gets called when the computer error\u0026#39;s out. function onError(err) end -- Gets called when the computer shuts down. function onDestroy() end\rWhat the functions do We will tell you what these functions do\nonLoad This function gets called when the computer starts up\nonUpdate This function gets called every tick when the computer is running\nonError This function gets called when theres a error.\nThe err parameter is a string. This will contain the error message it has recieved.\nNote\nThis will not stop the computer to stop further execution!\nonDestroy When you turn OFF the computer, this function gets called.\nCode outside the functions You might need global variables or functions. You can define them outside the functions.\nLet\u0026rsquo;s say you want to access the display globaly. You can add this at the top of your code!\nlocal display = sc.getDisplays()[1]\r","date":"0001-01-01","id":19,"permalink":"/docs/guides/how-to-use-our-script-template/","summary":"This will provide you additional information of how you can use our Script Template.\nWhen you load up our Script Template example or use the Main.","tags":[],"title":"How to use our script template"},{"content":"Description It\u0026rsquo;s like a virtual keyboard! You can interact with it and then type anything and the computer will be able to read it!\nFunctions getLatestKeystroke Keyboard.getLatestKeystroke()\rReturns the latest keystroke that has been sent. If it is \u0026ldquo;backSpace\u0026rdquo;, that means the user has pressed \u0026ldquo;backSpace\u0026rdquo;\nReturns:\n[ \u0026ldquo;backSpace\u0026rdquo;|string ] The keystroke isPressed Keyboard.isPressed()\rReturns true if a key is being pressed.\nReturns:\n[ boolean ] True if a key is being pressed. ","date":"0001-01-01","id":20,"permalink":"/docs/lua-api/components/keyboard/","summary":"Description It\u0026rsquo;s like a virtual keyboard! You can interact with it and then type anything and the computer will be able to read it!","tags":[],"title":"Keyboard"},{"content":"Description The Laser is like a normal scrap mechanic sensor but instead of ON or OFF, It provides more information which could be useful for things like Robot kinematics (More like Sensor-Enhanced Kinematics)\nAdvanced users: This uses a ray cast for object detection, But this also means that there is an offset between the raycast\u0026rsquo;s starting point and the object itself. it\u0026rsquo;s small but this could cause issues with your math!\nStructures LaserData This structure contains data that the laser has received\nFields directionWorld [ Vec3 ] The direction vector of the ray cast fraction [ number ] The fraction (0-1) of the distance reached until collision divided by the ray\u0026rsquo;s length normalLocal [ Vec3 ] The normal vector of the surface that was hit, relative to the target\u0026rsquo;s rotation. normalWorld [ Vec3 ] The normal vector of the hit surface originWorld [ Vec3 ] The starting world position of the raycast. pointLocal [ Vec3 ] The world position of the point that was hit, relative to the target\u0026rsquo;s position. pointWorld [ Vec3 ] The world position of the point that was hit. type string The physics type of the target that was hit. (See sm.physics.types) valid [ boolean ] Is true if the ray cast was even valid. Functions setDistance Laser.setDistance( distance )\rSets the distance\nArguments:\ndistance [ number ] The new distance getLaserData Laser.getLaserData()\rGets the data of the laser (Will send a ray cast!)\nReturns:\n[ boolean ] Is True if it hit something. [ LaserData ] The laser data ","date":"0001-01-01","id":21,"permalink":"/docs/lua-api/components/laser/","summary":"Description The Laser is like a normal scrap mechanic sensor but instead of ON or OFF, It provides more information which could be useful for things like Robot kinematics (More like Sensor-Enhanced Kinematics)","tags":[],"title":"Laser"},{"content":"The Computer API\u0026rsquo;s web documentation is in here!\n","date":"0001-01-01","id":22,"permalink":"/docs/lua-api/","summary":"The Computer API\u0026rsquo;s web documentation is in here!","tags":[],"title":"Lua API"},{"content":"Description This is an MD5 Stream, Allows you to add additional data.\nFields a [ number ] Unknown. Default Value is 0x67452301 (Number form: 1732584193) b [ number ] Unknown. The default value is 0xefcdab89 (Number form: 4023233417) c [ number ] Unknown. The default value is 0x98badcfe (Number form: 2562383102) d [ number ] Unknown. The default value is 0x10325476 (Number form: 271733878) pos [ number ] The current position buf [ string ] The buffer data Functions update MD5Stream.update( data )\rAdds additional data to the stream\nArguments:\ndata [ string ] The data to add. finish MD5Stream.finish()\rFinishes a buffer and returns its output data\nReturns:\n[ string ] The stream\u0026rsquo;s data. ","date":"0001-01-01","id":23,"permalink":"/docs/lua-api/user-data/md5stream/","summary":"Description This is an MD5 Stream, Allows you to add additional data.\nFields a [ number ] Unknown. Default Value is 0x67452301 (Number form: 1732584193) b [ number ] Unknown.","tags":[],"title":"MD5Stream"},{"content":"Description The motor allows you to control what the bearings and pistons should do.\nFunctions setBearingSpeed Motor.setBearingSpeed( speed )\rSets the bearing(s) speed\nArguments:\nspeed [ number ] The speed to set to bearing(s) setPistonSpeed Motor.setPistonSpeed( speed )\rSets the piston(s) speed\nArguments:\nspeed [ number ] The speed to set to piston(s) setTorque Motor.setTorque( torque )\rSets the bearing(s) torque\nArguments:\ntorque [ number ] The torque to set to bearing(s) setLength Motor.setLength( length )\rSets the piston(s) length\nArguments:\nlength [ number ] The length to set to piston(s) setForce Motor.setForce( force )\rSets the piston(s) force\nArguments:\nforce [ number ] The force to set ","date":"0001-01-01","id":24,"permalink":"/docs/lua-api/components/motor/","summary":"Description The motor allows you to control what the bearings and pistons should do.\nFunctions setBearingSpeed Motor.setBearingSpeed( speed )\rSets the bearing(s) speed","tags":[],"title":"Motor"},{"content":"Description The network port allows you to send data to other network ports.\nFunctions getAntenna NetworkPort.getAntenna()\rGets the connected antenna\nReturns:\n[ **AntennaComponent?] The antenna if it is connected, else nil hasConnection NetworkPort.hasConnection()\rReturns true if there\u0026rsquo;s a connection.\nReturns:\n[ boolean ] True if it has a connection. sendPacket NetworkPort.sendPacket( data )\rSends a packet to an Antenna or Network Port\nArguments:\ndata [ any ] The contents of the packet. Doesn\u0026rsquo;t matter what the data is. can be a number or even a function! sendPacketToAntenna NetworkPort.sendPacketToAntenna( name, data )\rSends a packet to a specified antenna. (Antenna needs to be connected!)\nArguments:\nname [ string ] The antenna name. data [ any ] The contents of the packet. Doesn\u0026rsquo;t matter what the data is. can be a number or even a function! getTotalPackets NetworkPort.getTotalPackets()\rGets the total packets.\nReturns:\n[ integer ] The total packets it has to read through. receivePacket NetworkPort.receivePacket()\rReads a packet\nCheck if there are any packets first!\nPlease check if there are any packets! If there are none and you execute this, It will error!\nReturns:\n[ any ] The content of the packet clearPackets NetworkPort.clearPackets()\rClears the packets that it has to read through.\n","date":"0001-01-01","id":25,"permalink":"/docs/lua-api/components/network-port/","summary":"Description The network port allows you to send data to other network ports.\nFunctions getAntenna NetworkPort.getAntenna()\rGets the connected antenna","tags":[],"title":"Network Port"},{"content":"There\u0026rsquo;s a problem with the Addon System which limits us from making the addon system better. For some stupid reason, we cannot load the configuration due to sm.storage being mod dependent but that\u0026rsquo;s a fine sacrifice.\nAnother problem (which is the biggest) is that we couldn\u0026rsquo;t figure out a method to synchronize a variable between 2 mods. If we found out then the API for the Addon System would be a LOT larger.\nWe would be happy if anyone could solve our biggest issue with the addon system. At the time we don\u0026rsquo;t know what we can give something back from you if you were to find a solution.\n","date":"0001-01-01","id":26,"permalink":"/docs/addon-api/note/","summary":"There\u0026rsquo;s a problem with the Addon System which limits us from making the addon system better. For some stupid reason, we cannot load the configuration due to sm.","tags":[],"title":"Note"},{"content":"","date":"0001-01-01","id":27,"permalink":"/docs/projects/","summary":"","tags":[],"title":"Projects"},{"content":"Description The radar allows you to detect objects around you.\nStructure Target A target is an object detected from the radar\nFields: position [ Vec3 ] The position of the target surfaceArea [ number ] The total surface area that the radar can see Functions getTargets Radar.getTargets()\rGets all the targets it has detected\nReturns:\n[ Radar.Target[]] All targets it has found setVerticalScanAngle Radar.setVerticalScanAngle( angle )\rSets its vertical angle from 10 to 90.\nArguments:\nangle [ number ] The angle to set setHorizontalScanAngle Radar.setHorizontalScanAngle( angle )\rSets its horizontal angle from 10 to 90.\nArguments:\nangle [ number ] The angle to set ","date":"0001-01-01","id":28,"permalink":"/docs/lua-api/components/radar/","summary":"Description The radar allows you to detect objects around you.\nStructure Target A target is an object detected from the radar","tags":[],"title":"Radar"},{"content":"Description All data inside the sc namespace!\nVariables layoutFiles This table contains all layout files from $CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout. You could also just write the names independently.\nsc.layoutFiles = { Computer = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout/Computer.layout\u0026#34;, Terminal = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout/Terminal.layout\u0026#34;, Register = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout/Register.layout\u0026#34;, Configurator = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout/Configurator.layout\u0026#34;, Harddrive = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout/Harddrive.layout\u0026#34;, Keyboard = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout/Keyboard.layout\u0026#34;, Banned = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout/Banned.layout\u0026#34;, }\rjsonFiles Contains JSON files that are used in ScrapComputers.\nsc.jsonFiles = { ExamplesList = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/JSON/examples.json\u0026#34;, HarddriveExamples = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/JSON/hdd_examples.json\u0026#34;, AudioList = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/JSON/audio.json\u0026#34;, BuiltInFonts = \u0026#34;$CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/JSON/fonts.json\u0026#34; }\rFunctions ","date":"0001-01-01","id":29,"permalink":"/docs/addon-api/static-functions-namespaces/sc/","summary":"Description All data inside the sc namespace!\nVariables layoutFiles This table contains all layout files from $CONTENT_3660881a-a6b8-40e5-a348-27b368a742e9/Gui/Layout. You could also just write the names independently.","tags":[],"title":"sc"},{"content":"Description All data inside the sc namespace!\nFunctions getDisplays sc.getDisplays()\rGets all connected displays from the computer\nReturns:\n[ Display[] ] All connected displays from the computer getDrives sc.getDrives()\rGets all connected drives from the computer\nReturns:\n[ Drive[] ] All connected drives from the computer getHolograms sc.getHolograms()\rGets all connected holograms from the computer\nReturns:\n[ Hologram[] ] All connected holograms from the computer getTerminals sc.getTerminals()\rGets all connected terminals from the computer\nReturns:\n[ Terminal[] ] All connected terminals from the computer getRadars sc.getRadars()\rGets all connected radars from the computer\nReturns:\n[ Radar[] ] All connected radars from the computer getNetworkPorts sc.getNetworkPorts()\rGets all connected network ports from the computer\nReturns:\n[ NetworkPort[] ] All connected network ports from the computer getCameras sc.getCameras()\rGets all connected cameras from the computer\nReturns:\n[ Camera[] ] All connected cameras from the computer getSpeakers sc.getSpeakers()\rGets all connected speakers from the computer\nReturns:\n[ Speaker[] ] All connected speakers from the computer getKeyboards sc.getKeyboards()\rGets all connected keyboards from the computer\nReturns:\n[ Keyboard[] ] All connected keyboards from the computer getMotors sc.getMotors()\rGets all connected motors from the computer\nReturns:\n[ Motor[] ] All connected motors from the computer getLasers sc.getLasers()\rGets all connected lasers from the computer\nReturns:\n[ Laser[] ] All connected lasers from the computer getSeatControllers sc.getSeatControllers()\rGets all connected SeatControllers from the computer\nReturns:\n[ SeatController[] ] All connected SeatControllers from the computer getReg sc.getReg( registerName )\rGets a value of a register.\nThe name of the register should be from a Input Register\nArguments:\nregisterName [ string ] The name of the register to read. Returns:\n[ number ] The value it\u0026rsquo;s receiving. (For things like logic gates: 0 is Off, 1 is On) setReg sc.setReg( registerName, power )\rSets a value of a register.\nThe name of the register should be from a Output Register\nArguments:\nregisterName [ string ] The name of the register to read. power [ number ] The value to set it to. (This is power!) ","date":"0001-01-01","id":30,"permalink":"/docs/lua-api/static-functions-namespaces/sc/","summary":"Description All data inside the sc namespace!\nFunctions getDisplays sc.getDisplays()\rGets all connected displays from the computer\nReturns:\n[ Display[] ] All connected displays from the computer getDrives sc.","tags":[],"title":"sc"},{"content":"Description The Audio Module for the computer API!\nStructures AudioParameter Results for getParams\nFields: default [ number ] The default value maximum [ number ] The maximum value minimum [ number ] The minimum value ParamsIncorrectTable Result for areParamsCorrect.\nAll issues that the provided parameters have.\nFields: hasNoParamsUsableIssue [ boolean ] If true. that means there are no usable parameters for this audio issues [ string[][] ] A matrix of issues. The 1st array is the parameter\u0026rsquo;s name and the 2nd array is the issues it has for that parameter. How to check if there are NO issues\nIf the issue is empty and hasNoParamsUsableIssue is false. Then there are NO issues!\nYou can check by doing this\n1if not issues.hasNoParamsUsableIssue and sc.table.getTotalItemsDict(issues.issues) == 0 then 2 -- There are NO issues 3 4 print(\u0026#34;No issues found\u0026#34;) 5else 6 -- There is an issue 7 8 print(\u0026#34;A issue(\u0026#39;s) has been noticed\u0026#34;) 9end\rFunctions areParamsCorrect sc.audio.areParamsCorrect( name, params )\rReturns information about audio parameters in case they have any issues.\nArguments:\nname [ string ] The name of the audio to check params [ AudioParameter[] ] The name of the audio to check Returns:\n[ ParamsIncorrectTable ] All issues with those parameters. exists sc.audio.exists( name )\rReturns true if the audio name exists in Scrap Mechanic.\nArguments:\nname [ string ] The name of the audio to check Returns:\n[ boolean ] If true, the audio exists in the game. Else it doesn\u0026rsquo;t! getAudioNames sc.audio.getAudioNames()\rGets every audio in existence in Scrap Mechanic and puts them all in a string[] you can access\nReturns:\n[ string[] ] Every singular audio in existence getParams sc.audio.getParams( name )\rGets all usable parameters for that audio.\nArguments:\nname [ string ] The name of the audio to get its parameters from Returns:\n[ AudioParameter[] ] All usable parameters for that audio. ","date":"0001-01-01","id":31,"permalink":"/docs/addon-api/static-functions-namespaces/sc.audio/","summary":"Description The Audio Module for the computer API!\nStructures AudioParameter Results for getParams\nFields: default [ number ] The default value maximum [ number ] The maximum value minimum [ number ] The minimum value ParamsIncorrectTable Result for areParamsCorrect.","tags":[],"title":"sc.audio"},{"content":"Description The Audio Module for the computer API!\nStructures AudioParameter Results for getParams\nFields: default [ number ] The default value maximum [ number ] The maximum value minimum [ number ] The minimum value ParamsIncorrectTable Result for areParamsCorrect.\nAll issues that the provided parameters have.\nFields: hasNoParamsUsableIssue [ boolean ] If true. that means there are no usable parameters for this audio issues [ string[][] ] A matrix of issues. The 1st array is the parameter\u0026rsquo;s name and the 2nd array is the issues it has for that parameter. How to check if there are NO issues\nIf the issue is empty and hasNoParamsUsableIssue is false. Then there are NO issues!\nYou can check by doing this\n1if not issues.hasNoParamsUsableIssue and sc.table.getTotalItemsDict(issues.issues) == 0 then 2 -- There are NO issues 3 4 print(\u0026#34;No issues found\u0026#34;) 5else 6 -- There is an issue 7 8 print(\u0026#34;A issue(\u0026#39;s) has been noticed\u0026#34;) 9end\rFunctions areParamsCorrect sc.audio.areParamsCorrect( name, params )\rReturns information about audio parameters in case they have any issues.\nArguments:\nname [ string ] The name of the audio to check params [ AudioParameter[] ] The name of the audio to check Returns:\n[ ParamsIncorrectTable ] All issues with those parameters. exists sc.audio.exists( name )\rReturns true if the audio name exists in Scrap Mechanic.\nArguments:\nname [ string ] The name of the audio to check Returns:\n[ boolean ] If true, the audio exists in the game. Else it doesn\u0026rsquo;t! getAudioNames sc.audio.getAudioNames()\rGets every audio in existence in Scrap Mechanic and puts them all in a string[] you can access\nReturns:\n[ string[] ] Every singular audio in existence getParams sc.audio.getParams( name )\rGets all usable parameters for that audio.\nArguments:\nname [ string ] The name of the audio to get its parameters from Returns:\n[ AudioParameter[] ] All usable parameters for that audio. ","date":"0001-01-01","id":32,"permalink":"/docs/lua-api/static-functions-namespaces/sc.audio/","summary":"Description The Audio Module for the computer API!\nStructures AudioParameter Results for getParams\nFields: default [ number ] The default value maximum [ number ] The maximum value minimum [ number ] The minimum value ParamsIncorrectTable Result for areParamsCorrect.","tags":[],"title":"sc.audio"},{"content":"Description The Base64 Module for the computer API!\nFunctions encode sc.base64.encode( data )\rConverts a string to be Base64 encoded\nArguments:\ndata [ string ] The data to be converted Returns:\n[ string ] The encoded data decode sc.base64.encode( data )\rDecodes a base64 string\nArguments:\ndata [ string ] The data to be decoded Returns:\n[ string ] The decoded data ","date":"0001-01-01","id":33,"permalink":"/docs/addon-api/static-functions-namespaces/sc.base64/","summary":"Description The Base64 Module for the computer API!\nFunctions encode sc.base64.encode( data )\rConverts a string to be Base64 encoded","tags":[],"title":"sc.base64"},{"content":"Description The Base64 Module for the computer API!\nFunctions encode sc.base64.encode( data )\rConverts a string to be Base64 encoded\nArguments:\ndata [ string ] The data to be converted Returns:\n[ string ] The encoded data decode sc.base64.encode( data )\rDecodes a base64 string\nArguments:\ndata [ string ] The data to be decoded Returns:\n[ string ] The decoded data ","date":"0001-01-01","id":34,"permalink":"/docs/lua-api/static-functions-namespaces/sc.base64/","summary":"Description The Base64 Module for the computer API!\nFunctions encode sc.base64.encode( data )\rConverts a string to be Base64 encoded","tags":[],"title":"sc.base64"},{"content":"Description The Color Module for the computer API!\nFunctions newSingluar sc.color.newSingluar( rgbNum )\rCreates a new color from 1 value. Whatever rgbNum\u0026rsquo;s value has will be set on R, G, and B.\nThis means it\u0026rsquo;s grayscale only!\nArguments:\nrgbNum [ number ] The color value that will be set on R, G, and B Returns:\n[ Color ] The generated color random sc.color.random( from, to )\rGenerates a random color from whatever range you want\nArguments:\nfrom [ number ] The starting range to [ number ] The ending range Returns:\n[ Color ] The generated color random0to1 sc.color.random0to1()\rGenerates a random color from 0 to 1\nReturns:\n[ Color ] The generated color ","date":"0001-01-01","id":35,"permalink":"/docs/addon-api/static-functions-namespaces/sc.color/","summary":"Description The Color Module for the computer API!\nFunctions newSingluar sc.color.newSingluar( rgbNum )\rCreates a new color from 1 value. Whatever rgbNum\u0026rsquo;s value has will be set on R, G, and B.","tags":[],"title":"sc.color"},{"content":"Description The Color Module for the computer API!\nFunctions newSingluar sc.color.newSingluar( rgbNum )\rCreates a new color from 1 value. Whatever rgbNum\u0026rsquo;s value has will be set on R, G, and B.\nThis means it\u0026rsquo;s grayscale only!\nArguments:\nrgbNum [ number ] The color value that will be set on R, G, and B Returns:\n[ Color ] The generated color random sc.color.random( from, to )\rGenerates a random color from whatever range you want\nArguments:\nfrom [ number ] The starting range to [ number ] The ending range Returns:\n[ Color ] The generated color random0to1 sc.color.random0to1()\rGenerates a random color from 0 to 1\nReturns:\n[ Color ] The generated color ","date":"0001-01-01","id":36,"permalink":"/docs/lua-api/static-functions-namespaces/sc.color/","summary":"Description The Color Module for the computer API!\nFunctions newSingluar sc.color.newSingluar( rgbNum )\rCreates a new color from 1 value. Whatever rgbNum\u0026rsquo;s value has will be set on R, G, and B.","tags":[],"title":"sc.color"},{"content":"Description The font manager allows you to, of course, manage fonts. You can get font information, get all font names you can use, etc.\nThe font manager is NOT a module so please do not identify this as a module\nStructures SCFont A SCFont (SCF in short, ScrapComputers Font for full name) is a font that has a fixed with and height for EVERY singular character. This is in Lua so expect a massive font file size.\nDid you know?\nThe owner (VeraDev) attempted to make a binary font version. However due to some issues with the String Buffer system (Named badly btw. works like a Packet Buffer)\nFor some stupid reason. it was NOT reading the actual glyphs itself and after a lot of headaches, it has been scrapped.\nThis would have been called SCFL (SCFont Lua in readable short, ScrapComputers Font Lua for the full name but I would have changed it to SCLF so the full name is better.)\nFields: fontWidth [ integer ] The width of the font fontHeight [ integer ] The height of the font characters [ string ] All characters used on the font errorChar [ string[] ] The error character font charset [ string[][] ] All character\u0026rsquo;s gylphs. On the first array. The index is the character! The second is the row number! Functions getFont sc.fontmanager.getFont( fontName )\rGets a font\nArguments:\nfontName [ string ] The name of the font to get Returns:\n[ SCFont? ] The font it has recieved. Nil if there is an error. [ string? ] The error message it has received. Nil if there wasn\u0026rsquo;t an error. getFontNames sc.fontmanager.getFontNames()\rGets all fonts the font manager has access to\nReturns:\n[ string[] ] Every font name the font manager has access to. getDefaultFontName sc.fontmanager.getDefaultFontName()\rGets the default font that the font manager uses. This is hard coded so you will require to hook this if you want to modify it.\nReturns:\n[ string ] The default font name used. getDefaultFont sc.fontmanager.getDefaultFont()\rLike getDefaultFontName but calls getFont automaticly.\nReturns:\n[ SCFont ] The default font used. ","date":"0001-01-01","id":37,"permalink":"/docs/addon-api/static-functions-namespaces/sc.fontmanager/","summary":"Description The font manager allows you to, of course, manage fonts. You can get font information, get all font names you can use, etc.","tags":[],"title":"sc.fontmanager"},{"content":"Description The font manager allows you to, of course, manage fonts. You can get font information, get all font names you can use, etc.\nThe font manager is NOT a module so please do not identify this as a module\nStructures SCFont A SCFont (SCF in short, ScrapComputers Font for full name) is a font that has a fixed with and height for EVERY singular character. This is in Lua so expect a massive font file size.\nDid you know?\nThe owner (VeraDev) attempted to make a binary font version. However due to some issues with the String Buffer system (Named badly btw. works like a Packet Buffer)\nFor some stupid reason. it was NOT reading the actual glyphs itself and after a lot of headaches, it has been scrapped.\nThis would have been called SCFL (SCFont Lua in readable short, ScrapComputers Font Lua for the full name but I would have changed it to SCLF so the full name is better.)\nFields: fontWidth [ integer ] The width of the font fontHeight [ integer ] The height of the font characters [ string ] All characters used on the font errorChar [ string[] ] The error character font charset [ string[][] ] All character\u0026rsquo;s gylphs. On the first array. The index is the character! The second is the row number! Functions getFont sc.fontmanager.getFont( fontName )\rGets a font\nArguments:\nfontName [ string ] The name of the font to get Returns:\n[ SCFont? ] The font it has recieved. Nil if there is an error. [ string? ] The error message it has received. Nil if there wasn\u0026rsquo;t an error. getFontNames sc.fontmanager.getFontNames()\rGets all fonts the font manager has access to\nReturns:\n[ string[] ] Every font name the font manager has access to. getDefaultFontName sc.fontmanager.getDefaultFontName()\rGets the default font that the font manager uses. This is hard coded so you will require to hook this if you want to modify it.\nReturns:\n[ string ] The default font name used. getDefaultFont sc.fontmanager.getDefaultFont()\rLike getDefaultFontName but calls getFont automaticly.\nReturns:\n[ SCFont ] The default font used. ","date":"0001-01-01","id":38,"permalink":"/docs/lua-api/static-functions-namespaces/sc.fontmanager/","summary":"Description The font manager allows you to, of course, manage fonts. You can get font information, get all font names you can use, etc.","tags":[],"title":"sc.fontmanager"},{"content":"Description The JSON Module for the computer API!\nFunctions isSafe sc.json.isSafe( root )\rReturns true if a tlua table is safe to convert to JSON.\nArguments:\nroot [ table ] The lua table to check Returns:\n[ boolean ] If true, That means it\u0026rsquo;s safe to convert. else not! toString sc.json.isSafe( root, prettify, indent )\rConverts a lua table to a JSON string.\nArguments:\nroot [ table ] The lua table to convert to a string prettify [ boolean ] If true, The JSON string would be prettier. Use this when you want to display it. indent [ string? ] The indentation character. Defaults to \u0026ldquo;\\t\u0026rdquo; Returns:\n[ string ] The JSON string from a Lua table. toTable sc.json.toTable( root )\rConverts a JSON string to a Lua table\nArguments:\nroot [ string ] The JSON string to convert Returns:\n[ table ] The converted Lua table ","date":"0001-01-01","id":39,"permalink":"/docs/addon-api/static-functions-namespaces/sc.json/","summary":"Description The JSON Module for the computer API!\nFunctions isSafe sc.json.isSafe( root )\rReturns true if a tlua table is safe to convert to JSON.","tags":[],"title":"sc.json"},{"content":"Description The JSON Module for the computer API!\nFunctions isSafe sc.json.isSafe( root )\rReturns true if a tlua table is safe to convert to JSON.\nArguments:\nroot [ table ] The lua table to check Returns:\n[ boolean ] If true, That means it\u0026rsquo;s safe to convert. else not! toString sc.json.isSafe( root, prettify, indent )\rConverts a lua table to a JSON string.\nArguments:\nroot [ table ] The lua table to convert to a string prettify [ boolean ] If true, The JSON string would be prettier. Use this when you want to display it. indent [ string? ] The indentation character. Defaults to \u0026ldquo;\\t\u0026rdquo; Returns:\n[ string ] The JSON string from a Lua table. toTable sc.json.toTable( root )\rConverts a JSON string to a Lua table\nArguments:\nroot [ string ] The JSON string to convert Returns:\n[ table ] The converted Lua table ","date":"0001-01-01","id":40,"permalink":"/docs/lua-api/static-functions-namespaces/sc.json/","summary":"Description The JSON Module for the computer API!\nFunctions isSafe sc.json.isSafe( root )\rReturns true if a tlua table is safe to convert to JSON.","tags":[],"title":"sc.json"},{"content":"Description A helper module for your needs that are math-related\nFunctions clamp sc.math.clamp(value, min, max)\rClamps a number value to be ranged from the min argument to the max argument.\nArguments:\nvalue [ number ] The value to clamp min [ number ] The minimum for the value. max [ number ] The maximum for the value. Returns:\n[ number ] The clamped value ","date":"0001-01-01","id":41,"permalink":"/docs/addon-api/static-functions-namespaces/sc.math/","summary":"Description A helper module for your needs that are math-related\nFunctions clamp sc.math.clamp(value, min, max)\rClamps a number value to be ranged from the min argument to the max argument.","tags":[],"title":"sc.math"},{"content":"Description A helper module for your needs that are math-related\nFunctions clamp sc.math.clamp(value, min, max)\rClamps a number value to be ranged from the min argument to the max argument.\nArguments:\nvalue [ number ] The value to clamp min [ number ] The minimum for the value. max [ number ] The maximum for the value. Returns:\n[ number ] The clamped value ","date":"0001-01-01","id":42,"permalink":"/docs/lua-api/static-functions-namespaces/sc.math/","summary":"Description A helper module for your needs that are math-related\nFunctions clamp sc.math.clamp(value, min, max)\rClamps a number value to be ranged from the min argument to the max argument.","tags":[],"title":"sc.math"},{"content":"Description An encryption module for MD5 only! (Even tho it\u0026rsquo;s no longer recommended to use this for encryption! )\nFunctions new sc.md5.new()\rCreates a new MD5 Stream\nReturns:\n[ MD5Stream ] The new MD5 stream sum sc.md5.sum( str )\rConverts a string to a MD5 string (NOTE: Pure raw bytes!)\nArguments:\nstr [ string ] The string to convert Returns:\n[ string ] The string in a MD5 string in raw bytes format sumhexa sc.md5.sumhexa( str )\rConverts a string to an MD5-encrypted string\nArguments:\nstr [ string ] The string to convert Returns:\n[ string ] The MD5-Encrypted string tohex sc.md5.tohex( str )\rConverts an MD5 Raw bytes string to a Proper MD5 string that is readable\nArguments:\nstr [ string ] The string to convert Returns:\n[ string ] The MD5-Encrypted string ","date":"0001-01-01","id":43,"permalink":"/docs/addon-api/static-functions-namespaces/sc.md5/","summary":"Description An encryption module for MD5 only! (Even tho it\u0026rsquo;s no longer recommended to use this for encryption! )\nFunctions new sc.","tags":[],"title":"sc.md5"},{"content":"Description An encryption module for MD5 only! (Even tho it\u0026rsquo;s no longer recommended to use this for encryption! )\nFunctions new sc.md5.new()\rCreates a new MD5 Stream\nReturns:\n[ MD5Stream ] The new MD5 stream sum sc.md5.sum( str )\rConverts a string to a MD5 string (NOTE: Pure raw bytes!)\nArguments:\nstr [ string ] The string to convert Returns:\n[ string ] The string in a MD5 string in raw bytes format sumhexa sc.md5.sumhexa( str )\rConverts a string to an MD5-encrypted string\nArguments:\nstr [ string ] The string to convert Returns:\n[ string ] The MD5-Encrypted string tohex sc.md5.tohex( str )\rConverts an MD5 Raw bytes string to a Proper MD5 string that is readable\nArguments:\nstr [ string ] The string to convert Returns:\n[ string ] The MD5-Encrypted string ","date":"0001-01-01","id":44,"permalink":"/docs/lua-api/static-functions-namespaces/sc.md5/","summary":"Description An encryption module for MD5 only! (Even tho it\u0026rsquo;s no longer recommended to use this for encryption! )\nFunctions new sc.","tags":[],"title":"sc.md5"},{"content":"Description The SHA256 Module for the computer API!\nYou can only encode. Nothing else\u0026hellip;\nFunctions encode sc.sha256.encode( str )\rEncodes a string to be SHA256\nArguments:\nstr [ string ] The string to convert to SHA256 Returns:\n[ string ] The converted string ","date":"0001-01-01","id":45,"permalink":"/docs/addon-api/static-functions-namespaces/sc.sha256/","summary":"Description The SHA256 Module for the computer API!\nYou can only encode. Nothing else\u0026hellip;\nFunctions encode sc.sha256.encode( str )\rEncodes a string to be SHA256","tags":[],"title":"sc.sha256"},{"content":"Description The SHA256 Module for the computer API!\nYou can only encode. Nothing else\u0026hellip;\nFunctions encode sc.sha256.encode( str )\rEncodes a string to be SHA256\nArguments:\nstr [ string ] The string to convert to SHA256 Returns:\n[ string ] The converted string ","date":"0001-01-01","id":46,"permalink":"/docs/lua-api/static-functions-namespaces/sc.sha256/","summary":"Description The SHA256 Module for the computer API!\nYou can only encode. Nothing else\u0026hellip;\nFunctions encode sc.sha256.encode( str )\rEncodes a string to be SHA256","tags":[],"title":"sc.sha256"},{"content":"Description The Table Module for the computer API!\nFunctions clone sc.table.clone( tbl )\rClones a table\nThis function doesn't really need to exist\rThis function is utterly unnecessary but in SOME situations is useful. It does create a new table but it\u0026rsquo;s so easy to implement that I don\u0026rsquo;t think it should deserve to have its function.\nGeuss why\nClick this dropdown to see why its unnessorary\rThis is all the code the function uses\u0026hellip;\n---Clones a table ---@param tbl table The table to clone ---@return table clonedTable The cloned table sc.table.clone = function (tbl) assert(type(tbl) == \u0026#34;table\u0026#34;, \u0026#34;Expected table, got \u0026#34;..type(tbl)..\u0026#34; instead.\u0026#34;) -- Error handling return unpack({tbl}) end\rIt\u0026rsquo;s too little amount of code! I could do it in different ways but those have downsides! So this is the easiest thing we can do.\nArguments:\ntbl [ table ] The table to clone Returns:\n[ table ] The cloned table getItemAt sc.table.getItemAt( tbl, index )\rGets an item from a table via the index. Unlike doing tbl[index]. This will not care if the index numbers aren\u0026rsquo;t in order.\n-- This is in our actual todo local todo = { [25] = \u0026#34;Add glass support for camera\u0026#34; [69] = \u0026#34;Add another parameter for speakers. Allows you to add such as the \\\u0026#34;wind\\\u0026#34; parameter to the sound effect\u0026#34; [4825] = \u0026#34;Add 512x512 and 1024x1024 displays for 3x3, 2x2 and 1x1 (Im going to add this no matter what :) )\u0026#34; } local lastTodoGood = sc.table.getItemAt(todo, 3) -- Works! Returns item of the index of 4825. Since it\u0026#39;s the 3rd element in the table local lastTodoBad = todo[3] -- Doesn\u0026#39;t Work! Tries grabbing an element at index 3 but that doesn\u0026#39;t exist! so this is nil! print(\u0026#34;lastTodoGood: \u0026#34;..tostring(lastTodoGood)) print(\u0026#34;lastTodoBad: \u0026#34; ..tostring(lastTodoBad ))\rYou see that tbl[index] would error out but not sc.table.getItemAt\nArguments:\ntbl [ table ] The table index [ integer ] The item to get Returns:\n[ any ] Whatever data it has received from the index getTotalItems sc.table.getTotalItems( tbl )\rGets all items via a ipairs loop.\nUnlike doing #tbl, If the indexing was weird, #tbl would return 0. This function does not care if the indexing system is weird. Will give you the same result as if the indexing system was normal.\nFor dictionaries. Use sc.table.getTotalItemsDict\nArguments:\ntbl [ table ] The table Returns:\n[ integer ] The total items in the table getTotalItemsDict sc.table.getTotalItemsDict( tbl )\rGets all items via a pairs loop. This is used for dictionaries. else use sc.table.getTotalItems\nUnlike doing #tbl, If the indexing was weird, #tbl would return 0. This function does not care if the indexing system is weird. Will give you the same result as if the indexing system was normal.\nArguments:\ntbl [ table ] The table Returns:\n[ integer ] The total items in the table merge sc.table.merge( tbl1, tbl2, fullOverwrite )\rMerges 2 tables in 1.\nImportant!\nThe order that you put the sc.table.merge matters! tbl2 will override/overwrite anything inside tbl1!\nArguments:\ntbl1 [ table ] The 1st table tbl2 [ table ] The 2nd table fullOverwrite [ boolean? ] This will make it so the merged value will be always from tbl2. Will not care about anything else. The default is false Returns:\ntbl [ table ] The merged table toString sc.table.toString( tbl )\rConverts a table to the same thing but as a string. If you were to try doing this with Lua\u0026rsquo;s tostring. You would just get \u0026ldquo;table: 00A59928\u0026rdquo;. Not the actual contents of the table itself!\nArguments:\ntbl [ table ] The table Returns:\n[ string ] The converted lua table is a string. ","date":"0001-01-01","id":47,"permalink":"/docs/addon-api/static-functions-namespaces/sc.table/","summary":"Description The Table Module for the computer API!\nFunctions clone sc.table.clone( tbl )\rClones a table\nThis function doesn't really need to exist\rThis function is utterly unnecessary but in SOME situations is useful.","tags":[],"title":"sc.table"},{"content":"Description The Table Module for the computer API!\nFunctions clone sc.table.clone( tbl )\rClones a table\nThis function doesn't really need to exist\rThis function is utterly unnecessary but in SOME situations is useful. It does create a new table but it\u0026rsquo;s so easy to implement that I don\u0026rsquo;t think it should deserve to have its function.\nGeuss why\nClick this dropdown to see why its unnessorary\rThis is all the code the function uses\u0026hellip;\n---Clones a table ---@param tbl table The table to clone ---@return table clonedTable The cloned table sc.table.clone = function (tbl) assert(type(tbl) == \u0026#34;table\u0026#34;, \u0026#34;Expected table, got \u0026#34;..type(tbl)..\u0026#34; instead.\u0026#34;) -- Error handling return unpack({tbl}) end\rIt\u0026rsquo;s too little amount of code! I could do it in different ways but those have downsides! So this is the easiest thing we can do.\nArguments:\ntbl [ table ] The table to clone Returns:\n[ table ] The cloned table getItemAt sc.table.getItemAt( tbl, index )\rGets an item from a table via the index. Unlike doing tbl[index]. This will not care if the index numbers aren\u0026rsquo;t in order.\n-- This is in our actual todo local todo = { [25] = \u0026#34;Add glass support for camera\u0026#34; [69] = \u0026#34;Add another parameter for speakers. Allows you to add such as the \\\u0026#34;wind\\\u0026#34; parameter to the sound effect\u0026#34; [4825] = \u0026#34;Add 512x512 and 1024x1024 displays for 3x3, 2x2 and 1x1 (Im going to add this no matter what :) )\u0026#34; } local lastTodoGood = sc.table.getItemAt(todo, 3) -- Works! Returns item of the index of 4825. Since it\u0026#39;s the 3rd element in the table local lastTodoBad = todo[3] -- Doesn\u0026#39;t Work! Tries grabbing an element at index 3 but that doesn\u0026#39;t exist! so this is nil! print(\u0026#34;lastTodoGood: \u0026#34;..tostring(lastTodoGood)) print(\u0026#34;lastTodoBad: \u0026#34; ..tostring(lastTodoBad ))\rYou see that tbl[index] would error out but not sc.table.getItemAt\nArguments:\ntbl [ table ] The table index [ integer ] The item to get Returns:\n[ any ] Whatever data it has received from the index getTotalItems sc.table.getTotalItems( tbl )\rGets all items via a ipairs loop.\nUnlike doing #tbl, If the indexing was weird, #tbl would return 0. This function does not care if the indexing system is weird. Will give you the same result as if the indexing system was normal.\nFor dictionaries. Use sc.table.getTotalItemsDict\nArguments:\ntbl [ table ] The table Returns:\n[ integer ] The total items in the table getTotalItemsDict sc.table.getTotalItemsDict( tbl )\rGets all items via a pairs loop. This is used for dictionaries. else use sc.table.getTotalItems\nUnlike doing #tbl, If the indexing was weird, #tbl would return 0. This function does not care if the indexing system is weird. Will give you the same result as if the indexing system was normal.\nArguments:\ntbl [ table ] The table Returns:\n[ integer ] The total items in the table merge sc.table.merge( tbl1, tbl2, fullOverwrite )\rMerges 2 tables in 1.\nImportant!\nThe order that you put the sc.table.merge matters! tbl2 will override/overwrite anything inside tbl1!\nArguments:\ntbl1 [ table ] The 1st table tbl2 [ table ] The 2nd table fullOverwrite [ boolean? ] This will make it so the merged value will be always from tbl2. Will not care about anything else. The default is false Returns:\ntbl [ table ] The merged table toString sc.table.toString( tbl )\rConverts a table to the same thing but as a string. If you were to try doing this with Lua\u0026rsquo;s tostring. You would just get \u0026ldquo;table: 00A59928\u0026rdquo;. Not the actual contents of the table itself!\nArguments:\ntbl [ table ] The table Returns:\n[ string ] The converted lua table is a string. ","date":"0001-01-01","id":48,"permalink":"/docs/lua-api/static-functions-namespaces/sc.table/","summary":"Description The Table Module for the computer API!\nFunctions clone sc.table.clone( tbl )\rClones a table\nThis function doesn't really need to exist\rThis function is utterly unnecessary but in SOME situations is useful.","tags":[],"title":"sc.table"},{"content":"Description The utility Module for the computer API!\nFunctions positiveModulo sc.util.positiveModulo( a, b )\rGets the remainder of the division.\nDid you know? (Rant warning!)\nThis is useless and I don\u0026rsquo;t know why you need this. sm.util.positiveModule redirects this function anyway!\nInfact sc.util.positiveModulo IS the same as sm.util.positiveModulo. Basicly 1:1!\nIt\u0026rsquo;s not like we reimplemented it. We only have that function so you can\u0026rsquo;t crash the game! Thanks, SM Devs for not adding 1 ERROR CHECK FOR DIVISION BY ZERO ERROR\nGo ahead and take a look at our code for crash prevention:\n---Gets the remainder of division. This function is more safer than sm.util.postiveModule as for some reason, Scrap Mechanic ---dosent handle division by 0 for sm.util.postiveModule so it crashes. ---@param a number The number to divide ---@param b number The amount to divide ---@return number remainder The remains that it is impossible to divide sc.util.postiveModulo = function (a, b) if b == 0 then error(\u0026#34;Cannot Divide by 0!\u0026#34;) else return sm.util.positiveModulo(a, b) end end\rThis is the actual code we have to use so you can\u0026rsquo;t crash the game. If you don\u0026rsquo;t think you can crash the game, Enable unsafe mode write this into the computer, and run it\nsm.util.positiveModulo(0, 0) -- The first parameter can be any number\rAnd when you run it. Scrap Mechanic will explode itself because it has received a \u0026ldquo;Division By Zero\u0026rdquo; error which wasn\u0026rsquo;t handled and so you get a bug splat!\nSO SCREW YOU SCRAP MECHANIC DEVELOPERS FOR NOT BEING ABLE TO DO 1 ERROR HANDLING CHECK WHICH COULD ONLY TAKE A COUPLE OF SECONDS!\nArguments:\na [ number ] The number to divide and get its remainder b [ number ] The division by number Returns:\n[ number ] The remainder of a divided number. ","date":"0001-01-01","id":49,"permalink":"/docs/addon-api/static-functions-namespaces/sc.util/","summary":"Description The utility Module for the computer API!\nFunctions positiveModulo sc.util.positiveModulo( a, b )\rGets the remainder of the division.","tags":[],"title":"sc.util"},{"content":"Description The utility Module for the computer API!\nFunctions positiveModulo sc.util.positiveModulo( a, b )\rGets the remainder of the division.\nDid you know? (Rant warning!)\nThis is useless and I don\u0026rsquo;t know why you need this. sm.util.positiveModule redirects this function anyway!\nInfact sc.util.positiveModulo IS the same as sm.util.positiveModulo. Basicly 1:1!\nIt\u0026rsquo;s not like we reimplemented it. We only have that function so you can\u0026rsquo;t crash the game! Thanks, SM Devs for not adding 1 ERROR CHECK FOR DIVISION BY ZERO ERROR\nGo ahead and take a look at our code for crash prevention:\n---Gets the remainder of division. This function is more safer than sm.util.postiveModule as for some reason, Scrap Mechanic ---dosent handle division by 0 for sm.util.postiveModule so it crashes. ---@param a number The number to divide ---@param b number The amount to divide ---@return number remainder The remains that it is impossible to divide sc.util.postiveModulo = function (a, b) if b == 0 then error(\u0026#34;Cannot Divide by 0!\u0026#34;) else return sm.util.positiveModulo(a, b) end end\rThis is the actual code we have to use so you can\u0026rsquo;t crash the game. If you don\u0026rsquo;t think you can crash the game, Enable unsafe mode write this into the computer, and run it\nsm.util.positiveModulo(0, 0) -- The first parameter can be any number\rAnd when you run it. Scrap Mechanic will explode itself because it has received a \u0026ldquo;Division By Zero\u0026rdquo; error which wasn\u0026rsquo;t handled and so you get a bug splat!\nSO SCREW YOU SCRAP MECHANIC DEVELOPERS FOR NOT BEING ABLE TO DO 1 ERROR HANDLING CHECK WHICH COULD ONLY TAKE A COUPLE OF SECONDS!\nArguments:\na [ number ] The number to divide and get its remainder b [ number ] The division by number Returns:\n[ number ] The remainder of a divided number. ","date":"0001-01-01","id":50,"permalink":"/docs/lua-api/static-functions-namespaces/sc.util/","summary":"Description The utility Module for the computer API!\nFunctions positiveModulo sc.util.positiveModulo( a, b )\rGets the remainder of the division.","tags":[],"title":"sc.util"},{"content":"Description The Vector3 Module for the computer API!\nFunctions add sc.vec3.add( vec3, x, y, z )\rAdds a vec3 by X, Y and Z\nArguments:\nvec3 [ Vec3 ] The vector3 to modify x [ number ] Vec3\u0026rsquo;s x value to be added by y [ number ] Vec3\u0026rsquo;s y value to be added by z [ number ] Vec3\u0026rsquo;s z value to be added by Returns:\n[ Vec3 ] The new vector3 divide sc.vec3.divide( vec3, x, y, z )\rDivides a vec3 by X, Y and Z\nArguments:\nvec3 [ Vec3 ] The vector3 to modify x [ number ] Vec3\u0026rsquo;s x value to be divided by y [ number ] Vec3\u0026rsquo;s y value to be divided by z [ number ] Vec3\u0026rsquo;s z value to be divided by Returns:\n[ Vec3 ] The new vector3 mulitply sc.vec3.mulitply( vec3, x, y, z )\rMultiplies a vec3 by X, Y and Z\nArguments:\nvec3 [ Vec3 ] The vector3 to modify x [ number ] Vec3\u0026rsquo;s x value to be multiplied by y [ number ] Vec3\u0026rsquo;s y value to be multiplied by z [ number ] Vec3\u0026rsquo;s z value to be multiplied by Returns:\n[ Vec3 ] The new vector3 subtract sc.vec3.subtract( vec3, x, y, z )\rSubtracts a vec3 by X, Y and Z\nArguments:\nvec3 [ Vec3 ] The vector3 to modify x [ number ] Vec3\u0026rsquo;s x value to be subtracted by y [ number ] Vec3\u0026rsquo;s y value to be subtracted by z [ number ] Vec3\u0026rsquo;s z value to be subtracted by Returns:\n[ Vec3 ] The new vector3 distance sc.vec3.distance( vec1, vec2 )\rCalculates the distance between 2 vectors\nFormula: Arguments:\nvec1 [ Vec3 ] The vector3 to modify vec2 [ Vec3 ] The vector3 to modify Returns:\n[ number ] The distance between the 2 vectors newSingluar sc.vec3.newSingluar( xyz )\rCreates a vector3 by 1 number for xyz\nArguments:\nxyz [ number ] The value for the X, Y and Z Returns:\n[ Vec3 ] The new vector3 ","date":"0001-01-01","id":51,"permalink":"/docs/addon-api/static-functions-namespaces/sc.vec3/","summary":"Description The Vector3 Module for the computer API!\nFunctions add sc.vec3.add( vec3, x, y, z )\rAdds a vec3 by X, Y and Z","tags":[],"title":"sc.vec3"},{"content":"Description The Vector3 Module for the computer API!\nFunctions add sc.vec3.add( vec3, x, y, z )\rAdds a vec3 by X, Y and Z\nArguments:\nvec3 [ Vec3 ] The vector3 to modify x [ number ] Vec3\u0026rsquo;s x value to be added by y [ number ] Vec3\u0026rsquo;s y value to be added by z [ number ] Vec3\u0026rsquo;s z value to be added by Returns:\n[ Vec3 ] The new vector3 divide sc.vec3.divide( vec3, x, y, z )\rDivides a vec3 by X, Y and Z\nArguments:\nvec3 [ Vec3 ] The vector3 to modify x [ number ] Vec3\u0026rsquo;s x value to be divided by y [ number ] Vec3\u0026rsquo;s y value to be divided by z [ number ] Vec3\u0026rsquo;s z value to be divided by Returns:\n[ Vec3 ] The new vector3 mulitply sc.vec3.mulitply( vec3, x, y, z )\rMultiplies a vec3 by X, Y and Z\nArguments:\nvec3 [ Vec3 ] The vector3 to modify x [ number ] Vec3\u0026rsquo;s x value to be multiplied by y [ number ] Vec3\u0026rsquo;s y value to be multiplied by z [ number ] Vec3\u0026rsquo;s z value to be multiplied by Returns:\n[ Vec3 ] The new vector3 subtract sc.vec3.subtract( vec3, x, y, z )\rSubtracts a vec3 by X, Y and Z\nArguments:\nvec3 [ Vec3 ] The vector3 to modify x [ number ] Vec3\u0026rsquo;s x value to be subtracted by y [ number ] Vec3\u0026rsquo;s y value to be subtracted by z [ number ] Vec3\u0026rsquo;s z value to be subtracted by Returns:\n[ Vec3 ] The new vector3 distance sc.vec3.distance( vec1, vec2 )\rCalculates the distance between 2 vectors\nFormula: Arguments:\nvec1 [ Vec3 ] The vector3 to modify vec2 [ Vec3 ] The vector3 to modify Returns:\n[ number ] The distance between the 2 vectors newSingluar sc.vec3.newSingluar( xyz )\rCreates a vector3 by 1 number for xyz\nArguments:\nxyz [ number ] The value for the X, Y and Z Returns:\n[ Vec3 ] The new vector3 ","date":"0001-01-01","id":52,"permalink":"/docs/lua-api/static-functions-namespaces/sc.vec3/","summary":"Description The Vector3 Module for the computer API!\nFunctions add sc.vec3.add( vec3, x, y, z )\rAdds a vec3 by X, Y and Z","tags":[],"title":"sc.vec3"},{"content":"","date":"0001-01-01","id":53,"permalink":"/docs/","summary":"","tags":[],"title":"ScrapComputers - Documentation"},{"content":"Description This allows you to control seats! Read its WASD data, press some buttons, and cause a war crime against humanity by using seats for networking! (Please don\u0026rsquo;t)\nStructures SeatData Contains data on the seat.\nFields wsPower [ 1|0|-1 ] The power for WS. 1 = Forwards, 0 = None, -1 = Backwards adPower [ 1|0|-1 ] The power for AD. 1 = Left, 0 = None, -1 = Right characterName [ string? ] The character\u0026rsquo;s name that is sitting. JointData Contains data of a joint.\nFields leftSpeed [ number ] The left angle speed. rightSpeed [ number ] The right angle speed. leftLimit [ number ] The left angle limit. rightLimit [ number ] The right angle limit. bearingLock [ boolean ] Whether the joint is unlocked or not. Functions getSeatData SeatController.getSeatData()\rGets data from the connected seat\nReturns:\n[ SeatController.SeatData ] The data of the seat getJointData SeatController.getJointData()\rGets data from connected joints from the seat\nReturns:\n[ SeatController.JointData[] ] The data of multiple joints pressButton SeatController.pressButton( index )\rPresses a button connected to the seat\nArguments:\nindex [ number ] The button to press (0 to 9) releaseButton SeatController.releaseButton( index )\rReleases a button connected to the seat\nArguments:\nindex [ number ] The button to release (0 to 9) setADPower SeatController.setADPower( power )\rSets the power for AD movement\nArguments:\npower [ 1|0|-1 ] The power for AD to set. 1 = Left, 0 = None, -1 = Right Unusable at the time!\nThis function is planned to be implemented however SM sucks! At the time we think that it\u0026rsquo;s because 2 scripts are slaughtering them together. 1 wants to make a variable like this and others like this. It\u0026rsquo;s like Battle Royal but with Lua and it\u0026rsquo;s handled like actual dog poop!\nWhen it was implemented, after 1 commit. The next commit was named: Removed WS and AD power set because sm is dumb. We hate this!\nsetWSPower SeatController.setWSPower( power )\rSets the power for WS movement\nArguments:\npower [ 1|0|-1 ] The power for WS. 1 = Forwards, 0 = None, -1 = Backwards Unusable at the time!\nThis function is planned to be implemented however SM sucks! At the time we think that it\u0026rsquo;s because 2 scripts are slaughtering them together. 1 wants to make a variable like this and others like this. It\u0026rsquo;s like Battle Royal but with Lua and it\u0026rsquo;s handled like actual dog poop!\nWhen it was implemented, after 1 commit. The next commit was named: Removed WS and AD power set because sm is dumb. We hate this!\n","date":"0001-01-01","id":54,"permalink":"/docs/lua-api/components/seatcontroller/","summary":"Description This allows you to control seats! Read its WASD data, press some buttons, and cause a war crime against humanity by using seats for networking!","tags":[],"title":"SeatController"},{"content":"Description The speaker allows you to play ANY kind of sound and we mean ANYTHING!\nFunctions beep Speaker.beep()\rPlay\u0026rsquo;s a beep sound\nbeepQueue Speaker.beepQueue()\rPlay\u0026rsquo;s a beep sound\nThis uses the Queue system!\nThis is going to be sent to the queue, Flush the queue to play it!\nReturns:\n[ integer ] The index where the note is located in the queue. playNote Speaker.playNote( pitch, note, durationTicks )\rPlay\u0026rsquo;s whatever note\nArguments:\npitch [ number ] The pitch of the note note [ integer ] The note to play durationTicks [ integer ] The duration that it will play in ticks playNoteQueue Speaker.playNoteQueue( pitch, note, durationTicks )\rPlay\u0026rsquo;s whatever note\nThis uses the Queue system!\nThis is going to be sent to the queue, Flush the queue to play it!\nArguments:\npitch [ number ] The pitch of the note note [ integer ] The note to play durationTicks [ integer ] The duration that it will play in ticks Returns:\n[ integer ] The index where the note is located in the queue. playNoteEffect Speaker.playNoteEffect( pitch, note, durationTicks )\rPlays whatever event effect you specify!\nArguments:\nname [ string ] The name of the audio to play params [ AudioParameter[]] Audio parameters to use durationTicks [ integer ] The duration of how long it should play in ticks! playNoteEffectQueue Speaker.playNoteEffectQueue( pitch, note, durationTicks )\rPlays whatever event effect you specify!\nThis uses the Queue system!\nThis is going to be sent to the queue, Flush the queue to play it!\nArguments:\nname [ string ] The name of the audio to play params [ AudioParameter[]] Audio parameters to use durationTicks [ integer ] The duration of how long it should play in ticks! Returns:\n[ integer ] The index where the note is located in the queue. flushQueue Speaker.flushQueue()\rFlushes the queue and plays all of them whatever it\u0026rsquo;s inside at ONCE!\nremoveNote Speaker.removeNote( noteIndex )\rRemove a note from the queue\nArguments:\nnoteIndex [ number ] The index where the note is located clearQueue Speaker.clearQueue()\rClears the entire queue\ngetCurrentQueueSize Speaker.getCurrentQueueSize()\rReturns the size of the queue\nReturns:\nqueueSize [ number ] The size of the queue. ","date":"0001-01-01","id":55,"permalink":"/docs/lua-api/components/speaker/","summary":"Description The speaker allows you to play ANY kind of sound and we mean ANYTHING!\nFunctions beep Speaker.beep()\rPlay\u0026rsquo;s a beep sound","tags":[],"title":"Speaker"},{"content":"All namespaces inside the sc table. You can also access the modules here.\n","date":"0001-01-01","id":56,"permalink":"/docs/addon-api/static-functions-namespaces/","summary":"All namespaces inside the sc table. You can also access the modules here.","tags":[],"title":"Static Function Namespaces"},{"content":"All namespaces inside the sc table. You can also access the modules here.\n","date":"0001-01-01","id":57,"permalink":"/docs/lua-api/static-functions-namespaces/","summary":"All namespaces inside the sc table. You can also access the modules here.","tags":[],"title":"Static Function Namespaces"},{"content":"","date":"0001-01-01","id":58,"permalink":"/tags/","summary":"","tags":[],"title":"Tags"},{"content":"Description The terminal is like a display but more like a console you can write to, Instead of effects, it uses via GUI.\nFunctions send Terminal.send( msg )\rSends a message to the terminal\nArguments:\nmsg string clear Terminal.clear()\rClears all data.\nclearInputHistory Terminal.clearInputHistory()\rClears the userinput\nreceivedInputs Terminal.receivedInputs()\rReturns true if there are available inputs.\nReturns:\n[ boolean ] If true, then there are inputs you can read from. getInput Terminal.getInput()\rGets the latest user input\nUse Terminal.receivedInputs() for this!\nPlease use Terminal.receivedInputs() to check if there\u0026rsquo;s something to get! If there are none and you call this, It will error out!\nReturns:\n[ string ] The input that the user has entered. ","date":"0001-01-01","id":59,"permalink":"/docs/lua-api/components/terminal/","summary":"Description The terminal is like a display but more like a console you can write to, Instead of effects, it uses via GUI.","tags":[],"title":"Terminal"},{"content":"Unlike structures, these contain functions! Thats the only difference between Userdata\u0026rsquo;s and structures.\n","date":"0001-01-01","id":60,"permalink":"/docs/lua-api/user-data/","summary":"Unlike structures, these contain functions! Thats the only difference between Userdata\u0026rsquo;s and structures.","tags":[],"title":"Userdata"}]