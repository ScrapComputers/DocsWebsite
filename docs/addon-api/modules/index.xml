<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Modules on ScrapComputers</title><link>/docs/addon-api/modules/</link><description>Recent content in Modules on ScrapComputers</description><generator>Hugo</generator><language>en</language><copyright>Copyright (c) 2024-present The ScrapComputers Team</copyright><atom:link href="/docs/addon-api/modules/index.xml" rel="self" type="application/rss+xml"/><item><title>Audio</title><link>/docs/addon-api/modules/audio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/addon-api/modules/audio/</guid><description>The Audio Module for the computer API!
Structures AudioParameter Results for getParams
Fields: default [ number ] The default value maximum [ number ] The maximum value minimum [ number ] The minimum value ParamsIncorrectTable Result for areParamsCorrect.</description></item><item><title>Base64</title><link>/docs/addon-api/modules/base64/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/addon-api/modules/base64/</guid><description>The Base64 Module for the computer API!
Functions encode sm.scrapcomputers.base64.encode( data )Converts a string to be Base64 encoded
Arguments:</description></item><item><title>Bitstream</title><link>/docs/addon-api/modules/bitstream/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/addon-api/modules/bitstream/</guid><description>A BitStream Module that lets you make packet data (for example)
Functions new sm.scrapcomputers.bitstream.new( data )Creates a new BitStream Stream</description></item><item><title>Color</title><link>/docs/addon-api/modules/color/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/addon-api/modules/color/</guid><description>The Color Module for the computer API!
Functions newSingluar sm.scrapcomputers.color.newSingluar( rgbNum )Creates a new color from 1 value. Whatever rgbNum&amp;rsquo;s value has will be set on R, G, and B.</description></item><item><title>Json</title><link>/docs/addon-api/modules/json/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/addon-api/modules/json/</guid><description>The JSON Module for the computer API!
Functions isSafe sm.scrapcomputers.json.isSafe( root )Returns true if a tlua table is safe to convert to JSON.</description></item><item><title>Math</title><link>/docs/addon-api/modules/math/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/addon-api/modules/math/</guid><description>A helper module for your needs that are math-related
Functions clamp sm.scrapcomputers.math.clamp( value, min, max )Clamps a number value to be ranged from the min argument to the max argument.</description></item><item><title>Md5</title><link>/docs/addon-api/modules/md5/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/addon-api/modules/md5/</guid><description>An encryption module for MD5 only! (Even tho it&amp;rsquo;s no longer recommended to use this for encryption! )
Functions new sm.</description></item><item><title>Sha256</title><link>/docs/addon-api/modules/sha256/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/addon-api/modules/sha256/</guid><description>The SHA256 Module for the computer API!
You can only encode. Nothing else&amp;hellip;
Functions encode sm.scrapcomputers.sha256.encode( str )Encodes a string to be SHA256</description></item><item><title>Table</title><link>/docs/addon-api/modules/table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/addon-api/modules/table/</guid><description>The Table Module for the computer API!
Functions clone sm.scrapcomputers.table.clone( tbl )Clones a table
This function doesn't really need to existThis function is utterly unnecessary but in SOME situations is useful.</description></item><item><title>Util</title><link>/docs/addon-api/modules/util/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/addon-api/modules/util/</guid><description>The utility Module for the computer API!
Functions positiveModulo sm.scrapcomputers.util.positiveModulo( a, b )Gets the remainder of the division.
Did you know?</description></item></channel></rss>